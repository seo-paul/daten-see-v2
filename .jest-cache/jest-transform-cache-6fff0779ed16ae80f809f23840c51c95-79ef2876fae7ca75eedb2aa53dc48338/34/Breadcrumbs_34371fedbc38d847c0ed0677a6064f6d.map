{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/navigation/Breadcrumbs.tsx"],"sourcesContent":["'use client';\n\nimport { ChevronRight, Home } from 'lucide-react';\nimport type { Route } from 'next';\nimport Link from 'next/link';\n\nimport { useNavigation } from '@/contexts/NavigationContext';\n\ninterface BreadcrumbsProps {\n  className?: string;\n  showHome?: boolean;\n}\n\n/**\n * Breadcrumbs Component\n * Uses NavigationContext for state (no Zustand)\n */\nexport function Breadcrumbs({ \n  className = '', \n  showHome = true \n}: BreadcrumbsProps): React.ReactElement {\n  const { breadcrumbs } = useNavigation();\n\n  if (breadcrumbs.length === 0) {\n    return <div className={className}></div>;\n  }\n\n  return (\n    <nav className={`flex items-center space-x-2 text-sm ${className}`} aria-label=\"Breadcrumb\">\n      <ol className=\"flex items-center space-x-2\">\n        {breadcrumbs.map((breadcrumb, index) => {\n          const isLast = index === breadcrumbs.length - 1;\n          const isHome = breadcrumb.href === '/';\n\n          return (\n            <li key={breadcrumb.href} className=\"flex items-center\">\n              {/* Separator (not for first item) */}\n              {index > 0 && (\n                <ChevronRight className=\"h-4 w-4 text-gray-400 mx-2\" />\n              )}\n\n              {/* Breadcrumb Link */}\n              {isLast ? (\n                // Active/current page - no link\n                <span \n                  className=\"font-medium text-gray-900 flex items-center\"\n                  aria-current=\"page\"\n                >\n                  {isHome && showHome && <Home className=\"h-4 w-4 mr-1\" />}\n                  {breadcrumb.label}\n                </span>\n              ) : (\n                // Clickable breadcrumb\n                <Link\n                  href={breadcrumb.href as Route}\n                  className=\"text-gray-500 hover:text-gray-700 transition-colors flex items-center\"\n                >\n                  {isHome && showHome && <Home className=\"h-4 w-4 mr-1\" />}\n                  {breadcrumb.label}\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\n/**\n * Compact Breadcrumbs - shows only last 2 levels\n */\nexport function CompactBreadcrumbs({ className = '' }: { className?: string }): React.ReactElement {\n  const { breadcrumbs } = useNavigation();\n\n  // Show only last 2 breadcrumbs\n  const compactBreadcrumbs = breadcrumbs.slice(-2);\n\n  if (compactBreadcrumbs.length === 0) {\n    return <div className={className}></div>;\n  }\n\n  return (\n    <nav className={`flex items-center space-x-2 text-sm ${className}`} aria-label=\"Breadcrumb\">\n      <ol className=\"flex items-center space-x-2\">\n        {/* Show ellipsis if we're truncating */}\n        {breadcrumbs.length > 2 && (\n          <li className=\"text-gray-400\">\n            <span>...</span>\n            <ChevronRight className=\"h-4 w-4 text-gray-400 mx-2 inline\" />\n          </li>\n        )}\n\n        {compactBreadcrumbs.map((breadcrumb, index) => {\n          const isLast = index === compactBreadcrumbs.length - 1;\n\n          return (\n            <li key={breadcrumb.href} className=\"flex items-center\">\n              {/* Separator (not for first item) */}\n              {index > 0 && (\n                <ChevronRight className=\"h-4 w-4 text-gray-400 mx-2\" />\n              )}\n\n              {/* Breadcrumb Link */}\n              {isLast ? (\n                <span \n                  className=\"font-medium text-gray-900\"\n                  aria-current=\"page\"\n                >\n                  {breadcrumb.label}\n                </span>\n              ) : (\n                <Link\n                  href={breadcrumb.href as Route}\n                  className=\"text-gray-500 hover:text-gray-700 transition-colors\"\n                >\n                  {breadcrumb.label}\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}"],"names":["Breadcrumbs","CompactBreadcrumbs","className","showHome","breadcrumbs","useNavigation","length","div","nav","aria-label","ol","map","breadcrumb","index","isLast","isHome","href","li","ChevronRight","span","aria-current","Home","label","Link","compactBreadcrumbs","slice"],"mappings":"AAAA;;;;;;;;;;;;QAiBgBA;eAAAA;;QAuDAC;eAAAA;;;;6BAtEmB;6DAElB;mCAEa;;;;;;AAWvB,SAASD,YAAY,EAC1BE,YAAY,EAAE,EACdC,WAAW,IAAI,EACE;IACjB,MAAM,EAAEC,WAAW,EAAE,GAAGC,IAAAA,gCAAa;IAErC,IAAID,YAAYE,MAAM,KAAK,GAAG;QAC5B,qBAAO,qBAACC;YAAIL,WAAWA;;IACzB;IAEA,qBACE,qBAACM;QAAIN,WAAW,CAAC,oCAAoC,EAAEA,WAAW;QAAEO,cAAW;kBAC7E,cAAA,qBAACC;YAAGR,WAAU;sBACXE,YAAYO,GAAG,CAAC,CAACC,YAAYC;gBAC5B,MAAMC,SAASD,UAAUT,YAAYE,MAAM,GAAG;gBAC9C,MAAMS,SAASH,WAAWI,IAAI,KAAK;gBAEnC,qBACE,sBAACC;oBAAyBf,WAAU;;wBAEjCW,QAAQ,mBACP,qBAACK,yBAAY;4BAAChB,WAAU;;wBAIzBY,SACC,gCAAgC;sCAChC,sBAACK;4BACCjB,WAAU;4BACVkB,gBAAa;;gCAEZL,UAAUZ,0BAAY,qBAACkB,iBAAI;oCAACnB,WAAU;;gCACtCU,WAAWU,KAAK;;6BAGnB,uBAAuB;sCACvB,sBAACC,aAAI;4BACHP,MAAMJ,WAAWI,IAAI;4BACrBd,WAAU;;gCAETa,UAAUZ,0BAAY,qBAACkB,iBAAI;oCAACnB,WAAU;;gCACtCU,WAAWU,KAAK;;;;mBAvBdV,WAAWI,IAAI;YA4B5B;;;AAIR;AAKO,SAASf,mBAAmB,EAAEC,YAAY,EAAE,EAA0B;IAC3E,MAAM,EAAEE,WAAW,EAAE,GAAGC,IAAAA,gCAAa;IAErC,+BAA+B;IAC/B,MAAMmB,qBAAqBpB,YAAYqB,KAAK,CAAC,CAAC;IAE9C,IAAID,mBAAmBlB,MAAM,KAAK,GAAG;QACnC,qBAAO,qBAACC;YAAIL,WAAWA;;IACzB;IAEA,qBACE,qBAACM;QAAIN,WAAW,CAAC,oCAAoC,EAAEA,WAAW;QAAEO,cAAW;kBAC7E,cAAA,sBAACC;YAAGR,WAAU;;gBAEXE,YAAYE,MAAM,GAAG,mBACpB,sBAACW;oBAAGf,WAAU;;sCACZ,qBAACiB;sCAAK;;sCACN,qBAACD,yBAAY;4BAAChB,WAAU;;;;gBAI3BsB,mBAAmBb,GAAG,CAAC,CAACC,YAAYC;oBACnC,MAAMC,SAASD,UAAUW,mBAAmBlB,MAAM,GAAG;oBAErD,qBACE,sBAACW;wBAAyBf,WAAU;;4BAEjCW,QAAQ,mBACP,qBAACK,yBAAY;gCAAChB,WAAU;;4BAIzBY,uBACC,qBAACK;gCACCjB,WAAU;gCACVkB,gBAAa;0CAEZR,WAAWU,KAAK;+CAGnB,qBAACC,aAAI;gCACHP,MAAMJ,WAAWI,IAAI;gCACrBd,WAAU;0CAETU,WAAWU,KAAK;;;uBAnBdV,WAAWI,IAAI;gBAwB5B;;;;AAIR"}