812d2a38c6b8e0b5b85def054fe3cb69
/**
 * Token Manager Mock Scenarios
 * Complete implementation for auth testing
 */"use strict";

/* istanbul ignore next */
function cov_269jqqghwc() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/testing/token-manager-mock.tsx";
  var hash = "d1021f3f4666d273ee0011e1bd93de9afe325cde";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/testing/token-manager-mock.tsx",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 41
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 38
        }
      },
      "6": {
        start: {
          line: 22,
          column: 34
        },
        end: {
          line: 119,
          column: 1
        }
      },
      "7": {
        start: {
          line: 23,
          column: 26
        },
        end: {
          line: 40,
          column: 9
        }
      },
      "8": {
        start: {
          line: 25,
          column: 40
        },
        end: {
          line: 25,
          column: 44
        }
      },
      "9": {
        start: {
          line: 26,
          column: 41
        },
        end: {
          line: 26,
          column: 45
        }
      },
      "10": {
        start: {
          line: 29,
          column: 39
        },
        end: {
          line: 35,
          column: 17
        }
      },
      "11": {
        start: {
          line: 37,
          column: 44
        },
        end: {
          line: 37,
          column: 48
        }
      },
      "12": {
        start: {
          line: 38,
          column: 38
        },
        end: {
          line: 38,
          column: 43
        }
      },
      "13": {
        start: {
          line: 39,
          column: 43
        },
        end: {
          line: 39,
          column: 47
        }
      },
      "14": {
        start: {
          line: 41,
          column: 30
        },
        end: {
          line: 68,
          column: 9
        }
      },
      "15": {
        start: {
          line: 43,
          column: 40
        },
        end: {
          line: 43,
          column: 59
        }
      },
      "16": {
        start: {
          line: 44,
          column: 41
        },
        end: {
          line: 44,
          column: 61
        }
      },
      "17": {
        start: {
          line: 47,
          column: 39
        },
        end: {
          line: 53,
          column: 17
        }
      },
      "18": {
        start: {
          line: 55,
          column: 45
        },
        end: {
          line: 59,
          column: 17
        }
      },
      "19": {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 43
        }
      },
      "20": {
        start: {
          line: 61,
          column: 44
        },
        end: {
          line: 67,
          column: 17
        }
      },
      "21": {
        start: {
          line: 69,
          column: 29
        },
        end: {
          line: 96,
          column: 9
        }
      },
      "22": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 71,
          column: 58
        }
      },
      "23": {
        start: {
          line: 72,
          column: 41
        },
        end: {
          line: 72,
          column: 61
        }
      },
      "24": {
        start: {
          line: 75,
          column: 39
        },
        end: {
          line: 81,
          column: 17
        }
      },
      "25": {
        start: {
          line: 83,
          column: 45
        },
        end: {
          line: 87,
          column: 17
        }
      },
      "26": {
        start: {
          line: 88,
          column: 38
        },
        end: {
          line: 88,
          column: 43
        }
      },
      "27": {
        start: {
          line: 89,
          column: 44
        },
        end: {
          line: 95,
          column: 17
        }
      },
      "28": {
        start: {
          line: 97,
          column: 23
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "29": {
        start: {
          line: 99,
          column: 40
        },
        end: {
          line: 99,
          column: 44
        }
      },
      "30": {
        start: {
          line: 100,
          column: 41
        },
        end: {
          line: 100,
          column: 58
        }
      },
      "31": {
        start: {
          line: 103,
          column: 39
        },
        end: {
          line: 109,
          column: 17
        }
      },
      "32": {
        start: {
          line: 111,
          column: 44
        },
        end: {
          line: 111,
          column: 48
        }
      },
      "33": {
        start: {
          line: 112,
          column: 38
        },
        end: {
          line: 112,
          column: 42
        }
      },
      "34": {
        start: {
          line: 113,
          column: 43
        },
        end: {
          line: 113,
          column: 47
        }
      },
      "35": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 63
        }
      },
      "36": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 138,
          column: 6
        }
      },
      "37": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 123,
          column: 40
        }
      },
      "38": {
        start: {
          line: 124,
          column: 37
        },
        end: {
          line: 124,
          column: 41
        }
      },
      "39": {
        start: {
          line: 127,
          column: 35
        },
        end: {
          line: 133,
          column: 13
        }
      },
      "40": {
        start: {
          line: 135,
          column: 40
        },
        end: {
          line: 135,
          column: 44
        }
      },
      "41": {
        start: {
          line: 136,
          column: 34
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "42": {
        start: {
          line: 137,
          column: 39
        },
        end: {
          line: 137,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 37
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 34
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 22
          }
        },
        loc: {
          start: {
            line: 23,
            column: 26
          },
          end: {
            line: 40,
            column: 9
          }
        },
        line: 23
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 36
          },
          end: {
            line: 25,
            column: 37
          }
        },
        loc: {
          start: {
            line: 25,
            column: 40
          },
          end: {
            line: 25,
            column: 44
          }
        },
        line: 25
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 26,
            column: 37
          },
          end: {
            line: 26,
            column: 38
          }
        },
        loc: {
          start: {
            line: 26,
            column: 41
          },
          end: {
            line: 26,
            column: 45
          }
        },
        line: 26
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 29,
            column: 34
          },
          end: {
            line: 29,
            column: 35
          }
        },
        loc: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 35,
            column: 17
          }
        },
        line: 29
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 40
          },
          end: {
            line: 37,
            column: 41
          }
        },
        loc: {
          start: {
            line: 37,
            column: 44
          },
          end: {
            line: 37,
            column: 48
          }
        },
        line: 37
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 38,
            column: 35
          }
        },
        loc: {
          start: {
            line: 38,
            column: 38
          },
          end: {
            line: 38,
            column: 43
          }
        },
        line: 38
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 40
          }
        },
        loc: {
          start: {
            line: 39,
            column: 43
          },
          end: {
            line: 39,
            column: 47
          }
        },
        line: 39
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 17
          }
        },
        loc: {
          start: {
            line: 41,
            column: 30
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 41
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 43,
            column: 36
          },
          end: {
            line: 43,
            column: 37
          }
        },
        loc: {
          start: {
            line: 43,
            column: 40
          },
          end: {
            line: 43,
            column: 59
          }
        },
        line: 43
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 38
          }
        },
        loc: {
          start: {
            line: 44,
            column: 41
          },
          end: {
            line: 44,
            column: 61
          }
        },
        line: 44
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 47,
            column: 34
          },
          end: {
            line: 47,
            column: 35
          }
        },
        loc: {
          start: {
            line: 47,
            column: 39
          },
          end: {
            line: 53,
            column: 17
          }
        },
        line: 47
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 55,
            column: 40
          },
          end: {
            line: 55,
            column: 41
          }
        },
        loc: {
          start: {
            line: 55,
            column: 45
          },
          end: {
            line: 59,
            column: 17
          }
        },
        line: 55
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 60,
            column: 34
          },
          end: {
            line: 60,
            column: 35
          }
        },
        loc: {
          start: {
            line: 60,
            column: 38
          },
          end: {
            line: 60,
            column: 43
          }
        },
        line: 60
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 61,
            column: 39
          },
          end: {
            line: 61,
            column: 40
          }
        },
        loc: {
          start: {
            line: 61,
            column: 44
          },
          end: {
            line: 67,
            column: 17
          }
        },
        line: 61
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 69,
            column: 24
          },
          end: {
            line: 69,
            column: 25
          }
        },
        loc: {
          start: {
            line: 69,
            column: 29
          },
          end: {
            line: 96,
            column: 9
          }
        },
        line: 69
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 71,
            column: 37
          }
        },
        loc: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 58
          }
        },
        line: 71
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 72,
            column: 37
          },
          end: {
            line: 72,
            column: 38
          }
        },
        loc: {
          start: {
            line: 72,
            column: 41
          },
          end: {
            line: 72,
            column: 61
          }
        },
        line: 72
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 75,
            column: 34
          },
          end: {
            line: 75,
            column: 35
          }
        },
        loc: {
          start: {
            line: 75,
            column: 39
          },
          end: {
            line: 81,
            column: 17
          }
        },
        line: 75
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 41
          }
        },
        loc: {
          start: {
            line: 83,
            column: 45
          },
          end: {
            line: 87,
            column: 17
          }
        },
        line: 83
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 88,
            column: 34
          },
          end: {
            line: 88,
            column: 35
          }
        },
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 43
          }
        },
        line: 88
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 89,
            column: 39
          },
          end: {
            line: 89,
            column: 40
          }
        },
        loc: {
          start: {
            line: 89,
            column: 44
          },
          end: {
            line: 95,
            column: 17
          }
        },
        line: 89
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 97,
            column: 18
          },
          end: {
            line: 97,
            column: 19
          }
        },
        loc: {
          start: {
            line: 97,
            column: 23
          },
          end: {
            line: 114,
            column: 9
          }
        },
        line: 97
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 99,
            column: 37
          }
        },
        loc: {
          start: {
            line: 99,
            column: 40
          },
          end: {
            line: 99,
            column: 44
          }
        },
        line: 99
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 100,
            column: 37
          },
          end: {
            line: 100,
            column: 38
          }
        },
        loc: {
          start: {
            line: 100,
            column: 41
          },
          end: {
            line: 100,
            column: 58
          }
        },
        line: 100
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 103,
            column: 34
          },
          end: {
            line: 103,
            column: 35
          }
        },
        loc: {
          start: {
            line: 103,
            column: 39
          },
          end: {
            line: 109,
            column: 17
          }
        },
        line: 103
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 111,
            column: 40
          },
          end: {
            line: 111,
            column: 41
          }
        },
        loc: {
          start: {
            line: 111,
            column: 44
          },
          end: {
            line: 111,
            column: 48
          }
        },
        line: 111
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 112,
            column: 34
          },
          end: {
            line: 112,
            column: 35
          }
        },
        loc: {
          start: {
            line: 112,
            column: 38
          },
          end: {
            line: 112,
            column: 42
          }
        },
        line: 112
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 113,
            column: 39
          },
          end: {
            line: 113,
            column: 40
          }
        },
        loc: {
          start: {
            line: 113,
            column: 43
          },
          end: {
            line: 113,
            column: 47
          }
        },
        line: 113
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 116,
            column: 23
          },
          end: {
            line: 116,
            column: 24
          }
        },
        loc: {
          start: {
            line: 116,
            column: 36
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      },
      "32": {
        name: "createMockTokenManager",
        decl: {
          start: {
            line: 120,
            column: 9
          },
          end: {
            line: 120,
            column: 31
          }
        },
        loc: {
          start: {
            line: 120,
            column: 34
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 120
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 123,
            column: 32
          },
          end: {
            line: 123,
            column: 33
          }
        },
        loc: {
          start: {
            line: 123,
            column: 36
          },
          end: {
            line: 123,
            column: 40
          }
        },
        line: 123
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 124,
            column: 33
          },
          end: {
            line: 124,
            column: 34
          }
        },
        loc: {
          start: {
            line: 124,
            column: 37
          },
          end: {
            line: 124,
            column: 41
          }
        },
        line: 124
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 127,
            column: 31
          }
        },
        loc: {
          start: {
            line: 127,
            column: 35
          },
          end: {
            line: 133,
            column: 13
          }
        },
        line: 127
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 135,
            column: 36
          },
          end: {
            line: 135,
            column: 37
          }
        },
        loc: {
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 44
          }
        },
        line: 135
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 31
          }
        },
        loc: {
          start: {
            line: 136,
            column: 34
          },
          end: {
            line: 136,
            column: 39
          }
        },
        line: 136
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 137,
            column: 35
          },
          end: {
            line: 137,
            column: 36
          }
        },
        loc: {
          start: {
            line: 137,
            column: 39
          },
          end: {
            line: 137,
            column: 43
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 56,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 28
          },
          end: {
            line: 56,
            column: 45
          }
        }, {
          start: {
            line: 56,
            column: 49
          },
          end: {
            line: 56,
            column: 63
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 57,
            column: 27
          },
          end: {
            line: 57,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 27
          },
          end: {
            line: 57,
            column: 43
          }
        }, {
          start: {
            line: 57,
            column: 47
          },
          end: {
            line: 57,
            column: 65
          }
        }],
        line: 57
      },
      "2": {
        loc: {
          start: {
            line: 58,
            column: 26
          },
          end: {
            line: 58,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 26
          },
          end: {
            line: 58,
            column: 41
          }
        }, {
          start: {
            line: 58,
            column: 45
          },
          end: {
            line: 58,
            column: 51
          }
        }],
        line: 58
      },
      "3": {
        loc: {
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 62,
            column: 25
          },
          end: {
            line: 62,
            column: 42
          }
        }, {
          start: {
            line: 62,
            column: 46
          },
          end: {
            line: 62,
            column: 60
          }
        }],
        line: 62
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 27
          },
          end: {
            line: 63,
            column: 43
          }
        }, {
          start: {
            line: 63,
            column: 47
          },
          end: {
            line: 63,
            column: 65
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 64,
            column: 26
          },
          end: {
            line: 64,
            column: 41
          }
        }, {
          start: {
            line: 64,
            column: 45
          },
          end: {
            line: 64,
            column: 51
          }
        }],
        line: 64
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/testing/token-manager-mock.tsx"],
      sourcesContent: ["/**\n * Token Manager Mock Scenarios\n * Complete implementation for auth testing\n */\n\nimport type { TokenManager, StoredTokenInfo } from '@/lib/auth/token';\n\nexport const TokenManagerMockScenarios = {\n  unauthenticated: (): TokenManager => ({\n    isClient: true,\n    getAccessToken: jest.fn(() => null),\n    getRefreshToken: jest.fn(() => null),\n    setTokens: jest.fn(),\n    clearTokens: jest.fn(),\n    getTokenInfo: jest.fn(() => ({\n      token: null,\n      refreshToken: null,\n      expiresAt: null,\n      isValid: false,\n      isExpired: true,\n    } as StoredTokenInfo)),\n    updateApiClientToken: jest.fn(),\n    getCurrentUserInfo: jest.fn(() => null),\n    needsRefresh: jest.fn(() => false),\n    parseTokenPayload: jest.fn(() => null),\n  } as TokenManager),\n\n  customUser: (overrides?: { userId?: string; email?: string; role?: 'user' | 'admin' }): TokenManager => ({\n    isClient: true,\n    getAccessToken: jest.fn(() => 'mock-access-token'),\n    getRefreshToken: jest.fn(() => 'mock-refresh-token'),\n    setTokens: jest.fn(),\n    clearTokens: jest.fn(),\n    getTokenInfo: jest.fn(() => ({\n      token: 'mock-access-token',\n      refreshToken: 'mock-refresh-token',\n      expiresAt: new Date(Date.now() + 3600000),\n      isValid: true,\n      isExpired: false,\n    } as StoredTokenInfo)),\n    updateApiClientToken: jest.fn(),\n    getCurrentUserInfo: jest.fn(() => ({\n      userId: overrides?.userId || 'test-user-id',\n      email: overrides?.email || 'test@example.com',\n      role: overrides?.role || 'user',\n    })),\n    needsRefresh: jest.fn(() => false),\n    parseTokenPayload: jest.fn(() => ({\n      sub: overrides?.userId || 'test-user-id',\n      email: overrides?.email || 'test@example.com',\n      role: overrides?.role || 'user',\n      exp: Math.floor((Date.now() + 3600000) / 1000),\n      iat: Math.floor(Date.now() / 1000),\n    })),\n  } as TokenManager),\n\n  authenticatedAdmin: (): TokenManager => ({\n    isClient: true,\n    getAccessToken: jest.fn(() => 'mock-admin-token'),\n    getRefreshToken: jest.fn(() => 'mock-admin-refresh'),\n    setTokens: jest.fn(),\n    clearTokens: jest.fn(),\n    getTokenInfo: jest.fn(() => ({\n      token: 'mock-admin-token',\n      refreshToken: 'mock-admin-refresh',\n      expiresAt: new Date(Date.now() + 3600000),\n      isValid: true,\n      isExpired: false,\n    } as StoredTokenInfo)),\n    updateApiClientToken: jest.fn(),\n    getCurrentUserInfo: jest.fn(() => ({\n      userId: 'admin-user-id',\n      email: 'admin@example.com',\n      role: 'admin',\n    })),\n    needsRefresh: jest.fn(() => false),\n    parseTokenPayload: jest.fn(() => ({\n      sub: 'admin-user-id',\n      email: 'admin@example.com',\n      role: 'admin',\n      exp: Math.floor((Date.now() + 3600000) / 1000),\n      iat: Math.floor(Date.now() / 1000),\n    })),\n  } as TokenManager),\n\n  expiredToken: (): TokenManager => ({\n    isClient: true,\n    getAccessToken: jest.fn(() => null),\n    getRefreshToken: jest.fn(() => 'expired-refresh'),\n    setTokens: jest.fn(),\n    clearTokens: jest.fn(),\n    getTokenInfo: jest.fn(() => ({\n      token: 'expired-token',\n      refreshToken: 'expired-refresh',\n      expiresAt: new Date(Date.now() - 3600000),\n      isValid: false,\n      isExpired: true,\n    } as StoredTokenInfo)),\n    updateApiClientToken: jest.fn(),\n    getCurrentUserInfo: jest.fn(() => null),\n    needsRefresh: jest.fn(() => true),\n    parseTokenPayload: jest.fn(() => null),\n  } as TokenManager),\n\n  // Alias for backward compatibility\n  authenticatedUser: (overrides?: { userId?: string; email?: string; role?: 'user' | 'admin' }): TokenManager => {\n    return TokenManagerMockScenarios.customUser(overrides);\n  },\n};\n\n/**\n * Create a fresh mock TokenManager with all methods as jest.fn()\n * Useful for tests that need to customize behavior extensively\n */\nexport function createMockTokenManager(): TokenManager {\n  return {\n    isClient: true,\n    getAccessToken: jest.fn(() => null),\n    getRefreshToken: jest.fn(() => null),\n    setTokens: jest.fn(),\n    clearTokens: jest.fn(),\n    getTokenInfo: jest.fn(() => ({\n      token: null,\n      refreshToken: null,\n      expiresAt: null,\n      isValid: false,\n      isExpired: true,\n    } as StoredTokenInfo)),\n    updateApiClientToken: jest.fn(),\n    getCurrentUserInfo: jest.fn(() => null),\n    needsRefresh: jest.fn(() => false),\n    parseTokenPayload: jest.fn(() => null),\n  } as TokenManager;\n}"],
      names: ["TokenManagerMockScenarios", "createMockTokenManager", "unauthenticated", "isClient", "getAccessToken", "jest", "fn", "getRefreshToken", "setTokens", "clearTokens", "getTokenInfo", "token", "refreshToken", "expiresAt", "isValid", "isExpired", "updateApiClientToken", "getCurrentUserInfo", "needsRefresh", "parseTokenPayload", "customUser", "overrides", "Date", "now", "userId", "email", "role", "sub", "exp", "Math", "floor", "iat", "authenticatedAdmin", "expiredToken", "authenticatedUser"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d1021f3f4666d273ee0011e1bd93de9afe325cde"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_269jqqghwc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_269jqqghwc();
cov_269jqqghwc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_269jqqghwc().f[0]++;
  cov_269jqqghwc().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_269jqqghwc().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_269jqqghwc().s[3]++;
_export(exports, {
  get TokenManagerMockScenarios() {
    /* istanbul ignore next */
    cov_269jqqghwc().f[1]++;
    cov_269jqqghwc().s[4]++;
    return TokenManagerMockScenarios;
  },
  get createMockTokenManager() {
    /* istanbul ignore next */
    cov_269jqqghwc().f[2]++;
    cov_269jqqghwc().s[5]++;
    return createMockTokenManager;
  }
});
const TokenManagerMockScenarios =
/* istanbul ignore next */
(cov_269jqqghwc().s[6]++, {
  unauthenticated: () => {
    /* istanbul ignore next */
    cov_269jqqghwc().f[3]++;
    cov_269jqqghwc().s[7]++;
    return {
      isClient: true,
      getAccessToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[4]++;
        cov_269jqqghwc().s[8]++;
        return null;
      }),
      getRefreshToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[5]++;
        cov_269jqqghwc().s[9]++;
        return null;
      }),
      setTokens: jest.fn(),
      clearTokens: jest.fn(),
      getTokenInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[6]++;
        cov_269jqqghwc().s[10]++;
        return {
          token: null,
          refreshToken: null,
          expiresAt: null,
          isValid: false,
          isExpired: true
        };
      }),
      updateApiClientToken: jest.fn(),
      getCurrentUserInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[7]++;
        cov_269jqqghwc().s[11]++;
        return null;
      }),
      needsRefresh: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[8]++;
        cov_269jqqghwc().s[12]++;
        return false;
      }),
      parseTokenPayload: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[9]++;
        cov_269jqqghwc().s[13]++;
        return null;
      })
    };
  },
  customUser: overrides => {
    /* istanbul ignore next */
    cov_269jqqghwc().f[10]++;
    cov_269jqqghwc().s[14]++;
    return {
      isClient: true,
      getAccessToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[11]++;
        cov_269jqqghwc().s[15]++;
        return 'mock-access-token';
      }),
      getRefreshToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[12]++;
        cov_269jqqghwc().s[16]++;
        return 'mock-refresh-token';
      }),
      setTokens: jest.fn(),
      clearTokens: jest.fn(),
      getTokenInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[13]++;
        cov_269jqqghwc().s[17]++;
        return {
          token: 'mock-access-token',
          refreshToken: 'mock-refresh-token',
          expiresAt: new Date(Date.now() + 3600000),
          isValid: true,
          isExpired: false
        };
      }),
      updateApiClientToken: jest.fn(),
      getCurrentUserInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[14]++;
        cov_269jqqghwc().s[18]++;
        return {
          userId:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[0][0]++, overrides?.userId) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[0][1]++, 'test-user-id'),
          email:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[1][0]++, overrides?.email) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[1][1]++, 'test@example.com'),
          role:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[2][0]++, overrides?.role) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[2][1]++, 'user')
        };
      }),
      needsRefresh: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[15]++;
        cov_269jqqghwc().s[19]++;
        return false;
      }),
      parseTokenPayload: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[16]++;
        cov_269jqqghwc().s[20]++;
        return {
          sub:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[3][0]++, overrides?.userId) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[3][1]++, 'test-user-id'),
          email:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[4][0]++, overrides?.email) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[4][1]++, 'test@example.com'),
          role:
          /* istanbul ignore next */
          (cov_269jqqghwc().b[5][0]++, overrides?.role) ||
          /* istanbul ignore next */
          (cov_269jqqghwc().b[5][1]++, 'user'),
          exp: Math.floor((Date.now() + 3600000) / 1000),
          iat: Math.floor(Date.now() / 1000)
        };
      })
    };
  },
  authenticatedAdmin: () => {
    /* istanbul ignore next */
    cov_269jqqghwc().f[17]++;
    cov_269jqqghwc().s[21]++;
    return {
      isClient: true,
      getAccessToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[18]++;
        cov_269jqqghwc().s[22]++;
        return 'mock-admin-token';
      }),
      getRefreshToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[19]++;
        cov_269jqqghwc().s[23]++;
        return 'mock-admin-refresh';
      }),
      setTokens: jest.fn(),
      clearTokens: jest.fn(),
      getTokenInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[20]++;
        cov_269jqqghwc().s[24]++;
        return {
          token: 'mock-admin-token',
          refreshToken: 'mock-admin-refresh',
          expiresAt: new Date(Date.now() + 3600000),
          isValid: true,
          isExpired: false
        };
      }),
      updateApiClientToken: jest.fn(),
      getCurrentUserInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[21]++;
        cov_269jqqghwc().s[25]++;
        return {
          userId: 'admin-user-id',
          email: 'admin@example.com',
          role: 'admin'
        };
      }),
      needsRefresh: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[22]++;
        cov_269jqqghwc().s[26]++;
        return false;
      }),
      parseTokenPayload: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[23]++;
        cov_269jqqghwc().s[27]++;
        return {
          sub: 'admin-user-id',
          email: 'admin@example.com',
          role: 'admin',
          exp: Math.floor((Date.now() + 3600000) / 1000),
          iat: Math.floor(Date.now() / 1000)
        };
      })
    };
  },
  expiredToken: () => {
    /* istanbul ignore next */
    cov_269jqqghwc().f[24]++;
    cov_269jqqghwc().s[28]++;
    return {
      isClient: true,
      getAccessToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[25]++;
        cov_269jqqghwc().s[29]++;
        return null;
      }),
      getRefreshToken: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[26]++;
        cov_269jqqghwc().s[30]++;
        return 'expired-refresh';
      }),
      setTokens: jest.fn(),
      clearTokens: jest.fn(),
      getTokenInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[27]++;
        cov_269jqqghwc().s[31]++;
        return {
          token: 'expired-token',
          refreshToken: 'expired-refresh',
          expiresAt: new Date(Date.now() - 3600000),
          isValid: false,
          isExpired: true
        };
      }),
      updateApiClientToken: jest.fn(),
      getCurrentUserInfo: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[28]++;
        cov_269jqqghwc().s[32]++;
        return null;
      }),
      needsRefresh: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[29]++;
        cov_269jqqghwc().s[33]++;
        return true;
      }),
      parseTokenPayload: jest.fn(() => {
        /* istanbul ignore next */
        cov_269jqqghwc().f[30]++;
        cov_269jqqghwc().s[34]++;
        return null;
      })
    };
  },
  // Alias for backward compatibility
  authenticatedUser: overrides => {
    /* istanbul ignore next */
    cov_269jqqghwc().f[31]++;
    cov_269jqqghwc().s[35]++;
    return TokenManagerMockScenarios.customUser(overrides);
  }
});
function createMockTokenManager() {
  /* istanbul ignore next */
  cov_269jqqghwc().f[32]++;
  cov_269jqqghwc().s[36]++;
  return {
    isClient: true,
    getAccessToken: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[33]++;
      cov_269jqqghwc().s[37]++;
      return null;
    }),
    getRefreshToken: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[34]++;
      cov_269jqqghwc().s[38]++;
      return null;
    }),
    setTokens: jest.fn(),
    clearTokens: jest.fn(),
    getTokenInfo: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[35]++;
      cov_269jqqghwc().s[39]++;
      return {
        token: null,
        refreshToken: null,
        expiresAt: null,
        isValid: false,
        isExpired: true
      };
    }),
    updateApiClientToken: jest.fn(),
    getCurrentUserInfo: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[36]++;
      cov_269jqqghwc().s[40]++;
      return null;
    }),
    needsRefresh: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[37]++;
      cov_269jqqghwc().s[41]++;
      return false;
    }),
    parseTokenPayload: jest.fn(() => {
      /* istanbul ignore next */
      cov_269jqqghwc().f[38]++;
      cov_269jqqghwc().s[42]++;
      return null;
    })
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,