12d0e4be821006a2cb51c7c66ee5f93a
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EditDashboardModal", {
    enumerable: true,
    get: function() {
        return EditDashboardModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _lucidereact = require("lucide-react");
const _react = require("react");
const _sanitization = require("../../lib/utils/sanitization");
function EditDashboardModal({ dashboard, isOpen, onClose, onSubmit, isLoading }) {
    const [formData, setFormData] = (0, _react.useState)({
        name: '',
        description: '',
        isPublic: false
    });
    const [errors, setErrors] = (0, _react.useState)({});
    // Update form when dashboard changes
    (0, _react.useEffect)(()=>{
        if (dashboard) {
            setFormData({
                name: dashboard.name,
                description: dashboard.description,
                isPublic: dashboard.isPublic
            });
            setErrors({});
        }
    }, [
        dashboard
    ]);
    const validateForm = ()=>{
        const newErrors = {};
        if (!formData.name.trim()) {
            newErrors.name = 'Name ist erforderlich';
        } else if (formData.name.length < 3) {
            newErrors.name = 'Name muss mindestens 3 Zeichen lang sein';
        }
        if (!formData.description.trim()) {
            newErrors.description = 'Beschreibung ist erforderlich';
        } else if (formData.description.length < 10) {
            newErrors.description = 'Beschreibung muss mindestens 10 Zeichen lang sein';
        }
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSubmit = async (e)=>{
        e.preventDefault();
        if (!dashboard || !validateForm()) {
            return;
        }
        try {
            // Sanitize input data before submission
            const sanitizedData = {
                id: dashboard.id,
                name: (0, _sanitization.sanitizeName)(formData.name, 100),
                description: (0, _sanitization.sanitizeTextContent)(formData.description),
                isPublic: formData.isPublic
            };
            await onSubmit(sanitizedData);
            onClose();
        } catch (error) {
            // Check if it's a sanitization error
            if (error instanceof Error && error.message.includes('Name cannot')) {
                setErrors({
                    name: error.message
                });
            } else {
                // Other errors are handled in the parent component
                throw error;
            }
        }
    };
    const handleClose = ()=>{
        setErrors({});
        onClose();
    };
    if (!isOpen || !dashboard) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 bg-black/50 z-40",
                onClick: handleClose
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 flex items-center justify-center z-50 p-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "bg-[#FDF9F3] rounded-lg shadow-xl w-full max-w-md",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between p-6 border-b border-[#E6D7B8]",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    className: "text-lg font-semibold text-[#3d3d3d]",
                                    children: "Dashboard bearbeiten"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "button",
                                    onClick: handleClose,
                                    className: "p-2 text-[#5d5d5d] hover:text-[#3d3d3d] hover:bg-[#FBF5ED] rounded-lg transition-colors",
                                    "aria-label": "Close modal",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-5 h-5"
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                            onSubmit: handleSubmit,
                            className: "p-6 space-y-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "edit-dashboard-name",
                                            className: "block text-sm font-medium text-[#3d3d3d] mb-2",
                                            children: "Dashboard Name"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            id: "edit-dashboard-name",
                                            type: "text",
                                            value: formData.name,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        name: e.target.value
                                                    })),
                                            className: `w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] transition-colors ${errors.name ? 'border-red-300' : 'border-[#E6D7B8]'}`,
                                            placeholder: "z.B. Sales Analytics",
                                            disabled: isLoading
                                        }),
                                        errors.name && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "mt-1 text-sm text-red-600",
                                            children: errors.name
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "edit-dashboard-description",
                                            className: "block text-sm font-medium text-[#3d3d3d] mb-2",
                                            children: "Beschreibung"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("textarea", {
                                            id: "edit-dashboard-description",
                                            value: formData.description,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        description: e.target.value
                                                    })),
                                            rows: 3,
                                            className: `w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] resize-none transition-colors ${errors.description ? 'border-red-300' : 'border-[#E6D7B8]'}`,
                                            placeholder: "Beschreibe das Dashboard und seinen Zweck...",
                                            disabled: isLoading
                                        }),
                                        errors.description && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "mt-1 text-sm text-red-600",
                                            children: errors.description
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "checkbox",
                                            id: "isPublic",
                                            checked: formData.isPublic,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        isPublic: e.target.checked
                                                    })),
                                            className: "w-4 h-4 text-[#2F4F73] border-[#E6D7B8] rounded focus:ring-[#2F4F73]",
                                            disabled: isLoading
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "isPublic",
                                            className: "ml-2 text-sm text-[#3d3d3d]",
                                            children: "Dashboard \xf6ffentlich machen"
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-end space-x-3 p-6 border-t border-[#E6D7B8]",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "button",
                                    onClick: handleClose,
                                    className: "px-4 py-2 text-sm font-medium text-[#3d3d3d] bg-[#FBF5ED] hover:bg-[#F5EFE7] rounded-lg transition-colors",
                                    disabled: isLoading,
                                    children: "Abbrechen"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "submit",
                                    onClick: handleSubmit,
                                    disabled: isLoading,
                                    className: "px-4 py-2 text-sm font-medium text-white bg-[#2F4F73] hover:bg-[#365C83] rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
                                    children: isLoading ? 'Speichere...' : 'Änderungen speichern'
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,