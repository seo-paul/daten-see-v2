c160c8bc5f1448da488d181dd44c8495
'use client';
"use strict";

/* istanbul ignore next */
function cov_2hsu73lses() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/app/dashboard/page.tsx";
  var hash = "d8c7c38beb1282aea094f99ee89592ba98984786";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/app/dashboard/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "5": {
        start: {
          line: 14,
          column: 15
        },
        end: {
          line: 14,
          column: 31
        }
      },
      "6": {
        start: {
          line: 15,
          column: 23
        },
        end: {
          line: 15,
          column: 71
        }
      },
      "7": {
        start: {
          line: 16,
          column: 25
        },
        end: {
          line: 16,
          column: 75
        }
      },
      "8": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 65
        }
      },
      "9": {
        start: {
          line: 18,
          column: 23
        },
        end: {
          line: 18,
          column: 59
        }
      },
      "10": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 62
        }
      },
      "11": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 57
        }
      },
      "12": {
        start: {
          line: 23,
          column: 44
        },
        end: {
          line: 23,
          column: 79
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 7
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 60
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 63,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "DashboardPage",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 22
          }
        },
        loc: {
          start: {
            line: 20,
            column: 25
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 26
          },
          end: {
            line: 25,
            column: 27
          }
        },
        loc: {
          start: {
            line: 25,
            column: 30
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 41,
            column: 34
          },
          end: {
            line: 58,
            column: 26
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 41,
            column: 60
          },
          end: {
            line: 44,
            column: 26
          }
        }, {
          start: {
            line: 44,
            column: 43
          },
          end: {
            line: 58,
            column: 26
          }
        }],
        line: 41
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 40
          },
          end: {
            line: 53,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 68
          },
          end: {
            line: 53,
            column: 85
          }
        }, {
          start: {
            line: 53,
            column: 88
          },
          end: {
            line: 53,
            column: 89
          }
        }],
        line: 53
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/app/dashboard/page.tsx"],
      sourcesContent: ["'use client';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useEffect } from 'react';\n\nimport { DashboardGrid } from '@/components/layout/DashboardGrid';\nimport { DashboardHeader } from '@/components/layout/DashboardHeader';\nimport { MainLayout } from '@/components/layout/MainLayout';\nimport { useDashboards } from '@/hooks/useDashboards';\nimport { prefetchDashboards } from '@/lib/tanstack-query/prefetch';\n\n\nexport default function DashboardPage(): React.ReactElement {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const queryClient = useQueryClient();\n  const { data: dashboards, isLoading } = useDashboards();\n\n  // Prefetch dashboards on page load for performance\n  useEffect(() => {\n    void prefetchDashboards(queryClient);\n  }, [queryClient]);\n\n  return (\n    <MainLayout>\n      <div className=\"flex flex-col min-h-screen bg-[#FEFCF9]\">\n        {/* Dashboard Header */}\n        <DashboardHeader\n          title=\"Marketing Analytics\"\n          subtitle=\"Google Ads, Facebook & LinkedIn Daten \u2022 Ansichtsmodus\"\n        />\n\n        {/* Main Dashboard Content */}\n        <DashboardGrid>\n          {/* Show loading state or dashboard info */}\n          <div className=\"text-center text-[#5d5d5d] py-12\">\n            {isLoading ? (\n              <p className=\"text-lg font-medium mb-2\">Loading dashboards...</p>\n            ) : (\n              <>\n                <p className=\"text-lg font-medium mb-2\">Dashboard Grid bereit</p>\n                <p className=\"text-sm\">\n                  {Array.isArray(dashboards) ? dashboards.length : 0} Dashboard(s) geladen \u2022 Widgets werden in Task 1.7 implementiert\n                </p>\n              </>\n            )}\n          </div>\n        </DashboardGrid>\n      </div>\n    </MainLayout>\n  );\n}"],
      names: ["DashboardPage", "queryClient", "useQueryClient", "data", "dashboards", "isLoading", "useDashboards", "useEffect", "prefetchDashboards", "MainLayout", "div", "className", "DashboardHeader", "title", "subtitle", "DashboardGrid", "p", "Array", "isArray", "length"],
      mappings: "AAAA;;;;;+BAYA;;;eAAwBA;;;;4BAVO;uBACL;+BAEI;iCACE;4BACL;+BACG;0BACK;AAGpB,SAASA;IACtB,uDAAuD;IACvD,MAAMC,cAAcC,IAAAA,0BAAc;IAClC,MAAM,EAAEC,MAAMC,UAAU,EAAEC,SAAS,EAAE,GAAGC,IAAAA,4BAAa;IAErD,mDAAmD;IACnDC,IAAAA,gBAAS,EAAC;QACR,KAAKC,IAAAA,4BAAkB,EAACP;IAC1B,GAAG;QAACA;KAAY;IAEhB,qBACE,qBAACQ,sBAAU;kBACT,cAAA,sBAACC;YAAIC,WAAU;;8BAEb,qBAACC,gCAAe;oBACdC,OAAM;oBACNC,UAAS;;8BAIX,qBAACC,4BAAa;8BAEZ,cAAA,qBAACL;wBAAIC,WAAU;kCACZN,0BACC,qBAACW;4BAAEL,WAAU;sCAA2B;2CAExC;;8CACE,qBAACK;oCAAEL,WAAU;8CAA2B;;8CACxC,sBAACK;oCAAEL,WAAU;;wCACVM,MAAMC,OAAO,CAACd,cAAcA,WAAWe,MAAM,GAAG;wCAAE;;;;;;;;;;AASrE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d8c7c38beb1282aea094f99ee89592ba98984786"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2hsu73lses = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2hsu73lses();
cov_2hsu73lses().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2hsu73lses().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2hsu73lses().f[0]++;
    cov_2hsu73lses().s[2]++;
    return DashboardPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2hsu73lses().s[3]++, require("react/jsx-runtime"));
const _reactquery =
/* istanbul ignore next */
(cov_2hsu73lses().s[4]++, require("@tanstack/react-query"));
const _react =
/* istanbul ignore next */
(cov_2hsu73lses().s[5]++, require("react"));
const _DashboardGrid =
/* istanbul ignore next */
(cov_2hsu73lses().s[6]++, require("../../components/layout/DashboardGrid"));
const _DashboardHeader =
/* istanbul ignore next */
(cov_2hsu73lses().s[7]++, require("../../components/layout/DashboardHeader"));
const _MainLayout =
/* istanbul ignore next */
(cov_2hsu73lses().s[8]++, require("../../components/layout/MainLayout"));
const _useDashboards =
/* istanbul ignore next */
(cov_2hsu73lses().s[9]++, require("../../hooks/useDashboards"));
const _prefetch =
/* istanbul ignore next */
(cov_2hsu73lses().s[10]++, require("../../lib/tanstack-query/prefetch"));
function DashboardPage() {
  /* istanbul ignore next */
  cov_2hsu73lses().f[1]++;
  // eslint-disable-next-line react-hooks/exhaustive-deps
  const queryClient =
  /* istanbul ignore next */
  (cov_2hsu73lses().s[11]++, (0, _reactquery.useQueryClient)());
  const {
    data: dashboards,
    isLoading
  } =
  /* istanbul ignore next */
  (cov_2hsu73lses().s[12]++, (0, _useDashboards.useDashboards)());
  // Prefetch dashboards on page load for performance
  /* istanbul ignore next */
  cov_2hsu73lses().s[13]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2hsu73lses().f[2]++;
    cov_2hsu73lses().s[14]++;
    void (0, _prefetch.prefetchDashboards)(queryClient);
  }, [queryClient]);
  /* istanbul ignore next */
  cov_2hsu73lses().s[15]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex flex-col min-h-screen bg-[#FEFCF9]",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_DashboardHeader.DashboardHeader, {
        title: "Marketing Analytics",
        subtitle: "Google Ads, Facebook & LinkedIn Daten • Ansichtsmodus"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_DashboardGrid.DashboardGrid, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-center text-[#5d5d5d] py-12",
          children: isLoading ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2hsu73lses().b[0][0]++, (0, _jsxruntime.jsx)("p", {
            className: "text-lg font-medium mb-2",
            children: "Loading dashboards..."
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_2hsu73lses().b[0][1]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-lg font-medium mb-2",
              children: "Dashboard Grid bereit"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              className: "text-sm",
              children: [Array.isArray(dashboards) ?
              /* istanbul ignore next */
              (cov_2hsu73lses().b[1][0]++, dashboards.length) :
              /* istanbul ignore next */
              (cov_2hsu73lses().b[1][1]++, 0), " Dashboard(s) geladen • Widgets werden in Task 1.7 implementiert"]
            })]
          }))
        })
      })]
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJEYXNoYm9hcmRQYWdlIiwiY292XzJoc3U3M2xzZXMiLCJmIiwicXVlcnlDbGllbnQiLCJzIiwiX3JlYWN0cXVlcnkiLCJ1c2VRdWVyeUNsaWVudCIsImRhdGEiLCJkYXNoYm9hcmRzIiwiaXNMb2FkaW5nIiwiX3VzZURhc2hib2FyZHMiLCJ1c2VEYXNoYm9hcmRzIiwiX3JlYWN0IiwidXNlRWZmZWN0IiwiX3ByZWZldGNoIiwicHJlZmV0Y2hEYXNoYm9hcmRzIiwiX2pzeHJ1bnRpbWUiLCJqc3giLCJfTWFpbkxheW91dCIsIk1haW5MYXlvdXQiLCJqc3hzIiwiY2xhc3NOYW1lIiwiX0Rhc2hib2FyZEhlYWRlciIsIkRhc2hib2FyZEhlYWRlciIsInRpdGxlIiwic3VidGl0bGUiLCJfRGFzaGJvYXJkR3JpZCIsIkRhc2hib2FyZEdyaWQiLCJiIiwiRnJhZ21lbnQiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiXSwic291cmNlcyI6WyIvVXNlcnMvendlaWdlbi9TaXRlcy9kYXRlbi1zZWUtdjIvc3JjL2FwcC9kYXNoYm9hcmQvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyB1c2VRdWVyeUNsaWVudCB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XG5pbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IERhc2hib2FyZEdyaWQgfSBmcm9tICdAL2NvbXBvbmVudHMvbGF5b3V0L0Rhc2hib2FyZEdyaWQnO1xuaW1wb3J0IHsgRGFzaGJvYXJkSGVhZGVyIH0gZnJvbSAnQC9jb21wb25lbnRzL2xheW91dC9EYXNoYm9hcmRIZWFkZXInO1xuaW1wb3J0IHsgTWFpbkxheW91dCB9IGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvTWFpbkxheW91dCc7XG5pbXBvcnQgeyB1c2VEYXNoYm9hcmRzIH0gZnJvbSAnQC9ob29rcy91c2VEYXNoYm9hcmRzJztcbmltcG9ydCB7IHByZWZldGNoRGFzaGJvYXJkcyB9IGZyb20gJ0AvbGliL3RhbnN0YWNrLXF1ZXJ5L3ByZWZldGNoJztcblxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBEYXNoYm9hcmRQYWdlKCk6IFJlYWN0LlJlYWN0RWxlbWVudCB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgY29uc3QgcXVlcnlDbGllbnQgPSB1c2VRdWVyeUNsaWVudCgpO1xuICBjb25zdCB7IGRhdGE6IGRhc2hib2FyZHMsIGlzTG9hZGluZyB9ID0gdXNlRGFzaGJvYXJkcygpO1xuXG4gIC8vIFByZWZldGNoIGRhc2hib2FyZHMgb24gcGFnZSBsb2FkIGZvciBwZXJmb3JtYW5jZVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHZvaWQgcHJlZmV0Y2hEYXNoYm9hcmRzKHF1ZXJ5Q2xpZW50KTtcbiAgfSwgW3F1ZXJ5Q2xpZW50XSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TWFpbkxheW91dD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LWNvbCBtaW4taC1zY3JlZW4gYmctWyNGRUZDRjldXCI+XG4gICAgICAgIHsvKiBEYXNoYm9hcmQgSGVhZGVyICovfVxuICAgICAgICA8RGFzaGJvYXJkSGVhZGVyXG4gICAgICAgICAgdGl0bGU9XCJNYXJrZXRpbmcgQW5hbHl0aWNzXCJcbiAgICAgICAgICBzdWJ0aXRsZT1cIkdvb2dsZSBBZHMsIEZhY2Vib29rICYgTGlua2VkSW4gRGF0ZW4g4oCiIEFuc2ljaHRzbW9kdXNcIlxuICAgICAgICAvPlxuXG4gICAgICAgIHsvKiBNYWluIERhc2hib2FyZCBDb250ZW50ICovfVxuICAgICAgICA8RGFzaGJvYXJkR3JpZD5cbiAgICAgICAgICB7LyogU2hvdyBsb2FkaW5nIHN0YXRlIG9yIGRhc2hib2FyZCBpbmZvICovfVxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXIgdGV4dC1bIzVkNWQ1ZF0gcHktMTJcIj5cbiAgICAgICAgICAgIHtpc0xvYWRpbmcgPyAoXG4gICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1tZWRpdW0gbWItMlwiPkxvYWRpbmcgZGFzaGJvYXJkcy4uLjwvcD5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LW1lZGl1bSBtYi0yXCI+RGFzaGJvYXJkIEdyaWQgYmVyZWl0PC9wPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc21cIj5cbiAgICAgICAgICAgICAgICAgIHtBcnJheS5pc0FycmF5KGRhc2hib2FyZHMpID8gZGFzaGJvYXJkcy5sZW5ndGggOiAwfSBEYXNoYm9hcmQocykgZ2VsYWRlbiDigKIgV2lkZ2V0cyB3ZXJkZW4gaW4gVGFzayAxLjcgaW1wbGVtZW50aWVydFxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L0Rhc2hib2FyZEdyaWQ+XG4gICAgICA8L2Rpdj5cbiAgICA8L01haW5MYXlvdXQ+XG4gICk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OytCQVlBOzs7Ozs7V0FBd0JBLGFBQUE7Ozs7Ozs7O2tDQVZPOzs7a0NBQ0w7OztrQ0FFSTs7O2tDQUNFOzs7a0NBQ0w7OztrQ0FDRzs7O21DQUNLO0FBR3BCLFNBQVNBLGNBQUE7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFDdEI7RUFDQSxNQUFNQyxXQUFBO0VBQUE7RUFBQSxDQUFBRixjQUFBLEdBQUFHLENBQUEsUUFBYyxJQUFBQyxXQUFBLENBQUFDLGNBQWM7RUFDbEMsTUFBTTtJQUFFQyxJQUFBLEVBQU1DLFVBQVU7SUFBRUM7RUFBUyxDQUFFO0VBQUE7RUFBQSxDQUFBUixjQUFBLEdBQUFHLENBQUEsUUFBRyxJQUFBTSxjQUFBLENBQUFDLGFBQWE7RUFFckQ7RUFBQTtFQUFBVixjQUFBLEdBQUFHLENBQUE7RUFDQSxJQUFBUSxNQUFBLENBQUFDLFNBQVMsRUFBQztJQUFBO0lBQUFaLGNBQUEsR0FBQUMsQ0FBQTtJQUFBRCxjQUFBLEdBQUFHLENBQUE7SUFDUixLQUFLLElBQUFVLFNBQUEsQ0FBQUMsa0JBQWtCLEVBQUNaLFdBQUE7RUFDMUIsR0FBRyxDQUFDQSxXQUFBLENBQVk7RUFBQTtFQUFBRixjQUFBLEdBQUFHLENBQUE7RUFFaEIsb0JBQ0UsSUFBQVksV0FBQSxDQUFBQyxHQUFBLEVBQUNDLFdBQUEsQ0FBQUMsVUFBVTtjQUNULGlCQUFBSCxXQUFBLENBQUFJLElBQUEsRUFBQztNQUFJQyxTQUFBLEVBQVU7OEJBRWIsSUFBQUwsV0FBQSxDQUFBQyxHQUFBLEVBQUNLLGdCQUFBLENBQUFDLGVBQWU7UUFDZEMsS0FBQSxFQUFNO1FBQ05DLFFBQUEsRUFBUzt1QkFJWCxJQUFBVCxXQUFBLENBQUFDLEdBQUEsRUFBQ1MsY0FBQSxDQUFBQyxhQUFhO2tCQUVaLGlCQUFBWCxXQUFBLENBQUFDLEdBQUEsRUFBQztVQUFJSSxTQUFBLEVBQVU7b0JBQ1paLFNBQUE7VUFBQTtVQUFBLGNBQUFSLGNBQUEsR0FBQTJCLENBQUEsVUFDQyxJQUFBWixXQUFBLENBQUFDLEdBQUEsRUFBQztZQUFFSSxTQUFBLEVBQVU7c0JBQTJCOzs7b0RBRXhDLElBQUFMLFdBQUEsQ0FBQUksSUFBQSxFQUFBSixXQUFBLENBQUFhLFFBQUE7b0NBQ0UsSUFBQWIsV0FBQSxDQUFBQyxHQUFBLEVBQUM7Y0FBRUksU0FBQSxFQUFVO3dCQUEyQjs2QkFDeEMsSUFBQUwsV0FBQSxDQUFBSSxJQUFBLEVBQUM7Y0FBRUMsU0FBQSxFQUFVO3lCQUNWUyxLQUFBLENBQU1DLE9BQU8sQ0FBQ3ZCLFVBQUE7Y0FBQTtjQUFBLENBQUFQLGNBQUEsR0FBQTJCLENBQUEsVUFBY3BCLFVBQUEsQ0FBV3dCLE1BQU07Y0FBQTtjQUFBLENBQUEvQixjQUFBLEdBQUEyQixDQUFBLFVBQUcsSUFBRTs7Ozs7OztBQVNyRSIsImlnbm9yZUxpc3QiOltdfQ==