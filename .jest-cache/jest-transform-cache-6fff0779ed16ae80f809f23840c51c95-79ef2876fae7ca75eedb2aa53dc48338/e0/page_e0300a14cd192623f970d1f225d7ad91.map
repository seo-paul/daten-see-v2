{"version":3,"names":["DashboardPage","cov_2hsu73lses","f","queryClient","s","_reactquery","useQueryClient","data","dashboards","isLoading","_useDashboards","useDashboards","_react","useEffect","_prefetch","prefetchDashboards","_jsxruntime","jsx","_MainLayout","MainLayout","jsxs","className","_DashboardHeader","DashboardHeader","title","subtitle","_DashboardGrid","DashboardGrid","b","Fragment","Array","isArray","length"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/app/dashboard/page.tsx"],"sourcesContent":["'use client';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useEffect } from 'react';\n\nimport { DashboardGrid } from '@/components/layout/DashboardGrid';\nimport { DashboardHeader } from '@/components/layout/DashboardHeader';\nimport { MainLayout } from '@/components/layout/MainLayout';\nimport { useDashboards } from '@/hooks/useDashboards';\nimport { prefetchDashboards } from '@/lib/tanstack-query/prefetch';\n\n\nexport default function DashboardPage(): React.ReactElement {\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const queryClient = useQueryClient();\n  const { data: dashboards, isLoading } = useDashboards();\n\n  // Prefetch dashboards on page load for performance\n  useEffect(() => {\n    void prefetchDashboards(queryClient);\n  }, [queryClient]);\n\n  return (\n    <MainLayout>\n      <div className=\"flex flex-col min-h-screen bg-[#FEFCF9]\">\n        {/* Dashboard Header */}\n        <DashboardHeader\n          title=\"Marketing Analytics\"\n          subtitle=\"Google Ads, Facebook & LinkedIn Daten • Ansichtsmodus\"\n        />\n\n        {/* Main Dashboard Content */}\n        <DashboardGrid>\n          {/* Show loading state or dashboard info */}\n          <div className=\"text-center text-[#5d5d5d] py-12\">\n            {isLoading ? (\n              <p className=\"text-lg font-medium mb-2\">Loading dashboards...</p>\n            ) : (\n              <>\n                <p className=\"text-lg font-medium mb-2\">Dashboard Grid bereit</p>\n                <p className=\"text-sm\">\n                  {Array.isArray(dashboards) ? dashboards.length : 0} Dashboard(s) geladen • Widgets werden in Task 1.7 implementiert\n                </p>\n              </>\n            )}\n          </div>\n        </DashboardGrid>\n      </div>\n    </MainLayout>\n  );\n}"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAYA;;;;;;WAAwBA,aAAA;;;;;;;;kCAVO;;;kCACL;;;kCAEI;;;kCACE;;;kCACL;;;kCACG;;;mCACK;AAGpB,SAASA,cAAA;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACtB;EACA,MAAMC,WAAA;EAAA;EAAA,CAAAF,cAAA,GAAAG,CAAA,QAAc,IAAAC,WAAA,CAAAC,cAAc;EAClC,MAAM;IAAEC,IAAA,EAAMC,UAAU;IAAEC;EAAS,CAAE;EAAA;EAAA,CAAAR,cAAA,GAAAG,CAAA,QAAG,IAAAM,cAAA,CAAAC,aAAa;EAErD;EAAA;EAAAV,cAAA,GAAAG,CAAA;EACA,IAAAQ,MAAA,CAAAC,SAAS,EAAC;IAAA;IAAAZ,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAG,CAAA;IACR,KAAK,IAAAU,SAAA,CAAAC,kBAAkB,EAACZ,WAAA;EAC1B,GAAG,CAACA,WAAA,CAAY;EAAA;EAAAF,cAAA,GAAAG,CAAA;EAEhB,oBACE,IAAAY,WAAA,CAAAC,GAAA,EAACC,WAAA,CAAAC,UAAU;cACT,iBAAAH,WAAA,CAAAI,IAAA,EAAC;MAAIC,SAAA,EAAU;8BAEb,IAAAL,WAAA,CAAAC,GAAA,EAACK,gBAAA,CAAAC,eAAe;QACdC,KAAA,EAAM;QACNC,QAAA,EAAS;uBAIX,IAAAT,WAAA,CAAAC,GAAA,EAACS,cAAA,CAAAC,aAAa;kBAEZ,iBAAAX,WAAA,CAAAC,GAAA,EAAC;UAAII,SAAA,EAAU;oBACZZ,SAAA;UAAA;UAAA,cAAAR,cAAA,GAAA2B,CAAA,UACC,IAAAZ,WAAA,CAAAC,GAAA,EAAC;YAAEI,SAAA,EAAU;sBAA2B;;;oDAExC,IAAAL,WAAA,CAAAI,IAAA,EAAAJ,WAAA,CAAAa,QAAA;oCACE,IAAAb,WAAA,CAAAC,GAAA,EAAC;cAAEI,SAAA,EAAU;wBAA2B;6BACxC,IAAAL,WAAA,CAAAI,IAAA,EAAC;cAAEC,SAAA,EAAU;yBACVS,KAAA,CAAMC,OAAO,CAACvB,UAAA;cAAA;cAAA,CAAAP,cAAA,GAAA2B,CAAA,UAAcpB,UAAA,CAAWwB,MAAM;cAAA;cAAA,CAAA/B,cAAA,GAAA2B,CAAA,UAAG,IAAE;;;;;;;AASrE","ignoreList":[]}