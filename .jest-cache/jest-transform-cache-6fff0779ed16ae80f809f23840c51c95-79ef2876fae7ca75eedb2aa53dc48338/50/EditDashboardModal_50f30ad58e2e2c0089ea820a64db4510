b0948dbee235eb45deef7d2821d047c3
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "EditDashboardModal", {
    enumerable: true,
    get: function() {
        return EditDashboardModal;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _lucidereact = require("lucide-react");
const _react = require("react");
function EditDashboardModal({ dashboard, isOpen, onClose, onSubmit, isLoading }) {
    const [formData, setFormData] = (0, _react.useState)({
        name: '',
        description: '',
        isPublic: false
    });
    const [errors, setErrors] = (0, _react.useState)({});
    // Update form when dashboard changes
    (0, _react.useEffect)(()=>{
        if (dashboard) {
            setFormData({
                name: dashboard.name,
                description: dashboard.description,
                isPublic: dashboard.isPublic
            });
            setErrors({});
        }
    }, [
        dashboard
    ]);
    const validateForm = ()=>{
        const newErrors = {};
        if (!formData.name.trim()) {
            newErrors.name = 'Name ist erforderlich';
        } else if (formData.name.length < 3) {
            newErrors.name = 'Name muss mindestens 3 Zeichen lang sein';
        }
        if (!formData.description.trim()) {
            newErrors.description = 'Beschreibung ist erforderlich';
        } else if (formData.description.length < 10) {
            newErrors.description = 'Beschreibung muss mindestens 10 Zeichen lang sein';
        }
        setErrors(newErrors);
        return Object.keys(newErrors).length === 0;
    };
    const handleSubmit = async (e)=>{
        e.preventDefault();
        if (!dashboard || !validateForm()) {
            return;
        }
        try {
            await onSubmit({
                id: dashboard.id,
                name: formData.name,
                description: formData.description,
                isPublic: formData.isPublic
            });
            onClose();
        } catch  {
        // Error handling is done in the parent component
        }
    };
    const handleClose = ()=>{
        setErrors({});
        onClose();
    };
    if (!isOpen || !dashboard) return null;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 bg-black/50 z-40",
                onClick: handleClose
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                className: "fixed inset-0 flex items-center justify-center z-50 p-4",
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "bg-white rounded-lg shadow-xl w-full max-w-md",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-between p-6 border-b border-gray-200",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h2", {
                                    className: "text-lg font-semibold text-gray-900",
                                    children: "Dashboard bearbeiten"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "button",
                                    onClick: handleClose,
                                    className: "p-2 text-gray-400 hover:text-gray-600 hover:bg-gray-100 rounded-lg transition-colors",
                                    "aria-label": "Close modal",
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_lucidereact.X, {
                                        className: "w-5 h-5"
                                    })
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("form", {
                            onSubmit: handleSubmit,
                            className: "p-6 space-y-4",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "edit-dashboard-name",
                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                            children: "Dashboard Name"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            id: "edit-dashboard-name",
                                            type: "text",
                                            value: formData.name,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        name: e.target.value
                                                    })),
                                            className: `w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors ${errors.name ? 'border-red-300' : 'border-gray-300'}`,
                                            placeholder: "z.B. Sales Analytics",
                                            disabled: isLoading
                                        }),
                                        errors.name && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "mt-1 text-sm text-red-600",
                                            children: errors.name
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "edit-dashboard-description",
                                            className: "block text-sm font-medium text-gray-700 mb-2",
                                            children: "Beschreibung"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("textarea", {
                                            id: "edit-dashboard-description",
                                            value: formData.description,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        description: e.target.value
                                                    })),
                                            rows: 3,
                                            className: `w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none transition-colors ${errors.description ? 'border-red-300' : 'border-gray-300'}`,
                                            placeholder: "Beschreibe das Dashboard und seinen Zweck...",
                                            disabled: isLoading
                                        }),
                                        errors.description && /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            className: "mt-1 text-sm text-red-600",
                                            children: errors.description
                                        })
                                    ]
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                    className: "flex items-center",
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("input", {
                                            type: "checkbox",
                                            id: "isPublic",
                                            checked: formData.isPublic,
                                            onChange: (e)=>setFormData((prev)=>({
                                                        ...prev,
                                                        isPublic: e.target.checked
                                                    })),
                                            className: "w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500",
                                            disabled: isLoading
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("label", {
                                            htmlFor: "isPublic",
                                            className: "ml-2 text-sm text-gray-700",
                                            children: "Dashboard \xf6ffentlich machen"
                                        })
                                    ]
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            className: "flex items-center justify-end space-x-3 p-6 border-t border-gray-200",
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "button",
                                    onClick: handleClose,
                                    className: "px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg transition-colors",
                                    disabled: isLoading,
                                    children: "Abbrechen"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                                    type: "submit",
                                    onClick: handleSubmit,
                                    disabled: isLoading,
                                    className: "px-4 py-2 text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed",
                                    children: isLoading ? 'Speichere...' : 'Änderungen speichern'
                                })
                            ]
                        })
                    ]
                })
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,