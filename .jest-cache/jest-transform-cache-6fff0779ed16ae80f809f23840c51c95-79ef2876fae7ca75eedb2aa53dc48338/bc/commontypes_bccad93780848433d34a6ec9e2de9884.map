{"version":3,"names":[],"sources":["/Users/zweigen/Sites/daten-see-v2/src/shared/types/common.types.ts"],"sourcesContent":["// Common TypeScript Types for the application\n\nexport interface BaseEntity {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport interface User extends BaseEntity {\n  email: string;\n  name: string;\n  avatar?: string;\n  role: UserRole;\n}\n\nexport type UserRole = 'admin' | 'user' | 'viewer';\n\nexport interface ApiResponse<T = unknown> {\n  data: T;\n  success: boolean;\n  message?: string;\n  errors?: string[];\n}\n\nexport interface PaginatedResponse<T = unknown> extends ApiResponse<T[]> {\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\nexport interface LoadingState {\n  isLoading: boolean;\n  error?: string | null;\n  lastUpdated?: Date;\n}\n\n// UI State Types\nexport type Theme = 'light' | 'dark' | 'system';\nexport type Size = 'sm' | 'md' | 'lg' | 'xl';\nexport type Variant = 'primary' | 'secondary' | 'success' | 'warning' | 'danger';\n\n// Error Types\nexport interface AppError {\n  code: string;\n  message: string;\n  details?: Record<string, unknown>;\n  timestamp: Date;\n}"],"mappings":"AAAA","ignoreList":[]}