{"version":3,"names":["cov_1kspq53xmu","actualCoverage","s","apiQueryKeys","f","isAnalyticsData","isApiError","isDashboard","dashboards","dashboard","id","dashboardWidgets","dataSources","dataSource","dataSourceData","query","analytics","organization","workspaces","orgId","workspace","currentUser","userPermissions","workspaceId","obj","b"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/types/api.ts"],"sourcesContent":["/**\n * Central API Type Definitions\n * Generated and maintained types for all API endpoints\n */\n\n// ===== DASHBOARD TYPES =====\nexport interface Dashboard {\n  id: string;\n  name: string;\n  description?: string;\n  widgets: DashboardWidget[];\n  createdAt: string;\n  updatedAt: string;\n  isPublic: boolean;\n  owner: string;\n  organizationId?: string;\n  workspaceId?: string;\n}\n\nexport interface DashboardWidget {\n  id: string;\n  type: 'chart' | 'kpi' | 'text' | 'table' | 'filter';\n  title: string;\n  config: WidgetConfig;\n  position: WidgetPosition;\n  dataSource?: string;\n  refreshInterval?: number;\n}\n\nexport interface WidgetPosition {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport interface WidgetConfig {\n  // Chart specific\n  chartType?: 'line' | 'bar' | 'doughnut' | 'scatter';\n  metrics?: string[];\n  dimensions?: string[];\n  timeRange?: TimeRange;\n  \n  // KPI specific\n  metric?: string;\n  target?: number;\n  comparison?: 'previous_period' | 'target' | 'benchmark';\n  \n  // Text specific\n  content?: string;\n  markdown?: boolean;\n  \n  // Table specific\n  columns?: TableColumn[];\n  pageSize?: number;\n  sortBy?: string;\n  sortOrder?: 'asc' | 'desc';\n  \n  // Filter specific\n  filterType?: 'date' | 'select' | 'multiselect' | 'range';\n  filterOptions?: FilterOption[];\n}\n\nexport interface TableColumn {\n  id: string;\n  label: string;\n  type: 'string' | 'number' | 'date' | 'boolean';\n  sortable?: boolean;\n  filterable?: boolean;\n}\n\nexport interface FilterOption {\n  value: string;\n  label: string;\n  selected?: boolean;\n}\n\nexport interface TimeRange {\n  start: string;\n  end: string;\n  preset?: 'today' | 'yesterday' | 'last7days' | 'last30days' | 'last90days' | 'custom';\n}\n\n// ===== REQUEST/RESPONSE TYPES =====\nexport interface CreateDashboardRequest {\n  name: string;\n  description?: string;\n  isPublic?: boolean;\n  organizationId?: string;\n  workspaceId?: string;\n}\n\nexport interface UpdateDashboardRequest {\n  name?: string;\n  description?: string;\n  isPublic?: boolean;\n  widgets?: DashboardWidget[];\n}\n\nexport interface CreateWidgetRequest {\n  dashboardId: string;\n  type: DashboardWidget['type'];\n  title: string;\n  config: WidgetConfig;\n  position: WidgetPosition;\n  dataSource?: string;\n}\n\nexport interface UpdateWidgetRequest {\n  title?: string;\n  config?: Partial<WidgetConfig>;\n  position?: Partial<WidgetPosition>;\n  dataSource?: string;\n}\n\n// ===== DATA SOURCE TYPES =====\nexport interface DataSource {\n  id: string;\n  name: string;\n  type: DataSourceType;\n  config: DataSourceConfig;\n  status: 'connected' | 'error' | 'pending' | 'disconnected';\n  lastSync?: string;\n  organizationId: string;\n  workspaceId?: string;\n}\n\nexport type DataSourceType = \n  | 'google_analytics' \n  | 'google_ads' \n  | 'meta_ads' \n  | 'csv_upload' \n  | 'rest_api' \n  | 'google_my_business';\n\nexport interface DataSourceConfig {\n  // Google Analytics & Ads\n  accountId?: string;\n  propertyId?: string;\n  viewId?: string;\n  customerId?: string;\n  \n  // Meta Ads\n  appId?: string;\n  appSecret?: string;\n  accessToken?: string;\n  \n  // CSV Upload\n  fileName?: string;\n  fileSize?: number;\n  columns?: DataColumn[];\n  refreshSchedule?: 'manual' | 'daily' | 'weekly' | 'monthly';\n  \n  // REST API\n  baseUrl?: string;\n  authType?: 'none' | 'bearer' | 'basic' | 'api_key';\n  headers?: Record<string, string>;\n  queryParams?: Record<string, string>;\n}\n\nexport interface DataColumn {\n  name: string;\n  type: 'string' | 'number' | 'date' | 'boolean';\n  nullable?: boolean;\n  unique?: boolean;\n}\n\n// ===== ANALYTICS DATA TYPES =====\nexport interface AnalyticsData {\n  dimensions: Record<string, string>;\n  metrics: Record<string, number>;\n  timestamp?: string;\n}\n\nexport interface AnalyticsQuery {\n  dataSource: string;\n  metrics: string[];\n  dimensions?: string[];\n  filters?: AnalyticsFilter[];\n  timeRange: TimeRange;\n  limit?: number;\n  offset?: number;\n}\n\nexport interface AnalyticsFilter {\n  field: string;\n  operator: 'equals' | 'not_equals' | 'contains' | 'greater_than' | 'less_than' | 'in' | 'not_in';\n  value: string | number | (string | number)[];\n}\n\nexport interface AnalyticsResponse {\n  data: AnalyticsData[];\n  totalRows: number;\n  query: AnalyticsQuery;\n  executionTime: number;\n  cached: boolean;\n}\n\n// ===== AUTH & USER TYPES =====\nexport interface User {\n  id: string;\n  email: string;\n  name?: string;\n  image?: string;\n  role: UserRole;\n  organizationId?: string;\n  workspaces: WorkspaceMembership[];\n  createdAt: string;\n  lastLoginAt?: string;\n}\n\nexport type UserRole = 'owner' | 'admin' | 'editor' | 'viewer';\n\nexport interface Organization {\n  id: string;\n  name: string;\n  slug: string;\n  logo?: string;\n  plan: 'free' | 'starter' | 'professional' | 'enterprise';\n  memberCount: number;\n  createdAt: string;\n  settings: OrganizationSettings;\n}\n\nexport interface OrganizationSettings {\n  allowGuestAccess: boolean;\n  dataRetentionDays: number;\n  maxDataSources: number;\n  maxDashboards: number;\n  customBranding: boolean;\n  ssoEnabled: boolean;\n}\n\nexport interface Workspace {\n  id: string;\n  name: string;\n  description?: string;\n  organizationId: string;\n  memberCount: number;\n  dashboardCount: number;\n  dataSourceCount: number;\n  createdAt: string;\n}\n\nexport interface WorkspaceMembership {\n  workspaceId: string;\n  workspace: Workspace;\n  role: UserRole;\n  joinedAt: string;\n}\n\n// ===== API RESPONSE WRAPPERS =====\nexport interface ApiResponse<T> {\n  data: T;\n  success: boolean;\n  message?: string;\n  errors?: ApiError[];\n}\n\nexport interface ApiError {\n  code: string;\n  message: string;\n  field?: string;\n}\n\nexport interface PaginatedResponse<T> {\n  data: T[];\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    totalPages: number;\n  };\n}\n\n// ===== QUERY KEYS FOR TANSTACK QUERY =====\nexport const apiQueryKeys = {\n  // Dashboards\n  dashboards: ['dashboards'] as const,\n  dashboard: (id: string) => ['dashboards', id] as const,\n  dashboardWidgets: (id: string) => ['dashboards', id, 'widgets'] as const,\n  \n  // Data Sources\n  dataSources: ['dataSources'] as const,\n  dataSource: (id: string) => ['dataSources', id] as const,\n  dataSourceData: (id: string, query: string) => ['dataSources', id, 'data', query] as const,\n  \n  // Analytics\n  analytics: (query: AnalyticsQuery) => ['analytics', query] as const,\n  \n  // Organizations & Workspaces\n  organization: (id: string) => ['organizations', id] as const,\n  workspaces: (orgId: string) => ['organizations', orgId, 'workspaces'] as const,\n  workspace: (id: string) => ['workspaces', id] as const,\n  \n  // User\n  currentUser: ['user', 'current'] as const,\n  userPermissions: (workspaceId: string) => ['user', 'permissions', workspaceId] as const,\n} as const;\n\n// ===== TYPE GUARDS =====\nexport function isDashboard(obj: unknown): obj is Dashboard {\n  return typeof obj === 'object' && \n         obj !== null && \n         'id' in obj && \n         'name' in obj && \n         'widgets' in obj;\n}\n\nexport function isAnalyticsData(obj: unknown): obj is AnalyticsData {\n  return typeof obj === 'object' && \n         obj !== null && \n         'dimensions' in obj && \n         'metrics' in obj;\n}\n\nexport function isApiError(obj: unknown): obj is ApiError {\n  return typeof obj === 'object' && \n         obj !== null && \n         'code' in obj && \n         'message' in obj;\n}"],"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","ignoreList":[]}