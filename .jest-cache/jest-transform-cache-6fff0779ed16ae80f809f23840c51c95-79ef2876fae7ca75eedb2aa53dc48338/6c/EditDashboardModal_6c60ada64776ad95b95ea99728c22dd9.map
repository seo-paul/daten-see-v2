{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/EditDashboardModal.tsx"],"sourcesContent":["'use client';\n\nimport { X } from 'lucide-react';\nimport { useEffect, useState } from 'react';\n\nimport type { DashboardListItem, UpdateDashboardRequest } from '@/types/dashboard.types';\n\ninterface EditDashboardModalProps {\n  dashboard: DashboardListItem | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: UpdateDashboardRequest) => Promise<void>;\n  isLoading: boolean;\n}\n\ninterface FormData {\n  name: string;\n  description: string;\n  isPublic: boolean;\n}\n\nexport function EditDashboardModal({ \n  dashboard,\n  isOpen, \n  onClose, \n  onSubmit, \n  isLoading \n}: EditDashboardModalProps): React.ReactElement | null {\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    description: '',\n    isPublic: false\n  });\n  const [errors, setErrors] = useState<Partial<FormData>>({});\n\n  // Update form when dashboard changes\n  useEffect(() => {\n    if (dashboard) {\n      setFormData({\n        name: dashboard.name,\n        description: dashboard.description,\n        isPublic: dashboard.isPublic\n      });\n      setErrors({});\n    }\n  }, [dashboard]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<FormData> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name ist erforderlich';\n    } else if (formData.name.length < 3) {\n      newErrors.name = 'Name muss mindestens 3 Zeichen lang sein';\n    }\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Beschreibung ist erforderlich';\n    } else if (formData.description.length < 10) {\n      newErrors.description = 'Beschreibung muss mindestens 10 Zeichen lang sein';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    \n    if (!dashboard || !validateForm()) {\n      return;\n    }\n\n    try {\n      await onSubmit({\n        id: dashboard.id,\n        name: formData.name,\n        description: formData.description,\n        isPublic: formData.isPublic\n      });\n      onClose();\n    } catch {\n      // Error handling is done in the parent component\n    }\n  };\n\n  const handleClose = (): void => {\n    setErrors({});\n    onClose();\n  };\n\n  if (!isOpen || !dashboard) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 bg-black/50 z-40\" onClick={handleClose} />\n      \n      {/* Modal */}\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-[#FDF9F3] rounded-lg shadow-xl w-full max-w-md\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-[#E6D7B8]\">\n            <h2 className=\"text-lg font-semibold text-[#3d3d3d]\">\n              Dashboard bearbeiten\n            </h2>\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"p-2 text-[#5d5d5d] hover:text-[#3d3d3d] hover:bg-[#FBF5ED] rounded-lg transition-colors\"\n              aria-label=\"Close modal\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\n            {/* Name Field */}\n            <div>\n              <label htmlFor=\"edit-dashboard-name\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Dashboard Name\n              </label>\n              <input\n                id=\"edit-dashboard-name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] transition-colors ${\n                  errors.name ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"z.B. Sales Analytics\"\n                disabled={isLoading}\n              />\n              {errors.name && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\n              )}\n            </div>\n\n            {/* Description Field */}\n            <div>\n              <label htmlFor=\"edit-dashboard-description\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Beschreibung\n              </label>\n              <textarea\n                id=\"edit-dashboard-description\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                rows={3}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] resize-none transition-colors ${\n                  errors.description ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"Beschreibe das Dashboard und seinen Zweck...\"\n                disabled={isLoading}\n              />\n              {errors.description && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n              )}\n            </div>\n\n            {/* Public/Private Toggle */}\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"isPublic\"\n                checked={formData.isPublic}\n                onChange={(e) => setFormData(prev => ({ ...prev, isPublic: e.target.checked }))}\n                className=\"w-4 h-4 text-[#2F4F73] border-[#E6D7B8] rounded focus:ring-[#2F4F73]\"\n                disabled={isLoading}\n              />\n              <label htmlFor=\"isPublic\" className=\"ml-2 text-sm text-[#3d3d3d]\">\n                Dashboard öffentlich machen\n              </label>\n            </div>\n          </form>\n\n          {/* Footer */}\n          <div className=\"flex items-center justify-end space-x-3 p-6 border-t border-[#E6D7B8]\">\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"px-4 py-2 text-sm font-medium text-[#3d3d3d] bg-[#FBF5ED] hover:bg-[#F5EFE7] rounded-lg transition-colors\"\n              disabled={isLoading}\n            >\n              Abbrechen\n            </button>\n            <button\n              type=\"submit\"\n              onClick={handleSubmit}\n              disabled={isLoading}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-[#2F4F73] hover:bg-[#365C83] rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? 'Speichere...' : 'Änderungen speichern'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"names":["EditDashboardModal","dashboard","isOpen","onClose","onSubmit","isLoading","formData","setFormData","useState","name","description","isPublic","errors","setErrors","useEffect","validateForm","newErrors","trim","length","Object","keys","handleSubmit","e","preventDefault","id","handleClose","div","className","onClick","h2","button","type","aria-label","X","form","label","htmlFor","input","value","onChange","prev","target","placeholder","disabled","p","textarea","rows","checked"],"mappings":"AAAA;;;;;+BAqBgBA;;;eAAAA;;;;6BAnBE;uBACkB;AAkB7B,SAASA,mBAAmB,EACjCC,SAAS,EACTC,MAAM,EACNC,OAAO,EACPC,QAAQ,EACRC,SAAS,EACe;IACxB,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAW;QACjDC,MAAM;QACNC,aAAa;QACbC,UAAU;IACZ;IACA,MAAM,CAACC,QAAQC,UAAU,GAAGL,IAAAA,eAAQ,EAAoB,CAAC;IAEzD,qCAAqC;IACrCM,IAAAA,gBAAS,EAAC;QACR,IAAIb,WAAW;YACbM,YAAY;gBACVE,MAAMR,UAAUQ,IAAI;gBACpBC,aAAaT,UAAUS,WAAW;gBAClCC,UAAUV,UAAUU,QAAQ;YAC9B;YACAE,UAAU,CAAC;QACb;IACF,GAAG;QAACZ;KAAU;IAEd,MAAMc,eAAe;QACnB,MAAMC,YAA+B,CAAC;QAEtC,IAAI,CAACV,SAASG,IAAI,CAACQ,IAAI,IAAI;YACzBD,UAAUP,IAAI,GAAG;QACnB,OAAO,IAAIH,SAASG,IAAI,CAACS,MAAM,GAAG,GAAG;YACnCF,UAAUP,IAAI,GAAG;QACnB;QAEA,IAAI,CAACH,SAASI,WAAW,CAACO,IAAI,IAAI;YAChCD,UAAUN,WAAW,GAAG;QAC1B,OAAO,IAAIJ,SAASI,WAAW,CAACQ,MAAM,GAAG,IAAI;YAC3CF,UAAUN,WAAW,GAAG;QAC1B;QAEAG,UAAUG;QACV,OAAOG,OAAOC,IAAI,CAACJ,WAAWE,MAAM,KAAK;IAC3C;IAEA,MAAMG,eAAe,OAAOC;QAC1BA,EAAEC,cAAc;QAEhB,IAAI,CAACtB,aAAa,CAACc,gBAAgB;YACjC;QACF;QAEA,IAAI;YACF,MAAMX,SAAS;gBACboB,IAAIvB,UAAUuB,EAAE;gBAChBf,MAAMH,SAASG,IAAI;gBACnBC,aAAaJ,SAASI,WAAW;gBACjCC,UAAUL,SAASK,QAAQ;YAC7B;YACAR;QACF,EAAE,OAAM;QACN,iDAAiD;QACnD;IACF;IAEA,MAAMsB,cAAc;QAClBZ,UAAU,CAAC;QACXV;IACF;IAEA,IAAI,CAACD,UAAU,CAACD,WAAW,OAAO;IAElC,qBACE;;0BAEE,qBAACyB;gBAAIC,WAAU;gBAAiCC,SAASH;;0BAGzD,qBAACC;gBAAIC,WAAU;0BACb,cAAA,sBAACD;oBAAIC,WAAU;;sCAEb,sBAACD;4BAAIC,WAAU;;8CACb,qBAACE;oCAAGF,WAAU;8CAAuC;;8CAGrD,qBAACG;oCACCC,MAAK;oCACLH,SAASH;oCACTE,WAAU;oCACVK,cAAW;8CAEX,cAAA,qBAACC,cAAC;wCAACN,WAAU;;;;;sCAKjB,sBAACO;4BAAK9B,UAAUiB;4BAAcM,WAAU;;8CAEtC,sBAACD;;sDACC,qBAACS;4CAAMC,SAAQ;4CAAsBT,WAAU;sDAAgD;;sDAG/F,qBAACU;4CACCb,IAAG;4CACHO,MAAK;4CACLO,OAAOhC,SAASG,IAAI;4CACpB8B,UAAU,CAACjB,IAAMf,YAAYiC,CAAAA,OAAS,CAAA;wDAAE,GAAGA,IAAI;wDAAE/B,MAAMa,EAAEmB,MAAM,CAACH,KAAK;oDAAC,CAAA;4CACtEX,WAAW,CAAC,0GAA0G,EACpHf,OAAOH,IAAI,GAAG,mBAAmB,oBACjC;4CACFiC,aAAY;4CACZC,UAAUtC;;wCAEXO,OAAOH,IAAI,kBACV,qBAACmC;4CAAEjB,WAAU;sDAA6Bf,OAAOH,IAAI;;;;8CAKzD,sBAACiB;;sDACC,qBAACS;4CAAMC,SAAQ;4CAA6BT,WAAU;sDAAgD;;sDAGtG,qBAACkB;4CACCrB,IAAG;4CACHc,OAAOhC,SAASI,WAAW;4CAC3B6B,UAAU,CAACjB,IAAMf,YAAYiC,CAAAA,OAAS,CAAA;wDAAE,GAAGA,IAAI;wDAAE9B,aAAaY,EAAEmB,MAAM,CAACH,KAAK;oDAAC,CAAA;4CAC7EQ,MAAM;4CACNnB,WAAW,CAAC,sHAAsH,EAChIf,OAAOF,WAAW,GAAG,mBAAmB,oBACxC;4CACFgC,aAAY;4CACZC,UAAUtC;;wCAEXO,OAAOF,WAAW,kBACjB,qBAACkC;4CAAEjB,WAAU;sDAA6Bf,OAAOF,WAAW;;;;8CAKhE,sBAACgB;oCAAIC,WAAU;;sDACb,qBAACU;4CACCN,MAAK;4CACLP,IAAG;4CACHuB,SAASzC,SAASK,QAAQ;4CAC1B4B,UAAU,CAACjB,IAAMf,YAAYiC,CAAAA,OAAS,CAAA;wDAAE,GAAGA,IAAI;wDAAE7B,UAAUW,EAAEmB,MAAM,CAACM,OAAO;oDAAC,CAAA;4CAC5EpB,WAAU;4CACVgB,UAAUtC;;sDAEZ,qBAAC8B;4CAAMC,SAAQ;4CAAWT,WAAU;sDAA8B;;;;;;sCAOtE,sBAACD;4BAAIC,WAAU;;8CACb,qBAACG;oCACCC,MAAK;oCACLH,SAASH;oCACTE,WAAU;oCACVgB,UAAUtC;8CACX;;8CAGD,qBAACyB;oCACCC,MAAK;oCACLH,SAASP;oCACTsB,UAAUtC;oCACVsB,WAAU;8CAETtB,YAAY,iBAAiB;;;;;;;;;AAO5C"}