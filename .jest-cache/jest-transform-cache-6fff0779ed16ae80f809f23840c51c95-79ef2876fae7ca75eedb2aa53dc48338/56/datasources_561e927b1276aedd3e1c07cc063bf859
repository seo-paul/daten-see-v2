3fbcdaa39fd3105817d41d304fd8db86
/**
 * Data Sources API Service
 * Type-safe data source operations
 */"use strict";

/* istanbul ignore next */
function cov_1m5ty0jrr6() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/api/data-sources.ts";
  var hash = "ea227bd86ade9a38d674c121347d9fef2a0edae9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/api/data-sources.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 33
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 32
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 33
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 32
        }
      },
      "10": {
        start: {
          line: 34,
          column: 15
        },
        end: {
          line: 34,
          column: 33
        }
      },
      "11": {
        start: {
          line: 39,
          column: 25
        },
        end: {
          line: 39,
          column: 99
        }
      },
      "12": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 85
        }
      },
      "13": {
        start: {
          line: 40,
          column: 51
        },
        end: {
          line: 40,
          column: 81
        }
      },
      "14": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 98
        }
      },
      "15": {
        start: {
          line: 45,
          column: 51
        },
        end: {
          line: 45,
          column: 94
        }
      },
      "16": {
        start: {
          line: 50,
          column: 25
        },
        end: {
          line: 50,
          column: 75
        }
      },
      "17": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "18": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 52,
          column: 80
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 29
        }
      },
      "20": {
        start: {
          line: 59,
          column: 25
        },
        end: {
          line: 59,
          column: 80
        }
      },
      "21": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "22": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 61,
          column: 80
        }
      },
      "23": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 29
        }
      },
      "24": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 77
        }
      },
      "25": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 71,
          column: 9
        }
      },
      "26": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 70,
          column: 80
        }
      },
      "27": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 76,
          column: 80
        }
      },
      "28": {
        start: {
          line: 77,
          column: 8
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "29": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 78,
          column: 77
        }
      },
      "30": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 29
        }
      },
      "31": {
        start: {
          line: 85,
          column: 25
        },
        end: {
          line: 85,
          column: 80
        }
      },
      "32": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 88,
          column: 9
        }
      },
      "33": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 78
        }
      },
      "34": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 29
        }
      },
      "35": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 106
        }
      },
      "36": {
        start: {
          line: 94,
          column: 51
        },
        end: {
          line: 94,
          column: 102
        }
      },
      "37": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 109
        }
      },
      "38": {
        start: {
          line: 99,
          column: 51
        },
        end: {
          line: 99,
          column: 105
        }
      },
      "39": {
        start: {
          line: 106,
          column: 25
        },
        end: {
          line: 106,
          column: 79
        }
      },
      "40": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 109,
          column: 9
        }
      },
      "41": {
        start: {
          line: 108,
          column: 12
        },
        end: {
          line: 108,
          column: 74
        }
      },
      "42": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 29
        }
      },
      "43": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 119,
          column: 9
        }
      },
      "44": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 116,
          column: 112
        }
      },
      "45": {
        start: {
          line: 116,
          column: 55
        },
        end: {
          line: 116,
          column: 108
        }
      },
      "46": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 24
        }
      },
      "47": {
        start: {
          line: 124,
          column: 25
        },
        end: {
          line: 124,
          column: 81
        }
      },
      "48": {
        start: {
          line: 125,
          column: 8
        },
        end: {
          line: 127,
          column: 9
        }
      },
      "49": {
        start: {
          line: 126,
          column: 12
        },
        end: {
          line: 126,
          column: 70
        }
      },
      "50": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 29
        }
      },
      "51": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 117
        }
      },
      "52": {
        start: {
          line: 133,
          column: 51
        },
        end: {
          line: 133,
          column: 113
        }
      },
      "53": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 105
        }
      },
      "54": {
        start: {
          line: 140,
          column: 51
        },
        end: {
          line: 140,
          column: 101
        }
      },
      "55": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 145,
          column: 99
        }
      },
      "56": {
        start: {
          line: 145,
          column: 51
        },
        end: {
          line: 145,
          column: 95
        }
      },
      "57": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 152,
          column: 10
        }
      },
      "58": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "59": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 81
        }
      },
      "60": {
        start: {
          line: 156,
          column: 8
        },
        end: {
          line: 156,
          column: 29
        }
      },
      "61": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 164,
          column: 10
        }
      },
      "62": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 167,
          column: 9
        }
      },
      "63": {
        start: {
          line: 166,
          column: 12
        },
        end: {
          line: 166,
          column: 84
        }
      },
      "64": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 168,
          column: 29
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 24
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 25
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 38,
            column: 6
          },
          end: {
            line: 38,
            column: 7
          }
        },
        loc: {
          start: {
            line: 38,
            column: 47
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 38
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 48
          }
        },
        loc: {
          start: {
            line: 40,
            column: 51
          },
          end: {
            line: 40,
            column: 81
          }
        },
        line: 40
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        },
        loc: {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 46,
            column: 5
          }
        },
        line: 44
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 45,
            column: 47
          },
          end: {
            line: 45,
            column: 48
          }
        },
        loc: {
          start: {
            line: 45,
            column: 51
          },
          end: {
            line: 45,
            column: 94
          }
        },
        line: 45
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 49,
            column: 6
          },
          end: {
            line: 49,
            column: 7
          }
        },
        loc: {
          start: {
            line: 49,
            column: 42
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 49
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 58,
            column: 6
          },
          end: {
            line: 58,
            column: 7
          }
        },
        loc: {
          start: {
            line: 58,
            column: 46
          },
          end: {
            line: 64,
            column: 5
          }
        },
        line: 58
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 67,
            column: 7
          }
        },
        loc: {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 72,
            column: 5
          }
        },
        line: 67
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 75,
            column: 6
          },
          end: {
            line: 75,
            column: 7
          }
        },
        loc: {
          start: {
            line: 75,
            column: 38
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 75
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        },
        loc: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 84
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 93,
            column: 6
          },
          end: {
            line: 93,
            column: 7
          }
        },
        loc: {
          start: {
            line: 93,
            column: 43
          },
          end: {
            line: 95,
            column: 5
          }
        },
        line: 93
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 94,
            column: 47
          },
          end: {
            line: 94,
            column: 48
          }
        },
        loc: {
          start: {
            line: 94,
            column: 51
          },
          end: {
            line: 94,
            column: 102
          }
        },
        line: 94
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 7
          }
        },
        loc: {
          start: {
            line: 98,
            column: 46
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 98
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 99,
            column: 47
          },
          end: {
            line: 99,
            column: 48
          }
        },
        loc: {
          start: {
            line: 99,
            column: 51
          },
          end: {
            line: 99,
            column: 105
          }
        },
        line: 99
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 7
          }
        },
        loc: {
          start: {
            line: 105,
            column: 32
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 105
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 114,
            column: 7
          }
        },
        loc: {
          start: {
            line: 114,
            column: 45
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 114
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 116,
            column: 51
          },
          end: {
            line: 116,
            column: 52
          }
        },
        loc: {
          start: {
            line: 116,
            column: 55
          },
          end: {
            line: 116,
            column: 108
          }
        },
        line: 116
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 123,
            column: 6
          },
          end: {
            line: 123,
            column: 7
          }
        },
        loc: {
          start: {
            line: 123,
            column: 39
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 123
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        loc: {
          start: {
            line: 132,
            column: 53
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 133,
            column: 47
          },
          end: {
            line: 133,
            column: 48
          }
        },
        loc: {
          start: {
            line: 133,
            column: 51
          },
          end: {
            line: 133,
            column: 113
          }
        },
        line: 133
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 139,
            column: 6
          },
          end: {
            line: 139,
            column: 7
          }
        },
        loc: {
          start: {
            line: 139,
            column: 42
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 139
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 140,
            column: 47
          },
          end: {
            line: 140,
            column: 48
          }
        },
        loc: {
          start: {
            line: 140,
            column: 51
          },
          end: {
            line: 140,
            column: 101
          }
        },
        line: 140
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 144,
            column: 6
          },
          end: {
            line: 144,
            column: 7
          }
        },
        loc: {
          start: {
            line: 144,
            column: 36
          },
          end: {
            line: 146,
            column: 5
          }
        },
        line: 144
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 145,
            column: 47
          },
          end: {
            line: 145,
            column: 48
          }
        },
        loc: {
          start: {
            line: 145,
            column: 51
          },
          end: {
            line: 145,
            column: 95
          }
        },
        line: 145
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 149,
            column: 7
          }
        },
        loc: {
          start: {
            line: 149,
            column: 43
          },
          end: {
            line: 157,
            column: 5
          }
        },
        line: 149
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 160,
            column: 6
          },
          end: {
            line: 160,
            column: 7
          }
        },
        loc: {
          start: {
            line: 160,
            column: 53
          },
          end: {
            line: 169,
            column: 5
          }
        },
        line: 160
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 39
          },
          end: {
            line: 39,
            column: 81
          }
        }, {
          start: {
            line: 39,
            column: 84
          },
          end: {
            line: 39,
            column: 99
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 53,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 28
          },
          end: {
            line: 52,
            column: 44
          }
        }, {
          start: {
            line: 52,
            column: 48
          },
          end: {
            line: 52,
            column: 78
          }
        }],
        line: 52
      },
      "3": {
        loc: {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "4": {
        loc: {
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 61,
            column: 28
          },
          end: {
            line: 61,
            column: 44
          }
        }, {
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 61,
            column: 78
          }
        }],
        line: 61
      },
      "5": {
        loc: {
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 69,
            column: 8
          },
          end: {
            line: 71,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 69
      },
      "6": {
        loc: {
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 28
          },
          end: {
            line: 70,
            column: 44
          }
        }, {
          start: {
            line: 70,
            column: 48
          },
          end: {
            line: 70,
            column: 78
          }
        }],
        line: 70
      },
      "7": {
        loc: {
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 77,
            column: 8
          },
          end: {
            line: 79,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 77
      },
      "8": {
        loc: {
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 28
          },
          end: {
            line: 78,
            column: 44
          }
        }, {
          start: {
            line: 78,
            column: 48
          },
          end: {
            line: 78,
            column: 75
          }
        }],
        line: 78
      },
      "9": {
        loc: {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 88,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 86
      },
      "10": {
        loc: {
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 28
          },
          end: {
            line: 87,
            column: 44
          }
        }, {
          start: {
            line: 87,
            column: 48
          },
          end: {
            line: 87,
            column: 76
          }
        }],
        line: 87
      },
      "11": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "12": {
        loc: {
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 108,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 28
          },
          end: {
            line: 108,
            column: 44
          }
        }, {
          start: {
            line: 108,
            column: 48
          },
          end: {
            line: 108,
            column: 72
          }
        }],
        line: 108
      },
      "13": {
        loc: {
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 8
          },
          end: {
            line: 127,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "14": {
        loc: {
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 28
          },
          end: {
            line: 126,
            column: 44
          }
        }, {
          start: {
            line: 126,
            column: 48
          },
          end: {
            line: 126,
            column: 68
          }
        }],
        line: 126
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 8
          },
          end: {
            line: 155,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 154,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 154,
            column: 28
          },
          end: {
            line: 154,
            column: 44
          }
        }, {
          start: {
            line: 154,
            column: 48
          },
          end: {
            line: 154,
            column: 79
          }
        }],
        line: 154
      },
      "17": {
        loc: {
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 8
          },
          end: {
            line: 167,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 165
      },
      "18": {
        loc: {
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 82
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 166,
            column: 28
          },
          end: {
            line: 166,
            column: 44
          }
        }, {
          start: {
            line: 166,
            column: 48
          },
          end: {
            line: 166,
            column: 82
          }
        }],
        line: 166
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/api/data-sources.ts"],
      sourcesContent: ["/**\n * Data Sources API Service\n * Type-safe data source operations\n */\n\nimport type {\n  DataSource,\n  DataSourceType,\n  DataSourceConfig,\n  AnalyticsQuery,\n  AnalyticsResponse,\n} from '@/types';\n\nimport { apiClient, createQueryFunction } from './index';\n\n/**\n * Data Source Service Class\n */\nexport class DataSourceService {\n  /**\n   * Get all data sources for workspace\n   */\n  static async getDataSources(workspaceId?: string): Promise<DataSource[]> {\n    const endpoint = workspaceId \n      ? `/data-sources?workspaceId=${workspaceId}`\n      : '/data-sources';\n    \n    return createQueryFunction(() => \n      apiClient.get<DataSource[]>(endpoint)\n    )();\n  }\n\n  /**\n   * Get single data source\n   */\n  static async getDataSource(id: string): Promise<DataSource> {\n    return createQueryFunction(() => \n      apiClient.get<DataSource>(`/data-sources/${id}`)\n    )();\n  }\n\n  /**\n   * Create new data source\n   */\n  static async createDataSource(data: {\n    name: string;\n    type: DataSourceType;\n    config: DataSourceConfig;\n    workspaceId?: string;\n  }): Promise<DataSource> {\n    const response = await apiClient.post<DataSource, typeof data>(\n      '/data-sources',\n      data\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to create data source');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Update data source\n   */\n  static async updateDataSource(\n    id: string,\n    data: {\n      name?: string;\n      config?: Partial<DataSourceConfig>;\n    }\n  ): Promise<DataSource> {\n    const response = await apiClient.put<DataSource, typeof data>(\n      `/data-sources/${id}`,\n      data\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to update data source');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Delete data source\n   */\n  static async deleteDataSource(id: string): Promise<void> {\n    const response = await apiClient.delete<void>(`/data-sources/${id}`);\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to delete data source');\n    }\n  }\n\n  /**\n   * Test data source connection\n   */\n  static async testConnection(id: string): Promise<{ connected: boolean; error?: string }> {\n    const response = await apiClient.post<{ connected: boolean; error?: string }>(\n      `/data-sources/${id}/test`\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to test connection');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Sync data source (refresh data)\n   */\n  static async syncDataSource(id: string): Promise<{ success: boolean; lastSync: string }> {\n    const response = await apiClient.post<{ success: boolean; lastSync: string }>(\n      `/data-sources/${id}/sync`\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to sync data source');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Get available metrics for data source\n   */\n  static async getAvailableMetrics(id: string): Promise<string[]> {\n    return createQueryFunction(() => \n      apiClient.get<string[]>(`/data-sources/${id}/metrics`)\n    )();\n  }\n\n  /**\n   * Get available dimensions for data source\n   */\n  static async getAvailableDimensions(id: string): Promise<string[]> {\n    return createQueryFunction(() => \n      apiClient.get<string[]>(`/data-sources/${id}/dimensions`)\n    )();\n  }\n}\n\n/**\n * Analytics Service Class\n */\nexport class AnalyticsService {\n  /**\n   * Execute analytics query\n   */\n  static async query(query: AnalyticsQuery): Promise<AnalyticsResponse> {\n    const response = await apiClient.post<AnalyticsResponse, AnalyticsQuery>(\n      '/analytics/query',\n      query\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Analytics query failed');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Get cached query result\n   */\n  static async getCachedQuery(queryHash: string): Promise<AnalyticsResponse | null> {\n    try {\n      return createQueryFunction(() => \n        apiClient.get<AnalyticsResponse>(`/analytics/cache/${queryHash}`)\n      )();\n    } catch {\n      return null; // Cache miss\n    }\n  }\n\n  /**\n   * Execute multiple queries in batch\n   */\n  static async batchQuery(queries: AnalyticsQuery[]): Promise<AnalyticsResponse[]> {\n    const response = await apiClient.post<AnalyticsResponse[], AnalyticsQuery[]>(\n      '/analytics/batch',\n      queries\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Batch query failed');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Get query suggestions based on data source\n   */\n  static async getQuerySuggestions(dataSourceId: string): Promise<{\n    metrics: string[];\n    dimensions: string[];\n    commonQueries: AnalyticsQuery[];\n  }> {\n    return createQueryFunction(() => \n      apiClient.get<{\n        metrics: string[];\n        dimensions: string[];\n        commonQueries: AnalyticsQuery[];\n      }>(`/analytics/suggestions/${dataSourceId}`)\n    )();\n  }\n}\n\n/**\n * Google APIs Service Class\n */\nexport class GoogleApiService {\n  /**\n   * Get Google Analytics accounts\n   */\n  static async getAnalyticsAccounts(): Promise<Array<{\n    id: string;\n    name: string;\n    properties: Array<{ id: string; name: string }>;\n  }>> {\n    return createQueryFunction(() => \n      apiClient.get<Array<{\n        id: string;\n        name: string;\n        properties: Array<{ id: string; name: string }>;\n      }>>('/google/analytics/accounts')\n    )();\n  }\n\n  /**\n   * Get Google Ads accounts\n   */\n  static async getAdsAccounts(): Promise<Array<{\n    id: string;\n    name: string;\n    currency: string;\n  }>> {\n    return createQueryFunction(() => \n      apiClient.get<Array<{\n        id: string;\n        name: string;\n        currency: string;\n      }>>('/google/ads/accounts')\n    )();\n  }\n\n  /**\n   * Authorize Google services\n   */\n  static async authorizeGoogle(scopes: string[]): Promise<{ authUrl: string }> {\n    const response = await apiClient.post<{ authUrl: string }, { scopes: string[] }>(\n      '/google/auth',\n      { scopes }\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to get Google auth URL');\n    }\n    \n    return response.data;\n  }\n\n  /**\n   * Handle Google OAuth callback\n   */\n  static async handleGoogleCallback(code: string, state: string): Promise<{ success: boolean }> {\n    const response = await apiClient.post<{ success: boolean }, { code: string; state: string }>(\n      '/google/callback',\n      { code, state }\n    );\n    \n    if (!response.success) {\n      throw new Error(response.message || 'Failed to handle Google callback');\n    }\n    \n    return response.data;\n  }\n}\n\n// Export services\nexport { \n  DataSourceService as dataSourceApi, \n  AnalyticsService as analyticsApi,\n  GoogleApiService as googleApi,\n};"],
      names: ["AnalyticsService", "DataSourceService", "GoogleApiService", "analyticsApi", "dataSourceApi", "googleApi", "getDataSources", "workspaceId", "endpoint", "createQueryFunction", "apiClient", "get", "getDataSource", "id", "createDataSource", "data", "response", "post", "success", "Error", "message", "updateDataSource", "put", "deleteDataSource", "delete", "testConnection", "syncDataSource", "getAvailableMetrics", "getAvailableDimensions", "query", "getCachedQuery", "queryHash", "batchQuery", "queries", "getQuerySuggestions", "dataSourceId", "getAnalyticsAccounts", "getAdsAccounts", "authorizeGoogle", "scopes", "handleGoogleCallback", "code", "state"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "ea227bd86ade9a38d674c121347d9fef2a0edae9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1m5ty0jrr6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1m5ty0jrr6();
cov_1m5ty0jrr6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1m5ty0jrr6().f[0]++;
  cov_1m5ty0jrr6().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1m5ty0jrr6().s[3]++;
_export(exports, {
  get AnalyticsService() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[1]++;
    cov_1m5ty0jrr6().s[4]++;
    return AnalyticsService;
  },
  get DataSourceService() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[2]++;
    cov_1m5ty0jrr6().s[5]++;
    return DataSourceService;
  },
  get GoogleApiService() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[3]++;
    cov_1m5ty0jrr6().s[6]++;
    return GoogleApiService;
  },
  get analyticsApi() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[4]++;
    cov_1m5ty0jrr6().s[7]++;
    return AnalyticsService;
  },
  get dataSourceApi() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[5]++;
    cov_1m5ty0jrr6().s[8]++;
    return DataSourceService;
  },
  get googleApi() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[6]++;
    cov_1m5ty0jrr6().s[9]++;
    return GoogleApiService;
  }
});
const _index =
/* istanbul ignore next */
(cov_1m5ty0jrr6().s[10]++, require("./index"));
class DataSourceService {
  /**
  * Get all data sources for workspace
  */
  static async getDataSources(workspaceId) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[7]++;
    const endpoint =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[11]++, workspaceId ?
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().b[0][0]++, `/data-sources?workspaceId=${workspaceId}`) :
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().b[0][1]++, '/data-sources'));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[12]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[8]++;
      cov_1m5ty0jrr6().s[13]++;
      return _index.apiClient.get(endpoint);
    })();
  }
  /**
  * Get single data source
  */
  static async getDataSource(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[9]++;
    cov_1m5ty0jrr6().s[14]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[10]++;
      cov_1m5ty0jrr6().s[15]++;
      return _index.apiClient.get(`/data-sources/${id}`);
    })();
  }
  /**
  * Create new data source
  */
  static async createDataSource(data) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[11]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[16]++, await _index.apiClient.post('/data-sources', data));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[17]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[1][0]++;
      cov_1m5ty0jrr6().s[18]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[2][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[2][1]++, 'Failed to create data source'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[1][1]++;
    }
    cov_1m5ty0jrr6().s[19]++;
    return response.data;
  }
  /**
  * Update data source
  */
  static async updateDataSource(id, data) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[12]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[20]++, await _index.apiClient.put(`/data-sources/${id}`, data));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[21]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[3][0]++;
      cov_1m5ty0jrr6().s[22]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[4][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[4][1]++, 'Failed to update data source'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[3][1]++;
    }
    cov_1m5ty0jrr6().s[23]++;
    return response.data;
  }
  /**
  * Delete data source
  */
  static async deleteDataSource(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[13]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[24]++, await _index.apiClient.delete(`/data-sources/${id}`));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[25]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[5][0]++;
      cov_1m5ty0jrr6().s[26]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[6][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[6][1]++, 'Failed to delete data source'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[5][1]++;
    }
  }
  /**
  * Test data source connection
  */
  static async testConnection(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[14]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[27]++, await _index.apiClient.post(`/data-sources/${id}/test`));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[28]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[7][0]++;
      cov_1m5ty0jrr6().s[29]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[8][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[8][1]++, 'Failed to test connection'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[7][1]++;
    }
    cov_1m5ty0jrr6().s[30]++;
    return response.data;
  }
  /**
  * Sync data source (refresh data)
  */
  static async syncDataSource(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[15]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[31]++, await _index.apiClient.post(`/data-sources/${id}/sync`));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[32]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[9][0]++;
      cov_1m5ty0jrr6().s[33]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[10][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[10][1]++, 'Failed to sync data source'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[9][1]++;
    }
    cov_1m5ty0jrr6().s[34]++;
    return response.data;
  }
  /**
  * Get available metrics for data source
  */
  static async getAvailableMetrics(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[16]++;
    cov_1m5ty0jrr6().s[35]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[17]++;
      cov_1m5ty0jrr6().s[36]++;
      return _index.apiClient.get(`/data-sources/${id}/metrics`);
    })();
  }
  /**
  * Get available dimensions for data source
  */
  static async getAvailableDimensions(id) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[18]++;
    cov_1m5ty0jrr6().s[37]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[19]++;
      cov_1m5ty0jrr6().s[38]++;
      return _index.apiClient.get(`/data-sources/${id}/dimensions`);
    })();
  }
}
class AnalyticsService {
  /**
  * Execute analytics query
  */
  static async query(query) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[20]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[39]++, await _index.apiClient.post('/analytics/query', query));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[40]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[11][0]++;
      cov_1m5ty0jrr6().s[41]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[12][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[12][1]++, 'Analytics query failed'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[11][1]++;
    }
    cov_1m5ty0jrr6().s[42]++;
    return response.data;
  }
  /**
  * Get cached query result
  */
  static async getCachedQuery(queryHash) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[21]++;
    cov_1m5ty0jrr6().s[43]++;
    try {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().s[44]++;
      return (0, _index.createQueryFunction)(() => {
        /* istanbul ignore next */
        cov_1m5ty0jrr6().f[22]++;
        cov_1m5ty0jrr6().s[45]++;
        return _index.apiClient.get(`/analytics/cache/${queryHash}`);
      })();
    } catch {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().s[46]++;
      return null; // Cache miss
    }
  }
  /**
  * Execute multiple queries in batch
  */
  static async batchQuery(queries) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[23]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[47]++, await _index.apiClient.post('/analytics/batch', queries));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[48]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[13][0]++;
      cov_1m5ty0jrr6().s[49]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[14][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[14][1]++, 'Batch query failed'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[13][1]++;
    }
    cov_1m5ty0jrr6().s[50]++;
    return response.data;
  }
  /**
  * Get query suggestions based on data source
  */
  static async getQuerySuggestions(dataSourceId) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[24]++;
    cov_1m5ty0jrr6().s[51]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[25]++;
      cov_1m5ty0jrr6().s[52]++;
      return _index.apiClient.get(`/analytics/suggestions/${dataSourceId}`);
    })();
  }
}
class GoogleApiService {
  /**
  * Get Google Analytics accounts
  */
  static async getAnalyticsAccounts() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[26]++;
    cov_1m5ty0jrr6().s[53]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[27]++;
      cov_1m5ty0jrr6().s[54]++;
      return _index.apiClient.get('/google/analytics/accounts');
    })();
  }
  /**
  * Get Google Ads accounts
  */
  static async getAdsAccounts() {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[28]++;
    cov_1m5ty0jrr6().s[55]++;
    return (0, _index.createQueryFunction)(() => {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().f[29]++;
      cov_1m5ty0jrr6().s[56]++;
      return _index.apiClient.get('/google/ads/accounts');
    })();
  }
  /**
  * Authorize Google services
  */
  static async authorizeGoogle(scopes) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[30]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[57]++, await _index.apiClient.post('/google/auth', {
      scopes
    }));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[58]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[15][0]++;
      cov_1m5ty0jrr6().s[59]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[16][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[16][1]++, 'Failed to get Google auth URL'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[15][1]++;
    }
    cov_1m5ty0jrr6().s[60]++;
    return response.data;
  }
  /**
  * Handle Google OAuth callback
  */
  static async handleGoogleCallback(code, state) {
    /* istanbul ignore next */
    cov_1m5ty0jrr6().f[31]++;
    const response =
    /* istanbul ignore next */
    (cov_1m5ty0jrr6().s[61]++, await _index.apiClient.post('/google/callback', {
      code,
      state
    }));
    /* istanbul ignore next */
    cov_1m5ty0jrr6().s[62]++;
    if (!response.success) {
      /* istanbul ignore next */
      cov_1m5ty0jrr6().b[17][0]++;
      cov_1m5ty0jrr6().s[63]++;
      throw new Error(
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[18][0]++, response.message) ||
      /* istanbul ignore next */
      (cov_1m5ty0jrr6().b[18][1]++, 'Failed to handle Google callback'));
    } else
    /* istanbul ignore next */
    {
      cov_1m5ty0jrr6().b[17][1]++;
    }
    cov_1m5ty0jrr6().s[64]++;
    return response.data;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,