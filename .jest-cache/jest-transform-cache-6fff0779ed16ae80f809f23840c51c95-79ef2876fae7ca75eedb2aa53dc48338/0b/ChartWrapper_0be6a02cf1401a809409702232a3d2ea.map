{"version":3,"names":["cov_23331i9tow","actualCoverage","s","DashboardBarChart","f","DashboardDoughnutChart","DashboardKPICard","DashboardLineChart","DashboardPieChart","_chart","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","ArcElement","Title","Tooltip","Legend","Filler","defaultOptions","responsive","maintainAspectRatio","plugins","legend","display","position","labels","font","family","size","weight","color","_config","CHART_COLORS","textPrimary","padding","tooltip","backgroundColor","background","titleColor","bodyColor","textSecondary","borderColor","border","borderWidth","cornerRadius","scales","x","grid","borderLight","ticks","textMuted","y","convertToChartJSData","data","type","datasets","map","dataset","index","label","b","dataColors","length","fill","undefined","tension","borderRadius","borderSkipped","title","height","className","chartData","options","text","bottom","_jsxruntime","jsx","style","_reactchartjs2","Line","Bar","Pie","centerText","centerValue","cutout","jsxs","Doughnut","value","previousValue","trend","trendData","unit","primary","formatValue","val","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","toFixed","toLocaleString","trendColor","trendIcon","trendPercentage","sparklineData","_","i","toString","pointRadius","sparklineOptions","enabled","Math","abs"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/charts/ChartWrapper.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from 'chart.js';\nimport { Line, Bar, Pie, Doughnut } from 'react-chartjs-2';\nimport type { ChartData } from 'chart.js';\n\nimport { CHART_COLORS } from '@/lib/charts/config';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  BarElement,\n  ArcElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n/**\n * Simplified Chart Props for Widget Integration\n * These avoid TypeScript complexity while providing full Chart.js features\n */\nexport interface SimpleChartData {\n  labels: string[];\n  datasets: Array<{\n    label: string;\n    data: number[];\n    color?: string;\n  }>;\n}\n\nexport interface ChartWrapperProps {\n  data: SimpleChartData;\n  title?: string;\n  height?: number;\n  className?: string;\n}\n\n// Default options that work with Chart.js\nconst defaultOptions = {\n  responsive: true,\n  maintainAspectRatio: false,\n  plugins: {\n    legend: {\n      display: true,\n      position: 'top' as const,\n      labels: {\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 12,\n          weight: 400 as any, // Type workaround\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: 20,\n      },\n    },\n    tooltip: {\n      backgroundColor: CHART_COLORS.background,\n      titleColor: CHART_COLORS.textPrimary,\n      bodyColor: CHART_COLORS.textSecondary,\n      borderColor: CHART_COLORS.border,\n      borderWidth: 1,\n      cornerRadius: 8,\n      padding: 12,\n    },\n  },\n  scales: {\n    x: {\n      grid: {\n        display: true,\n        color: CHART_COLORS.borderLight,\n      },\n      ticks: {\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 11,\n          weight: 400 as any,\n        },\n        color: CHART_COLORS.textMuted,\n      },\n    },\n    y: {\n      grid: {\n        display: true,\n        color: CHART_COLORS.borderLight,\n      },\n      ticks: {\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 11,\n          weight: 400 as any,\n        },\n        color: CHART_COLORS.textMuted,\n      },\n    },\n  },\n} as const;\n\n/**\n * Convert simple data format to Chart.js format\n */\nfunction convertToChartJSData(data: SimpleChartData, type: 'line' | 'bar' | 'pie'): ChartData<any> {\n  return {\n    labels: data.labels,\n    datasets: data.datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      borderColor: dataset.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length],\n      backgroundColor: type === 'line' \n        ? `${dataset.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length]}20`\n        : type === 'pie'\n        ? dataset.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length]\n        : `${dataset.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length]}90`,\n      borderWidth: type === 'pie' ? 2 : type === 'line' ? 2 : 0,\n      fill: type === 'line' ? true : undefined,\n      tension: type === 'line' ? 0.3 : undefined,\n      borderRadius: type === 'bar' ? 6 : undefined,\n      borderSkipped: type === 'bar' ? false : undefined,\n    })),\n  };\n}\n\n/**\n * Dashboard Line Chart - Full Chart.js features with simple props\n */\nexport function DashboardLineChart({ data, title, height = 300, className = '' }: ChartWrapperProps) {\n  const chartData = convertToChartJSData(data, 'line');\n  \n  const options = {\n    ...defaultOptions,\n    plugins: {\n      ...defaultOptions.plugins,\n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: 600 as any,\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: { bottom: 20 },\n      } : { display: false },\n    },\n  } as any;\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }}\n    >\n      <div className=\"w-full h-full\">\n        <Line data={chartData} options={options} />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Dashboard Bar Chart - Full Chart.js features with simple props\n */\nexport function DashboardBarChart({ data, title, height = 300, className = '' }: ChartWrapperProps) {\n  const chartData = convertToChartJSData(data, 'bar');\n  \n  const options = {\n    ...defaultOptions,\n    plugins: {\n      ...defaultOptions.plugins,\n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: 600 as any,\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: { bottom: 20 },\n      } : { display: false },\n    },\n  } as any;\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }}\n    >\n      <div className=\"w-full h-full\">\n        <Bar data={chartData} options={options} />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Dashboard Pie Chart - Full Chart.js features with simple props\n */\nexport function DashboardPieChart({ data, title, height = 300, className = '' }: ChartWrapperProps) {\n  const chartData = convertToChartJSData(data, 'pie');\n  \n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom' as const,\n        labels: {\n          font: {\n            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n            size: 12,\n            weight: 400 as any,\n          },\n          color: CHART_COLORS.textPrimary,\n          padding: 15,\n        },\n      },\n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: 600 as any,\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: { bottom: 20 },\n      } : { display: false },\n      tooltip: {\n        backgroundColor: CHART_COLORS.background,\n        titleColor: CHART_COLORS.textPrimary,\n        bodyColor: CHART_COLORS.textSecondary,\n        borderColor: CHART_COLORS.border,\n        borderWidth: 1,\n        cornerRadius: 8,\n        padding: 12,\n      },\n    },\n  } as any;\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }}\n    >\n      <div className=\"w-full h-full\">\n        <Pie data={chartData} options={options} />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Dashboard Doughnut Chart - With center text support\n */\nexport function DashboardDoughnutChart({ \n  data, \n  title, \n  height = 300, \n  className = '',\n  centerText,\n  centerValue \n}: ChartWrapperProps & { centerText?: string; centerValue?: string }) {\n  const chartData = convertToChartJSData(data, 'pie');\n  \n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cutout: '60%',\n    plugins: {\n      legend: {\n        display: true,\n        position: 'bottom' as const,\n        labels: {\n          font: {\n            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n            size: 12,\n            weight: 400 as any,\n          },\n          color: CHART_COLORS.textPrimary,\n          padding: 15,\n        },\n      },\n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: 600 as any,\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: { bottom: 20 },\n      } : { display: false },\n      tooltip: {\n        backgroundColor: CHART_COLORS.background,\n        titleColor: CHART_COLORS.textPrimary,\n        bodyColor: CHART_COLORS.textSecondary,\n        borderColor: CHART_COLORS.border,\n        borderWidth: 1,\n        cornerRadius: 8,\n        padding: 12,\n      },\n    },\n  } as any;\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }}\n    >\n      <div className=\"w-full h-full relative\">\n        <Doughnut data={chartData} options={options} />\n        \n        {/* Center text overlay */}\n        {(centerText || centerValue) && (\n          <div className=\"absolute inset-0 flex flex-col items-center justify-center pointer-events-none\">\n            {centerValue && (\n              <div className=\"text-2xl font-bold text-[#3d3d3d]\">\n                {centerValue}\n              </div>\n            )}\n            {centerText && (\n              <div className=\"text-sm text-[#5d5d5d] mt-1\">\n                {centerText}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/**\n * KPI Card with Chart.js sparkline\n */\nexport function DashboardKPICard({\n  title,\n  value,\n  previousValue,\n  trend,\n  trendData,\n  unit = 'number',\n  color = CHART_COLORS.primary,\n  className = '',\n}: {\n  title: string;\n  value: number;\n  previousValue?: number;\n  trend?: 'up' | 'down' | 'neutral';\n  trendData?: number[];\n  unit?: 'currency' | 'percentage' | 'number';\n  color?: string;\n  className?: string;\n}) {\n  const formatValue = (val: number) => {\n    if (unit === 'currency') {\n      return new Intl.NumberFormat('de-DE', {\n        style: 'currency',\n        currency: 'EUR',\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 2,\n      }).format(val);\n    }\n    if (unit === 'percentage') {\n      return `${val.toFixed(1)}%`;\n    }\n    return val.toLocaleString('de-DE');\n  };\n\n  const trendColor = trend === 'up' ? '#4A7C59' : trend === 'down' ? '#B85450' : '#7d7d7d';\n  const trendIcon = trend === 'up' ? '↗' : trend === 'down' ? '↘' : '→';\n  \n  const trendPercentage = previousValue && previousValue > 0\n    ? ((value - previousValue) / previousValue) * 100\n    : 0;\n\n  // Sparkline data\n  const sparklineData = trendData ? {\n    labels: trendData.map((_, i) => i.toString()),\n    datasets: [{\n      data: trendData,\n      borderColor: color,\n      backgroundColor: `${color}20`,\n      borderWidth: 1.5,\n      pointRadius: 0,\n      tension: 0.3,\n      fill: true,\n    }],\n  } : null;\n\n  const sparklineOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { display: false },\n      tooltip: { enabled: false },\n    },\n    scales: {\n      x: { display: false },\n      y: { display: false },\n    },\n  } as any;\n\n  return (\n    <div \n      className={`bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-6 hover:shadow-md transition-shadow duration-200 ${className}`}\n    >\n      <h3 className=\"text-base font-medium text-[#3d3d3d] mb-4\">\n        {title}\n      </h3>\n      \n      <div className=\"space-y-3\">\n        <div className=\"text-3xl font-bold text-[#3d3d3d]\">\n          {formatValue(value)}\n        </div>\n        \n        {previousValue && (\n          <div className=\"flex items-center text-sm\">\n            <span style={{ color: trendColor }} className=\"mr-1\">\n              {trendIcon} {Math.abs(trendPercentage).toFixed(1)}%\n            </span>\n            <span className=\"text-[#5d5d5d]\">\n              vs. vorherige Periode\n            </span>\n          </div>\n        )}\n        \n        {trendData && sparklineData && (\n          <div className=\"h-12 mt-4\">\n            <Line data={sparklineData} options={sparklineOptions} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"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","ignoreList":[]}