7ee520473f1763027164b3a1248e7134
/**
 * Error Boundary Hook
 * Enhanced hooks for error boundary management and reporting
 */"use strict";

/* istanbul ignore next */
function cov_bug22mvp9() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/hooks/error/useErrorBoundary.ts";
  var hash = "36330407088fdba82f52325c9972efe986de76f9";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/hooks/error/useErrorBoundary.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 30,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 32
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 34
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 32
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 38
        }
      },
      "9": {
        start: {
          line: 31,
          column: 15
        },
        end: {
          line: 31,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 32,
          column: 67
        }
      },
      "11": {
        start: {
          line: 34,
          column: 30
        },
        end: {
          line: 37,
          column: 6
        }
      },
      "12": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 46
        }
      },
      "13": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 29
        }
      },
      "14": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 57,
          column: 6
        }
      },
      "15": {
        start: {
          line: 41,
          column: 28
        },
        end: {
          line: 41,
          column: 34
        }
      },
      "16": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "17": {
        start: {
          line: 42,
          column: 26
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "18": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 51,
          column: 11
        }
      },
      "19": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "20": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 27
        }
      },
      "21": {
        start: {
          line: 58,
          column: 26
        },
        end: {
          line: 63,
          column: 10
        }
      },
      "22": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 62,
          column: 16
        }
      },
      "23": {
        start: {
          line: 59,
          column: 26
        },
        end: {
          line: 62,
          column: 13
        }
      },
      "24": {
        start: {
          line: 64,
          column: 29
        },
        end: {
          line: 69,
          column: 10
        }
      },
      "25": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 68,
          column: 16
        }
      },
      "26": {
        start: {
          line: 65,
          column: 26
        },
        end: {
          line: 68,
          column: 13
        }
      },
      "27": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 75,
          column: 10
        }
      },
      "28": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "29": {
        start: {
          line: 76,
          column: 4
        },
        end: {
          line: 82,
          column: 6
        }
      },
      "30": {
        start: {
          line: 85,
          column: 38
        },
        end: {
          line: 90,
          column: 6
        }
      },
      "31": {
        start: {
          line: 91,
          column: 23
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "32": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 95,
          column: 16
        }
      },
      "33": {
        start: {
          line: 92,
          column: 30
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "34": {
        start: {
          line: 97,
          column: 26
        },
        end: {
          line: 103,
          column: 10
        }
      },
      "35": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "36": {
        start: {
          line: 98,
          column: 30
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "37": {
        start: {
          line: 104,
          column: 32
        },
        end: {
          line: 109,
          column: 10
        }
      },
      "38": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 108,
          column: 16
        }
      },
      "39": {
        start: {
          line: 105,
          column: 30
        },
        end: {
          line: 108,
          column: 13
        }
      },
      "40": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 115,
          column: 6
        }
      },
      "41": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 167,
          column: 7
        }
      },
      "42": {
        start: {
          line: 119,
          column: 27
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "43": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "44": {
        start: {
          line: 126,
          column: 16
        },
        end: {
          line: 136,
          column: 18
        }
      },
      "45": {
        start: {
          line: 131,
          column: 24
        },
        end: {
          line: 134,
          column: 27
        }
      },
      "46": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 149,
          column: 18
        }
      },
      "47": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 147,
          column: 27
        }
      },
      "48": {
        start: {
          line: 151,
          column: 16
        },
        end: {
          line: 161,
          column: 18
        }
      },
      "49": {
        start: {
          line: 156,
          column: 24
        },
        end: {
          line: 159,
          column: 27
        }
      },
      "50": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 34
        }
      },
      "51": {
        start: {
          line: 170,
          column: 30
        },
        end: {
          line: 178,
          column: 5
        }
      },
      "52": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 179,
          column: 116
        }
      },
      "53": {
        start: {
          line: 179,
          column: 47
        },
        end: {
          line: 179,
          column: 114
        }
      },
      "54": {
        start: {
          line: 183,
          column: 4
        },
        end: {
          line: 183,
          column: 44
        }
      },
      "55": {
        start: {
          line: 183,
          column: 26
        },
        end: {
          line: 183,
          column: 44
        }
      },
      "56": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "57": {
        start: {
          line: 186,
          column: 8
        },
        end: {
          line: 186,
          column: 22
        }
      },
      "58": {
        start: {
          line: 189,
          column: 4
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "59": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 51
        }
      },
      "60": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 195,
          column: 5
        }
      },
      "61": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 50
        }
      },
      "62": {
        start: {
          line: 196,
          column: 4
        },
        end: {
          line: 196,
          column: 20
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 28
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 28
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 34
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "useErrorBoundary",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 25
          }
        },
        loc: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 83,
            column: 1
          }
        },
        line: 33
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 40,
            column: 48
          },
          end: {
            line: 40,
            column: 49
          }
        },
        loc: {
          start: {
            line: 40,
            column: 68
          },
          end: {
            line: 55,
            column: 5
          }
        },
        line: 40
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 18
          }
        },
        loc: {
          start: {
            line: 42,
            column: 26
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 58,
            column: 50
          },
          end: {
            line: 58,
            column: 51
          }
        },
        loc: {
          start: {
            line: 58,
            column: 54
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 58
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 59,
            column: 17
          },
          end: {
            line: 59,
            column: 18
          }
        },
        loc: {
          start: {
            line: 59,
            column: 26
          },
          end: {
            line: 62,
            column: 13
          }
        },
        line: 59
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 64,
            column: 53
          },
          end: {
            line: 64,
            column: 54
          }
        },
        loc: {
          start: {
            line: 64,
            column: 57
          },
          end: {
            line: 69,
            column: 5
          }
        },
        line: 64
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 65,
            column: 18
          }
        },
        loc: {
          start: {
            line: 65,
            column: 26
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 65
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 70,
            column: 52
          },
          end: {
            line: 70,
            column: 53
          }
        },
        loc: {
          start: {
            line: 70,
            column: 56
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 70
      },
      "14": {
        name: "useErrorBoundaryAnalytics",
        decl: {
          start: {
            line: 84,
            column: 9
          },
          end: {
            line: 84,
            column: 34
          }
        },
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 116,
            column: 1
          }
        },
        line: 84
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 91,
            column: 47
          },
          end: {
            line: 91,
            column: 48
          }
        },
        loc: {
          start: {
            line: 91,
            column: 51
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 91
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 92,
            column: 21
          },
          end: {
            line: 92,
            column: 22
          }
        },
        loc: {
          start: {
            line: 92,
            column: 30
          },
          end: {
            line: 95,
            column: 13
          }
        },
        line: 92
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 97,
            column: 50
          },
          end: {
            line: 97,
            column: 51
          }
        },
        loc: {
          start: {
            line: 97,
            column: 66
          },
          end: {
            line: 103,
            column: 5
          }
        },
        line: 97
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 98,
            column: 21
          },
          end: {
            line: 98,
            column: 22
          }
        },
        loc: {
          start: {
            line: 98,
            column: 30
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 98
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 104,
            column: 56
          },
          end: {
            line: 104,
            column: 57
          }
        },
        loc: {
          start: {
            line: 104,
            column: 60
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 104
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 105,
            column: 21
          },
          end: {
            line: 105,
            column: 22
          }
        },
        loc: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 108,
            column: 13
          }
        },
        line: 105
      },
      "21": {
        name: "useErrorBoundaryConfig",
        decl: {
          start: {
            line: 117,
            column: 9
          },
          end: {
            line: 117,
            column: 31
          }
        },
        loc: {
          start: {
            line: 117,
            column: 39
          },
          end: {
            line: 168,
            column: 1
          }
        },
        line: 117
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 118,
            column: 35
          },
          end: {
            line: 118,
            column: 36
          }
        },
        loc: {
          start: {
            line: 118,
            column: 39
          },
          end: {
            line: 165,
            column: 5
          }
        },
        line: 118
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 130,
            column: 29
          },
          end: {
            line: 130,
            column: 30
          }
        },
        loc: {
          start: {
            line: 130,
            column: 38
          },
          end: {
            line: 135,
            column: 21
          }
        },
        line: 130
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 143,
            column: 29
          },
          end: {
            line: 143,
            column: 30
          }
        },
        loc: {
          start: {
            line: 143,
            column: 38
          },
          end: {
            line: 148,
            column: 21
          }
        },
        line: 143
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 155,
            column: 29
          },
          end: {
            line: 155,
            column: 30
          }
        },
        loc: {
          start: {
            line: 155,
            column: 38
          },
          end: {
            line: 160,
            column: 21
          }
        },
        line: 155
      },
      "26": {
        name: "isRecoverableError",
        decl: {
          start: {
            line: 169,
            column: 9
          },
          end: {
            line: 169,
            column: 27
          }
        },
        loc: {
          start: {
            line: 169,
            column: 35
          },
          end: {
            line: 180,
            column: 1
          }
        },
        line: 169
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 179,
            column: 34
          },
          end: {
            line: 179,
            column: 35
          }
        },
        loc: {
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 179,
            column: 114
          }
        },
        line: 179
      },
      "28": {
        name: "getErrorSeverity",
        decl: {
          start: {
            line: 181,
            column: 9
          },
          end: {
            line: 181,
            column: 25
          }
        },
        loc: {
          start: {
            line: 181,
            column: 52
          },
          end: {
            line: 197,
            column: 1
          }
        },
        line: 181
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 33,
            column: 26
          },
          end: {
            line: 33,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 33,
            column: 35
          },
          end: {
            line: 33,
            column: 37
          }
        }],
        line: 33
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 164,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 125,
            column: 12
          },
          end: {
            line: 136,
            column: 18
          }
        }, {
          start: {
            line: 137,
            column: 12
          },
          end: {
            line: 149,
            column: 18
          }
        }, {
          start: {
            line: 150,
            column: 12
          },
          end: {
            line: 161,
            column: 18
          }
        }, {
          start: {
            line: 162,
            column: 12
          },
          end: {
            line: 163,
            column: 34
          }
        }],
        line: 124
      },
      "3": {
        loc: {
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 179,
            column: 114
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 47
          },
          end: {
            line: 179,
            column: 77
          }
        }, {
          start: {
            line: 179,
            column: 81
          },
          end: {
            line: 179,
            column: 114
          }
        }],
        line: 179
      },
      "4": {
        loc: {
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 44
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 4
          },
          end: {
            line: 183,
            column: 44
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "5": {
        loc: {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 187,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 185
      },
      "6": {
        loc: {
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 185,
            column: 81
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 185,
            column: 8
          },
          end: {
            line: 185,
            column: 40
          }
        }, {
          start: {
            line: 185,
            column: 44
          },
          end: {
            line: 185,
            column: 81
          }
        }],
        line: 185
      },
      "7": {
        loc: {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 189
      },
      "8": {
        loc: {
          start: {
            line: 190,
            column: 15
          },
          end: {
            line: 190,
            column: 50
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 190,
            column: 33
          },
          end: {
            line: 190,
            column: 39
          }
        }, {
          start: {
            line: 190,
            column: 42
          },
          end: {
            line: 190,
            column: 50
          }
        }],
        line: 190
      },
      "9": {
        loc: {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 193
      },
      "10": {
        loc: {
          start: {
            line: 194,
            column: 15
          },
          end: {
            line: 194,
            column: 49
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 33
          },
          end: {
            line: 194,
            column: 41
          }
        }, {
          start: {
            line: 194,
            column: 44
          },
          end: {
            line: 194,
            column: 49
          }
        }],
        line: 194
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/hooks/error/useErrorBoundary.ts"],
      sourcesContent: ["/**\n * Error Boundary Hook\n * Enhanced hooks for error boundary management and reporting\n */\n\nimport { useCallback, useRef, useState } from 'react';\n\nimport { appLogger } from '@/lib/monitoring/logger.config';\n\ninterface ErrorBoundaryConfig {\n  maxRetries?: number;\n  retryDelay?: number;\n  enableAutoRetry?: boolean;\n  onError?: (error: Error) => void;\n  onRetry?: (retryCount: number) => void;\n  onMaxRetriesReached?: () => void;\n}\n\ninterface ErrorBoundaryState {\n  errorCount: number;\n  lastErrorTime?: number;\n  isRecovering: boolean;\n}\n\n/**\n * Hook for managing error boundary behavior\n */\nexport function useErrorBoundary(config: ErrorBoundaryConfig = {}): {\n  errorCount: number;\n  lastErrorTime?: number;\n  isRecovering: boolean;\n  reportError: (error: Error, errorInfo?: Record<string, unknown>) => void;\n  startRecovery: () => void;\n  completeRecovery: () => void;\n  resetErrorCount: () => void;\n} {\n  const [state, setState] = useState<ErrorBoundaryState>({\n    errorCount: 0,\n    isRecovering: false,\n  });\n  \n  const stateRef = useRef(state);\n  stateRef.current = state;\n\n  const reportError = useCallback((error: Error, errorInfo?: Record<string, unknown>) => {\n    const { onError } = config;\n    \n    setState(prev => ({\n      ...prev,\n      errorCount: prev.errorCount + 1,\n      lastErrorTime: Date.now(),\n    }));\n\n    appLogger.error('Error boundary error reported', {\n      error,\n      errorCount: stateRef.current.errorCount + 1,\n      ...errorInfo,\n    });\n\n    if (onError) {\n      onError(error);\n    }\n  }, [config]);\n\n  const startRecovery = useCallback(() => {\n    setState(prev => ({ ...prev, isRecovering: true }));\n  }, []);\n\n  const completeRecovery = useCallback(() => {\n    setState(prev => ({ ...prev, isRecovering: false }));\n  }, []);\n\n  const resetErrorCount = useCallback(() => {\n    setState({\n      errorCount: 0,\n      isRecovering: false,\n    });\n  }, []);\n\n  return {\n    ...state,\n    reportError,\n    startRecovery,\n    completeRecovery,\n    resetErrorCount,\n  };\n}\n\n/**\n * Hook for error boundary analytics and monitoring\n */\nexport function useErrorBoundaryAnalytics(): {\n  analytics: {\n    totalErrors: number;\n    recoveredErrors: number;\n    failedRecoveries: number;\n    averageRecoveryTime: number;\n  };\n  trackError: () => void;\n  trackRecovery: (recoveryTime: number) => void;\n  trackFailedRecovery: () => void;\n} {\n  const [analytics, setAnalytics] = useState({\n    totalErrors: 0,\n    recoveredErrors: 0,\n    failedRecoveries: 0,\n    averageRecoveryTime: 0,\n  });\n\n  const trackError = useCallback(() => {\n    setAnalytics(prev => ({\n      ...prev,\n      totalErrors: prev.totalErrors + 1,\n    }));\n  }, []);\n\n  const trackRecovery = useCallback((recoveryTime: number) => {\n    setAnalytics(prev => ({\n      ...prev,\n      recoveredErrors: prev.recoveredErrors + 1,\n      averageRecoveryTime: (prev.averageRecoveryTime + recoveryTime) / 2,\n    }));\n  }, []);\n\n  const trackFailedRecovery = useCallback(() => {\n    setAnalytics(prev => ({\n      ...prev,\n      failedRecoveries: prev.failedRecoveries + 1,\n    }));\n  }, []);\n\n  return {\n    analytics,\n    trackError,\n    trackRecovery,\n    trackFailedRecovery,\n  };\n}\n\n/**\n * Hook for creating error boundary configurations\n */\nexport function useErrorBoundaryConfig(level: 'page' | 'widget' | 'component'): () => ErrorBoundaryConfig {\n  return useCallback((): ErrorBoundaryConfig => {\n    const baseConfig: ErrorBoundaryConfig = {\n      maxRetries: 3,\n      retryDelay: 1000,\n      enableAutoRetry: false,\n    };\n\n    switch (level) {\n      case 'page':\n        return {\n          ...baseConfig,\n          maxRetries: 2,\n          enableAutoRetry: true,\n          onError: (error: Error): void => {\n            appLogger.error('Page-level error occurred', { error, level });\n          },\n        };\n\n      case 'widget':\n        return {\n          ...baseConfig,\n          maxRetries: 3,\n          enableAutoRetry: true,\n          retryDelay: 500,\n          onError: (error: Error): void => {\n            appLogger.warn('Widget-level error occurred', { error, level });\n          },\n        };\n\n      case 'component':\n        return {\n          ...baseConfig,\n          maxRetries: 1,\n          enableAutoRetry: false,\n          onError: (error: Error): void => {\n            appLogger.info('Component-level error occurred', { error, level });\n          },\n        };\n\n      default:\n        return baseConfig;\n    }\n  }, [level]);\n}\n\n/**\n * Utility function to check if error is recoverable\n */\nexport function isRecoverableError(error: Error): boolean {\n  const recoverableErrors = [\n    'ChunkLoadError',\n    'Loading chunk',\n    'Network request failed',\n    'fetch is not defined',\n    'NetworkError',\n    'TimeoutError',\n    'AbortError',\n  ];\n\n  return recoverableErrors.some(errorType => \n    error.name.includes(errorType) || \n    error.message.includes(errorType)\n  );\n}\n\n/**\n * Utility function to get error severity\n */\nexport function getErrorSeverity(\n  error: Error, \n  level: 'page' | 'widget' | 'component',\n  retryCount: number\n): 'low' | 'medium' | 'high' | 'critical' {\n  // Critical errors that crash entire pages\n  if (level === 'page') return 'critical';\n  \n  // High-priority errors\n  if (error.name.includes('TypeError') || error.name.includes('ReferenceError')) {\n    return 'high';\n  }\n  \n  // Network-related errors are usually medium severity\n  if (isRecoverableError(error)) {\n    return retryCount >= 2 ? 'high' : 'medium';\n  }\n  \n  // Component-level errors are usually low-medium severity\n  if (level === 'component') {\n    return retryCount >= 1 ? 'medium' : 'low';\n  }\n  \n  return 'medium';\n}"],
      names: ["getErrorSeverity", "isRecoverableError", "useErrorBoundary", "useErrorBoundaryAnalytics", "useErrorBoundaryConfig", "config", "state", "setState", "useState", "errorCount", "isRecovering", "stateRef", "useRef", "current", "reportError", "useCallback", "error", "errorInfo", "onError", "prev", "lastErrorTime", "Date", "now", "appLogger", "startRecovery", "completeRecovery", "resetErrorCount", "analytics", "setAnalytics", "totalErrors", "recoveredErrors", "failedRecoveries", "averageRecoveryTime", "trackError", "trackRecovery", "recoveryTime", "trackFailedRecovery", "level", "baseConfig", "maxRetries", "retryDelay", "enableAutoRetry", "warn", "info", "recoverableErrors", "some", "errorType", "name", "includes", "message", "retryCount"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "36330407088fdba82f52325c9972efe986de76f9"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bug22mvp9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bug22mvp9();
cov_bug22mvp9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_bug22mvp9().f[0]++;
  cov_bug22mvp9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_bug22mvp9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_bug22mvp9().s[3]++;
_export(exports, {
  get getErrorSeverity() {
    /* istanbul ignore next */
    cov_bug22mvp9().f[1]++;
    cov_bug22mvp9().s[4]++;
    return getErrorSeverity;
  },
  get isRecoverableError() {
    /* istanbul ignore next */
    cov_bug22mvp9().f[2]++;
    cov_bug22mvp9().s[5]++;
    return isRecoverableError;
  },
  get useErrorBoundary() {
    /* istanbul ignore next */
    cov_bug22mvp9().f[3]++;
    cov_bug22mvp9().s[6]++;
    return useErrorBoundary;
  },
  get useErrorBoundaryAnalytics() {
    /* istanbul ignore next */
    cov_bug22mvp9().f[4]++;
    cov_bug22mvp9().s[7]++;
    return useErrorBoundaryAnalytics;
  },
  get useErrorBoundaryConfig() {
    /* istanbul ignore next */
    cov_bug22mvp9().f[5]++;
    cov_bug22mvp9().s[8]++;
    return useErrorBoundaryConfig;
  }
});
const _react =
/* istanbul ignore next */
(cov_bug22mvp9().s[9]++, require("react"));
const _loggerconfig =
/* istanbul ignore next */
(cov_bug22mvp9().s[10]++, require("../../lib/monitoring/logger.config"));
function useErrorBoundary(config =
/* istanbul ignore next */
(cov_bug22mvp9().b[0][0]++, {})) {
  /* istanbul ignore next */
  cov_bug22mvp9().f[6]++;
  const [state, setState] =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[11]++, (0, _react.useState)({
    errorCount: 0,
    isRecovering: false
  }));
  const stateRef =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[12]++, (0, _react.useRef)(state));
  /* istanbul ignore next */
  cov_bug22mvp9().s[13]++;
  stateRef.current = state;
  const reportError =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[14]++, (0, _react.useCallback)((error, errorInfo) => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[7]++;
    const {
      onError
    } =
    /* istanbul ignore next */
    (cov_bug22mvp9().s[15]++, config);
    /* istanbul ignore next */
    cov_bug22mvp9().s[16]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[8]++;
      cov_bug22mvp9().s[17]++;
      return {
        ...prev,
        errorCount: prev.errorCount + 1,
        lastErrorTime: Date.now()
      };
    });
    /* istanbul ignore next */
    cov_bug22mvp9().s[18]++;
    _loggerconfig.appLogger.error('Error boundary error reported', {
      error,
      errorCount: stateRef.current.errorCount + 1,
      ...errorInfo
    });
    /* istanbul ignore next */
    cov_bug22mvp9().s[19]++;
    if (onError) {
      /* istanbul ignore next */
      cov_bug22mvp9().b[1][0]++;
      cov_bug22mvp9().s[20]++;
      onError(error);
    } else
    /* istanbul ignore next */
    {
      cov_bug22mvp9().b[1][1]++;
    }
  }, [config]));
  const startRecovery =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[21]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[9]++;
    cov_bug22mvp9().s[22]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[10]++;
      cov_bug22mvp9().s[23]++;
      return {
        ...prev,
        isRecovering: true
      };
    });
  }, []));
  const completeRecovery =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[24]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[11]++;
    cov_bug22mvp9().s[25]++;
    setState(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[12]++;
      cov_bug22mvp9().s[26]++;
      return {
        ...prev,
        isRecovering: false
      };
    });
  }, []));
  const resetErrorCount =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[27]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[13]++;
    cov_bug22mvp9().s[28]++;
    setState({
      errorCount: 0,
      isRecovering: false
    });
  }, []));
  /* istanbul ignore next */
  cov_bug22mvp9().s[29]++;
  return {
    ...state,
    reportError,
    startRecovery,
    completeRecovery,
    resetErrorCount
  };
}
function useErrorBoundaryAnalytics() {
  /* istanbul ignore next */
  cov_bug22mvp9().f[14]++;
  const [analytics, setAnalytics] =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[30]++, (0, _react.useState)({
    totalErrors: 0,
    recoveredErrors: 0,
    failedRecoveries: 0,
    averageRecoveryTime: 0
  }));
  const trackError =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[31]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[15]++;
    cov_bug22mvp9().s[32]++;
    setAnalytics(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[16]++;
      cov_bug22mvp9().s[33]++;
      return {
        ...prev,
        totalErrors: prev.totalErrors + 1
      };
    });
  }, []));
  const trackRecovery =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[34]++, (0, _react.useCallback)(recoveryTime => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[17]++;
    cov_bug22mvp9().s[35]++;
    setAnalytics(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[18]++;
      cov_bug22mvp9().s[36]++;
      return {
        ...prev,
        recoveredErrors: prev.recoveredErrors + 1,
        averageRecoveryTime: (prev.averageRecoveryTime + recoveryTime) / 2
      };
    });
  }, []));
  const trackFailedRecovery =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[37]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[19]++;
    cov_bug22mvp9().s[38]++;
    setAnalytics(prev => {
      /* istanbul ignore next */
      cov_bug22mvp9().f[20]++;
      cov_bug22mvp9().s[39]++;
      return {
        ...prev,
        failedRecoveries: prev.failedRecoveries + 1
      };
    });
  }, []));
  /* istanbul ignore next */
  cov_bug22mvp9().s[40]++;
  return {
    analytics,
    trackError,
    trackRecovery,
    trackFailedRecovery
  };
}
function useErrorBoundaryConfig(level) {
  /* istanbul ignore next */
  cov_bug22mvp9().f[21]++;
  cov_bug22mvp9().s[41]++;
  return (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[22]++;
    const baseConfig =
    /* istanbul ignore next */
    (cov_bug22mvp9().s[42]++, {
      maxRetries: 3,
      retryDelay: 1000,
      enableAutoRetry: false
    });
    /* istanbul ignore next */
    cov_bug22mvp9().s[43]++;
    switch (level) {
      case 'page':
        /* istanbul ignore next */
        cov_bug22mvp9().b[2][0]++;
        cov_bug22mvp9().s[44]++;
        return {
          ...baseConfig,
          maxRetries: 2,
          enableAutoRetry: true,
          onError: error => {
            /* istanbul ignore next */
            cov_bug22mvp9().f[23]++;
            cov_bug22mvp9().s[45]++;
            _loggerconfig.appLogger.error('Page-level error occurred', {
              error,
              level
            });
          }
        };
      case 'widget':
        /* istanbul ignore next */
        cov_bug22mvp9().b[2][1]++;
        cov_bug22mvp9().s[46]++;
        return {
          ...baseConfig,
          maxRetries: 3,
          enableAutoRetry: true,
          retryDelay: 500,
          onError: error => {
            /* istanbul ignore next */
            cov_bug22mvp9().f[24]++;
            cov_bug22mvp9().s[47]++;
            _loggerconfig.appLogger.warn('Widget-level error occurred', {
              error,
              level
            });
          }
        };
      case 'component':
        /* istanbul ignore next */
        cov_bug22mvp9().b[2][2]++;
        cov_bug22mvp9().s[48]++;
        return {
          ...baseConfig,
          maxRetries: 1,
          enableAutoRetry: false,
          onError: error => {
            /* istanbul ignore next */
            cov_bug22mvp9().f[25]++;
            cov_bug22mvp9().s[49]++;
            _loggerconfig.appLogger.info('Component-level error occurred', {
              error,
              level
            });
          }
        };
      default:
        /* istanbul ignore next */
        cov_bug22mvp9().b[2][3]++;
        cov_bug22mvp9().s[50]++;
        return baseConfig;
    }
  }, [level]);
}
function isRecoverableError(error) {
  /* istanbul ignore next */
  cov_bug22mvp9().f[26]++;
  const recoverableErrors =
  /* istanbul ignore next */
  (cov_bug22mvp9().s[51]++, ['ChunkLoadError', 'Loading chunk', 'Network request failed', 'fetch is not defined', 'NetworkError', 'TimeoutError', 'AbortError']);
  /* istanbul ignore next */
  cov_bug22mvp9().s[52]++;
  return recoverableErrors.some(errorType => {
    /* istanbul ignore next */
    cov_bug22mvp9().f[27]++;
    cov_bug22mvp9().s[53]++;
    return /* istanbul ignore next */(cov_bug22mvp9().b[3][0]++, error.name.includes(errorType)) ||
    /* istanbul ignore next */
    (cov_bug22mvp9().b[3][1]++, error.message.includes(errorType));
  });
}
function getErrorSeverity(error, level, retryCount) {
  /* istanbul ignore next */
  cov_bug22mvp9().f[28]++;
  cov_bug22mvp9().s[54]++;
  // Critical errors that crash entire pages
  if (level === 'page') {
    /* istanbul ignore next */
    cov_bug22mvp9().b[4][0]++;
    cov_bug22mvp9().s[55]++;
    return 'critical';
  } else
  /* istanbul ignore next */
  {
    cov_bug22mvp9().b[4][1]++;
  }
  // High-priority errors
  cov_bug22mvp9().s[56]++;
  if (
  /* istanbul ignore next */
  (cov_bug22mvp9().b[6][0]++, error.name.includes('TypeError')) ||
  /* istanbul ignore next */
  (cov_bug22mvp9().b[6][1]++, error.name.includes('ReferenceError'))) {
    /* istanbul ignore next */
    cov_bug22mvp9().b[5][0]++;
    cov_bug22mvp9().s[57]++;
    return 'high';
  } else
  /* istanbul ignore next */
  {
    cov_bug22mvp9().b[5][1]++;
  }
  // Network-related errors are usually medium severity
  cov_bug22mvp9().s[58]++;
  if (isRecoverableError(error)) {
    /* istanbul ignore next */
    cov_bug22mvp9().b[7][0]++;
    cov_bug22mvp9().s[59]++;
    return retryCount >= 2 ?
    /* istanbul ignore next */
    (cov_bug22mvp9().b[8][0]++, 'high') :
    /* istanbul ignore next */
    (cov_bug22mvp9().b[8][1]++, 'medium');
  } else
  /* istanbul ignore next */
  {
    cov_bug22mvp9().b[7][1]++;
  }
  // Component-level errors are usually low-medium severity
  cov_bug22mvp9().s[60]++;
  if (level === 'component') {
    /* istanbul ignore next */
    cov_bug22mvp9().b[9][0]++;
    cov_bug22mvp9().s[61]++;
    return retryCount >= 1 ?
    /* istanbul ignore next */
    (cov_bug22mvp9().b[10][0]++, 'medium') :
    /* istanbul ignore next */
    (cov_bug22mvp9().b[10][1]++, 'low');
  } else
  /* istanbul ignore next */
  {
    cov_bug22mvp9().b[9][1]++;
  }
  cov_bug22mvp9().s[62]++;
  return 'medium';
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,