8d2c97c2993fd3da8749cbb330c9f1fc
"use strict";

/* istanbul ignore next */
function cov_1hcoqwp1hd() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/monitoring/performance.ts";
  var hash = "aa9e937e9810bdc70e53f95585474d545fd98368";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/monitoring/performance.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 34
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 31
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 37
        }
      },
      "7": {
        start: {
          line: 22,
          column: 30
        },
        end: {
          line: 22,
          column: 82
        }
      },
      "8": {
        start: {
          line: 23,
          column: 22
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "9": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "10": {
        start: {
          line: 25,
          column: 39
        },
        end: {
          line: 25,
          column: 51
        }
      },
      "11": {
        start: {
          line: 26,
          column: 28
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "12": {
        start: {
          line: 27,
          column: 27
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "13": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 20
        }
      },
      "14": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 66
        }
      },
      "15": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "16": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 19
        }
      },
      "17": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "18": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 39,
          column: 10
        }
      },
      "19": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 53
        }
      },
      "20": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "21": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 30
        }
      },
      "22": {
        start: {
          line: 45,
          column: 17
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "23": {
        start: {
          line: 48,
          column: 32
        },
        end: {
          line: 48,
          column: 88
        }
      },
      "24": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 58,
          column: 5
        }
      },
      "25": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 57,
          column: 9
        }
      },
      "26": {
        start: {
          line: 51,
          column: 23
        },
        end: {
          line: 51,
          column: 95
        }
      },
      "27": {
        start: {
          line: 52,
          column: 12
        },
        end: {
          line: 56,
          column: 13
        }
      },
      "28": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 57
        }
      },
      "29": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 39
        }
      },
      "30": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 25
        }
      },
      "31": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 62,
          column: 5
        }
      },
      "32": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 31
        }
      },
      "33": {
        start: {
          line: 63,
          column: 4
        },
        end: {
          line: 63,
          column: 18
        }
      },
      "34": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 91,
          column: 1
        }
      },
      "35": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 94,
          column: 38
        }
      },
      "36": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 95,
          column: 34
        }
      },
      "37": {
        start: {
          line: 95,
          column: 20
        },
        end: {
          line: 95,
          column: 34
        }
      },
      "38": {
        start: {
          line: 96,
          column: 4
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "39": {
        start: {
          line: 96,
          column: 33
        },
        end: {
          line: 96,
          column: 47
        }
      },
      "40": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 60
        }
      },
      "41": {
        start: {
          line: 97,
          column: 33
        },
        end: {
          line: 97,
          column: 60
        }
      },
      "42": {
        start: {
          line: 98,
          column: 4
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "43": {
        start: {
          line: 101,
          column: 19
        },
        end: {
          line: 101,
          column: 55
        }
      },
      "44": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "45": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 110,
          column: 11
        }
      },
      "46": {
        start: {
          line: 113,
          column: 4
        },
        end: {
          line: 123,
          column: 7
        }
      },
      "47": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 69
        }
      },
      "48": {
        start: {
          line: 127,
          column: 4
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "49": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 134,
          column: 11
        }
      },
      "50": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 31
        }
      },
      "51": {
        start: {
          line: 143,
          column: 26
        },
        end: {
          line: 143,
          column: 43
        }
      },
      "52": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 40
        }
      },
      "53": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 151,
          column: 9
        }
      },
      "54": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "55": {
        start: {
          line: 155,
          column: 24
        },
        end: {
          line: 155,
          column: 41
        }
      },
      "56": {
        start: {
          line: 156,
          column: 26
        },
        end: {
          line: 156,
          column: 46
        }
      },
      "57": {
        start: {
          line: 157,
          column: 8
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "58": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 81
        }
      },
      "59": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 159,
          column: 21
        }
      },
      "60": {
        start: {
          line: 161,
          column: 25
        },
        end: {
          line: 161,
          column: 56
        }
      },
      "61": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 32
        }
      },
      "62": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 166,
          column: 11
        }
      },
      "63": {
        start: {
          line: 168,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "64": {
        start: {
          line: 169,
          column: 12
        },
        end: {
          line: 177,
          column: 15
        }
      },
      "65": {
        start: {
          line: 179,
          column: 8
        },
        end: {
          line: 179,
          column: 24
        }
      },
      "66": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 206,
          column: 9
        }
      },
      "67": {
        start: {
          line: 184,
          column: 31
        },
        end: {
          line: 184,
          column: 42
        }
      },
      "68": {
        start: {
          line: 185,
          column: 31
        },
        end: {
          line: 190,
          column: 13
        }
      },
      "69": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 193,
          column: 15
        }
      },
      "70": {
        start: {
          line: 195,
          column: 12
        },
        end: {
          line: 205,
          column: 13
        }
      },
      "71": {
        start: {
          line: 196,
          column: 16
        },
        end: {
          line: 198,
          column: 19
        }
      },
      "72": {
        start: {
          line: 199,
          column: 16
        },
        end: {
          line: 204,
          column: 19
        }
      },
      "73": {
        start: {
          line: 210,
          column: 26
        },
        end: {
          line: 210,
          column: 43
        }
      },
      "74": {
        start: {
          line: 211,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "75": {
        start: {
          line: 212,
          column: 27
        },
        end: {
          line: 212,
          column: 42
        }
      },
      "76": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 213,
          column: 70
        }
      },
      "77": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 81
        }
      },
      "78": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 26
        }
      },
      "79": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 217,
          column: 70
        }
      },
      "80": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 221,
          column: 15
        }
      },
      "81": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 24
        }
      },
      "82": {
        start: {
          line: 227,
          column: 4
        },
        end: {
          line: 242,
          column: 6
        }
      },
      "83": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 69
        }
      },
      "84": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 235,
          column: 15
        }
      },
      "85": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 240,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 30
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 27
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 33
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 33
          }
        },
        loc: {
          start: {
            line: 24,
            column: 47
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 28,
            column: 39
          },
          end: {
            line: 28,
            column: 40
          }
        },
        loc: {
          start: {
            line: 28,
            column: 61
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 34
          }
        },
        loc: {
          start: {
            line: 32,
            column: 53
          },
          end: {
            line: 64,
            column: 1
          }
        },
        line: 32
      },
      "7": {
        name: "getRating",
        decl: {
          start: {
            line: 93,
            column: 9
          },
          end: {
            line: 93,
            column: 18
          }
        },
        loc: {
          start: {
            line: 93,
            column: 32
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 93
      },
      "8": {
        name: "reportWebVitals",
        decl: {
          start: {
            line: 100,
            column: 9
          },
          end: {
            line: 100,
            column: 24
          }
        },
        loc: {
          start: {
            line: 100,
            column: 33
          },
          end: {
            line: 136,
            column: 1
          }
        },
        line: 100
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 142,
            column: 5
          }
        },
        loc: {
          start: {
            line: 142,
            column: 22
          },
          end: {
            line: 152,
            column: 5
          }
        },
        line: 142
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        loc: {
          start: {
            line: 154,
            column: 34
          },
          end: {
            line: 180,
            column: 5
          }
        },
        line: 154
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 182,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        loc: {
          start: {
            line: 182,
            column: 25
          },
          end: {
            line: 207,
            column: 5
          }
        },
        line: 182
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 209,
            column: 4
          },
          end: {
            line: 209,
            column: 5
          }
        },
        loc: {
          start: {
            line: 209,
            column: 54
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 209
      },
      "13": {
        name: "usePerformanceMonitor",
        decl: {
          start: {
            line: 226,
            column: 9
          },
          end: {
            line: 226,
            column: 30
          }
        },
        loc: {
          start: {
            line: 226,
            column: 46
          },
          end: {
            line: 243,
            column: 1
          }
        },
        line: 226
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 228,
            column: 19
          },
          end: {
            line: 228,
            column: 20
          }
        },
        loc: {
          start: {
            line: 228,
            column: 32
          },
          end: {
            line: 230,
            column: 9
          }
        },
        line: 228
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 231,
            column: 17
          },
          end: {
            line: 231,
            column: 18
          }
        },
        loc: {
          start: {
            line: 231,
            column: 39
          },
          end: {
            line: 236,
            column: 9
          }
        },
        line: 231
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 237,
            column: 20
          },
          end: {
            line: 237,
            column: 21
          }
        },
        loc: {
          start: {
            line: 237,
            column: 42
          },
          end: {
            line: 241,
            column: 9
          }
        },
        line: 237
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 15
          },
          end: {
            line: 29,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 29,
            column: 29
          },
          end: {
            line: 29,
            column: 45
          }
        }, {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 65
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 35,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 27
          }
        }, {
          start: {
            line: 33,
            column: 31
          },
          end: {
            line: 33,
            column: 45
          }
        }],
        line: 33
      },
      "4": {
        loc: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 36
      },
      "5": {
        loc: {
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 36,
            column: 8
          },
          end: {
            line: 36,
            column: 20
          }
        }, {
          start: {
            line: 36,
            column: 24
          },
          end: {
            line: 36,
            column: 47
          }
        }, {
          start: {
            line: 36,
            column: 51
          },
          end: {
            line: 36,
            column: 76
          }
        }],
        line: 36
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "7": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 42,
            column: 13
          }
        }, {
          start: {
            line: 42,
            column: 17
          },
          end: {
            line: 42,
            column: 31
          }
        }],
        line: 42
      },
      "8": {
        loc: {
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 48,
            column: 32
          },
          end: {
            line: 48,
            column: 53
          }
        }, {
          start: {
            line: 48,
            column: 57
          },
          end: {
            line: 48,
            column: 88
          }
        }],
        line: 48
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 57,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 12
          },
          end: {
            line: 50,
            column: 29
          }
        }, {
          start: {
            line: 50,
            column: 33
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "11": {
        loc: {
          start: {
            line: 51,
            column: 23
          },
          end: {
            line: 51,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 51,
            column: 47
          },
          end: {
            line: 51,
            column: 88
          }
        }, {
          start: {
            line: 51,
            column: 91
          },
          end: {
            line: 51,
            column: 95
          }
        }],
        line: 51
      },
      "12": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 56,
            column: 13
          }
        }, {
          start: {
            line: 54,
            column: 19
          },
          end: {
            line: 56,
            column: 13
          }
        }],
        line: 52
      },
      "13": {
        loc: {
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 16
          },
          end: {
            line: 52,
            column: 20
          }
        }, {
          start: {
            line: 52,
            column: 25
          },
          end: {
            line: 52,
            column: 33
          }
        }, {
          start: {
            line: 52,
            column: 37
          },
          end: {
            line: 52,
            column: 45
          }
        }],
        line: 52
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 62,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 34
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 34
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "16": {
        loc: {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "17": {
        loc: {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 60
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 97,
            column: 60
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "18": {
        loc: {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "19": {
        loc: {
          start: {
            line: 115,
            column: 15
          },
          end: {
            line: 115,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 35
          },
          end: {
            line: 115,
            column: 42
          }
        }, {
          start: {
            line: 115,
            column: 45
          },
          end: {
            line: 115,
            column: 96
          }
        }],
        line: 115
      },
      "20": {
        loc: {
          start: {
            line: 115,
            column: 45
          },
          end: {
            line: 115,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 115,
            column: 78
          },
          end: {
            line: 115,
            column: 87
          }
        }, {
          start: {
            line: 115,
            column: 90
          },
          end: {
            line: 115,
            column: 96
          }
        }],
        line: 115
      },
      "21": {
        loc: {
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 4
          },
          end: {
            line: 135,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "22": {
        loc: {
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 8
          },
          end: {
            line: 151,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "23": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 160,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "24": {
        loc: {
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 8
          },
          end: {
            line: 178,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 168
      },
      "25": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 206,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "26": {
        loc: {
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 183,
            column: 12
          },
          end: {
            line: 183,
            column: 41
          }
        }, {
          start: {
            line: 183,
            column: 45
          },
          end: {
            line: 183,
            column: 68
          }
        }],
        line: 183
      },
      "27": {
        loc: {
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 195,
            column: 12
          },
          end: {
            line: 205,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 195
      },
      "28": {
        loc: {
          start: {
            line: 220,
            column: 23
          },
          end: {
            line: 220,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 220,
            column: 48
          },
          end: {
            line: 220,
            column: 53
          }
        }, {
          start: {
            line: 220,
            column: 56
          },
          end: {
            line: 220,
            column: 80
          }
        }],
        line: 220
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/monitoring/performance.ts"],
      sourcesContent: ["import * as Sentry from '@sentry/nextjs';\n\nimport { appLogger } from './logger.config';\n\n// Core Web Vitals tracking\nexport interface WebVitalsMetric {\n  name: string;\n  value: number;\n  rating: 'good' | 'needs-improvement' | 'poor';\n  delta: number;\n  id: string;\n}\n\n// Performance thresholds based on Google's Core Web Vitals\nconst THRESHOLDS = {\n  CLS: { good: 0.1, poor: 0.25 },\n  FID: { good: 100, poor: 300 },\n  FCP: { good: 1800, poor: 3000 },\n  LCP: { good: 2500, poor: 4000 },\n  TTFB: { good: 800, poor: 1800 },\n  INP: { good: 200, poor: 500 },\n};\n\n// Get performance rating\nfunction getRating(name: string, value: number): 'good' | 'needs-improvement' | 'poor' {\n  const threshold = THRESHOLDS[name as keyof typeof THRESHOLDS];\n  if (!threshold) return 'good';\n  \n  if (value <= threshold.good) return 'good';\n  if (value <= threshold.poor) return 'needs-improvement';\n  return 'poor';\n}\n\n// Enhanced Web Vitals reporting\nexport function reportWebVitals(metric: WebVitalsMetric): void {\n  const rating = getRating(metric.name, metric.value);\n  \n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    appLogger.performance(`Web Vital: ${metric.name}`, metric.value, {\n      metadata: {\n        rating,\n        id: metric.id,\n        delta: metric.delta,\n      },\n    });\n  }\n  \n  // Send to Sentry\n  Sentry.addBreadcrumb({\n    message: `Web Vital: ${metric.name}`,\n    level: rating === 'poor' ? 'error' : rating === 'needs-improvement' ? 'warning' : 'info',\n    data: {\n      value: metric.value,\n      rating,\n      id: metric.id,\n      delta: metric.delta,\n    },\n    category: 'web-vitals',\n  });\n  \n  // Send performance data to Sentry as measurement\n  Sentry.setMeasurement(metric.name, metric.value, 'millisecond');\n  \n  // Alert on poor performance\n  if (rating === 'poor') {\n    appLogger.warn(`Poor Web Vital detected: ${metric.name}`, {\n      metadata: {\n        value: metric.value,\n        threshold: THRESHOLDS[metric.name as keyof typeof THRESHOLDS]?.poor,\n        id: metric.id,\n      },\n    });\n  }\n}\n\n// Performance monitoring utilities\nexport class PerformanceMonitor {\n  private static marks = new Map<string, number>();\n  \n  // Start performance measurement\n  static mark(name: string): void {\n    const timestamp = performance.now();\n    this.marks.set(name, timestamp);\n    \n    if (process.env.NODE_ENV === 'development') {\n      appLogger.debug(`Performance mark: ${name}`, {\n        metadata: { timestamp },\n      });\n    }\n  }\n  \n  // End performance measurement\n  static measure(name: string, context?: Record<string, unknown>): number {\n    const endTime = performance.now();\n    const startTime = this.marks.get(name);\n    \n    if (!startTime) {\n      appLogger.warn(`Performance mark '${name}' not found`);\n      return 0;\n    }\n    \n    const duration = Math.round(endTime - startTime);\n    this.marks.delete(name);\n    \n    // Log performance measurement\n    appLogger.performance(name, duration, {\n      metadata: context,\n    });\n    \n    // Send to Sentry if duration is concerning\n    if (duration > 1000) { // Over 1 second\n      Sentry.addBreadcrumb({\n        message: `Slow operation: ${name}`,\n        level: 'warning',\n        data: { duration, ...context },\n        category: 'performance',\n      });\n    }\n    \n    return duration;\n  }\n  \n  // Memory usage monitoring\n  static checkMemory(): void {\n    if (typeof window !== 'undefined' && 'memory' in performance) {\n      const { memory } = (performance as { memory: { usedJSHeapSize: number; totalJSHeapSize: number; jsHeapSizeLimit: number } });\n      const memoryInfo = {\n        used: Math.round(memory.usedJSHeapSize / 1048576), // MB\n        total: Math.round(memory.totalJSHeapSize / 1048576), // MB\n        limit: Math.round(memory.jsHeapSizeLimit / 1048576), // MB\n        usage: Math.round((memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100), // %\n      };\n      \n      appLogger.info('Memory usage check', {\n        metadata: memoryInfo,\n      });\n      \n      // Alert on high memory usage\n      if (memoryInfo.usage > 80) {\n        appLogger.warn('High memory usage detected', {\n          metadata: memoryInfo,\n        });\n        \n        Sentry.addBreadcrumb({\n          message: 'High memory usage',\n          level: 'warning',\n          data: memoryInfo,\n          category: 'performance',\n        });\n      }\n    }\n  }\n  \n  // API call performance tracking\n  static async trackApiCall<T>(\n    name: string, \n    apiCall: () => Promise<T>,\n    context?: Record<string, unknown>\n  ): Promise<T> {\n    const startTime = performance.now();\n    \n    try {\n      const result = await apiCall();\n      const duration = Math.round(performance.now() - startTime);\n      \n      appLogger.apiCall('GET', name, duration, 200, context);\n      \n      return result;\n    } catch (error) {\n      const duration = Math.round(performance.now() - startTime);\n      \n      appLogger.apiCall('GET', name, duration, 500, {\n        ...context,\n        error: error instanceof Error ? error : new Error(String(error)),\n      });\n      \n      throw error;\n    }\n  }\n}\n\n// Hook for React component performance tracking\nexport function usePerformanceMonitor(componentName: string): {\n  markStart: (operation: string) => void;\n  markEnd: (operation: string, context?: Record<string, unknown>) => number;\n  trackAsync: <T>(operation: string, asyncFn: () => Promise<T>) => Promise<T>;\n} {\n  return {\n    markStart: (operation: string): void => {\n      PerformanceMonitor.mark(`${componentName}.${operation}`);\n    },\n    markEnd: (operation: string, context?: Record<string, unknown>): number => {\n      return PerformanceMonitor.measure(`${componentName}.${operation}`, {\n        component: componentName,\n        ...context,\n      });\n    },\n    trackAsync: <T>(operation: string, asyncFn: () => Promise<T>): Promise<T> => {\n      return PerformanceMonitor.trackApiCall(\n        `${componentName}.${operation}`,\n        asyncFn,\n        { component: componentName }\n      );\n    },\n  };\n}"],
      names: ["PerformanceMonitor", "reportWebVitals", "usePerformanceMonitor", "THRESHOLDS", "CLS", "good", "poor", "FID", "FCP", "LCP", "TTFB", "INP", "getRating", "name", "value", "threshold", "metric", "rating", "process", "env", "NODE_ENV", "appLogger", "performance", "metadata", "id", "delta", "Sentry", "addBreadcrumb", "message", "level", "data", "category", "setMeasurement", "warn", "marks", "Map", "mark", "timestamp", "now", "set", "debug", "measure", "context", "endTime", "startTime", "get", "duration", "Math", "round", "delete", "checkMemory", "window", "memory", "memoryInfo", "used", "usedJSHeapSize", "total", "totalJSHeapSize", "limit", "jsHeapSizeLimit", "usage", "info", "trackApiCall", "apiCall", "result", "error", "Error", "String", "componentName", "markStart", "operation", "markEnd", "component", "trackAsync", "asyncFn"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "aa9e937e9810bdc70e53f95585474d545fd98368"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1hcoqwp1hd = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1hcoqwp1hd();
cov_1hcoqwp1hd().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[0]++;
  cov_1hcoqwp1hd().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1hcoqwp1hd().s[3]++;
_export(exports, {
  get PerformanceMonitor() {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[1]++;
    cov_1hcoqwp1hd().s[4]++;
    return PerformanceMonitor;
  },
  get reportWebVitals() {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[2]++;
    cov_1hcoqwp1hd().s[5]++;
    return reportWebVitals;
  },
  get usePerformanceMonitor() {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[3]++;
    cov_1hcoqwp1hd().s[6]++;
    return usePerformanceMonitor;
  }
});
const _nextjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_1hcoqwp1hd().s[7]++, _interop_require_wildcard(require("@sentry/nextjs")));
const _loggerconfig =
/* istanbul ignore next */
(cov_1hcoqwp1hd().s[8]++, require("./logger.config"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[4]++;
  cov_1hcoqwp1hd().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[0][0]++;
    cov_1hcoqwp1hd().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[5]++;
    cov_1hcoqwp1hd().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[6]++;
  cov_1hcoqwp1hd().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[2][0]++;
    cov_1hcoqwp1hd().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[2][1]++;
  }
  cov_1hcoqwp1hd().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[4][0]++;
    cov_1hcoqwp1hd().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[6][0]++;
    cov_1hcoqwp1hd().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[23]++,
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1hcoqwp1hd().b[12][0]++;
        cov_1hcoqwp1hd().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1hcoqwp1hd().b[12][1]++;
        cov_1hcoqwp1hd().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hcoqwp1hd().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[14][0]++;
    cov_1hcoqwp1hd().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[14][1]++;
  }
  cov_1hcoqwp1hd().s[33]++;
  return newObj;
}
// Performance thresholds based on Google's Core Web Vitals
const THRESHOLDS =
/* istanbul ignore next */
(cov_1hcoqwp1hd().s[34]++, {
  CLS: {
    good: 0.1,
    poor: 0.25
  },
  FID: {
    good: 100,
    poor: 300
  },
  FCP: {
    good: 1800,
    poor: 3000
  },
  LCP: {
    good: 2500,
    poor: 4000
  },
  TTFB: {
    good: 800,
    poor: 1800
  },
  INP: {
    good: 200,
    poor: 500
  }
});
// Get performance rating
function getRating(name, value) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[7]++;
  const threshold =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[35]++, THRESHOLDS[name]);
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[36]++;
  if (!threshold) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[15][0]++;
    cov_1hcoqwp1hd().s[37]++;
    return 'good';
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[15][1]++;
  }
  cov_1hcoqwp1hd().s[38]++;
  if (value <= threshold.good) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[16][0]++;
    cov_1hcoqwp1hd().s[39]++;
    return 'good';
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[16][1]++;
  }
  cov_1hcoqwp1hd().s[40]++;
  if (value <= threshold.poor) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[17][0]++;
    cov_1hcoqwp1hd().s[41]++;
    return 'needs-improvement';
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[17][1]++;
  }
  cov_1hcoqwp1hd().s[42]++;
  return 'poor';
}
function reportWebVitals(metric) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[8]++;
  const rating =
  /* istanbul ignore next */
  (cov_1hcoqwp1hd().s[43]++, getRating(metric.name, metric.value));
  // Log to console in development
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[44]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[18][0]++;
    cov_1hcoqwp1hd().s[45]++;
    _loggerconfig.appLogger.performance(`Web Vital: ${metric.name}`, metric.value, {
      metadata: {
        rating,
        id: metric.id,
        delta: metric.delta
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[18][1]++;
  }
  // Send to Sentry
  cov_1hcoqwp1hd().s[46]++;
  _nextjs.addBreadcrumb({
    message: `Web Vital: ${metric.name}`,
    level: rating === 'poor' ?
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[19][0]++, 'error') :
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[19][1]++, rating === 'needs-improvement' ?
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[20][0]++, 'warning') :
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[20][1]++, 'info')),
    data: {
      value: metric.value,
      rating,
      id: metric.id,
      delta: metric.delta
    },
    category: 'web-vitals'
  });
  // Send performance data to Sentry as measurement
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[47]++;
  _nextjs.setMeasurement(metric.name, metric.value, 'millisecond');
  // Alert on poor performance
  /* istanbul ignore next */
  cov_1hcoqwp1hd().s[48]++;
  if (rating === 'poor') {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().b[21][0]++;
    cov_1hcoqwp1hd().s[49]++;
    _loggerconfig.appLogger.warn(`Poor Web Vital detected: ${metric.name}`, {
      metadata: {
        value: metric.value,
        threshold: THRESHOLDS[metric.name]?.poor,
        id: metric.id
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_1hcoqwp1hd().b[21][1]++;
  }
}
class PerformanceMonitor {
  static {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[50]++;
    this.marks = new Map();
  }
  // Start performance measurement
  static mark(name) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[9]++;
    const timestamp =
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().s[51]++, performance.now());
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[52]++;
    this.marks.set(name, timestamp);
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[53]++;
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().b[22][0]++;
      cov_1hcoqwp1hd().s[54]++;
      _loggerconfig.appLogger.debug(`Performance mark: ${name}`, {
        metadata: {
          timestamp
        }
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hcoqwp1hd().b[22][1]++;
    }
  }
  // End performance measurement
  static measure(name, context) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[10]++;
    const endTime =
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().s[55]++, performance.now());
    const startTime =
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().s[56]++, this.marks.get(name));
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[57]++;
    if (!startTime) {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().b[23][0]++;
      cov_1hcoqwp1hd().s[58]++;
      _loggerconfig.appLogger.warn(`Performance mark '${name}' not found`);
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[59]++;
      return 0;
    } else
    /* istanbul ignore next */
    {
      cov_1hcoqwp1hd().b[23][1]++;
    }
    const duration =
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().s[60]++, Math.round(endTime - startTime));
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[61]++;
    this.marks.delete(name);
    // Log performance measurement
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[62]++;
    _loggerconfig.appLogger.performance(name, duration, {
      metadata: context
    });
    // Send to Sentry if duration is concerning
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[63]++;
    if (duration > 1000) {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().b[24][0]++;
      cov_1hcoqwp1hd().s[64]++;
      _nextjs.addBreadcrumb({
        message: `Slow operation: ${name}`,
        level: 'warning',
        data: {
          duration,
          ...context
        },
        category: 'performance'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1hcoqwp1hd().b[24][1]++;
    }
    cov_1hcoqwp1hd().s[65]++;
    return duration;
  }
  // Memory usage monitoring
  static checkMemory() {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[11]++;
    cov_1hcoqwp1hd().s[66]++;
    if (
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[26][0]++, typeof window !== 'undefined') &&
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().b[26][1]++, 'memory' in performance)) {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().b[25][0]++;
      const {
        memory
      } =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[67]++, performance);
      const memoryInfo =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[68]++, {
        used: Math.round(memory.usedJSHeapSize / 1048576),
        total: Math.round(memory.totalJSHeapSize / 1048576),
        limit: Math.round(memory.jsHeapSizeLimit / 1048576),
        usage: Math.round(memory.usedJSHeapSize / memory.jsHeapSizeLimit * 100)
      });
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[69]++;
      _loggerconfig.appLogger.info('Memory usage check', {
        metadata: memoryInfo
      });
      // Alert on high memory usage
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[70]++;
      if (memoryInfo.usage > 80) {
        /* istanbul ignore next */
        cov_1hcoqwp1hd().b[27][0]++;
        cov_1hcoqwp1hd().s[71]++;
        _loggerconfig.appLogger.warn('High memory usage detected', {
          metadata: memoryInfo
        });
        /* istanbul ignore next */
        cov_1hcoqwp1hd().s[72]++;
        _nextjs.addBreadcrumb({
          message: 'High memory usage',
          level: 'warning',
          data: memoryInfo,
          category: 'performance'
        });
      } else
      /* istanbul ignore next */
      {
        cov_1hcoqwp1hd().b[27][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1hcoqwp1hd().b[25][1]++;
    }
  }
  // API call performance tracking
  static async trackApiCall(name, apiCall, context) {
    /* istanbul ignore next */
    cov_1hcoqwp1hd().f[12]++;
    const startTime =
    /* istanbul ignore next */
    (cov_1hcoqwp1hd().s[73]++, performance.now());
    /* istanbul ignore next */
    cov_1hcoqwp1hd().s[74]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[75]++, await apiCall());
      const duration =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[76]++, Math.round(performance.now() - startTime));
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[77]++;
      _loggerconfig.appLogger.apiCall('GET', name, duration, 200, context);
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[78]++;
      return result;
    } catch (error) {
      const duration =
      /* istanbul ignore next */
      (cov_1hcoqwp1hd().s[79]++, Math.round(performance.now() - startTime));
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[80]++;
      _loggerconfig.appLogger.apiCall('GET', name, duration, 500, {
        ...context,
        error: error instanceof Error ?
        /* istanbul ignore next */
        (cov_1hcoqwp1hd().b[28][0]++, error) :
        /* istanbul ignore next */
        (cov_1hcoqwp1hd().b[28][1]++, new Error(String(error)))
      });
      /* istanbul ignore next */
      cov_1hcoqwp1hd().s[81]++;
      throw error;
    }
  }
}
function usePerformanceMonitor(componentName) {
  /* istanbul ignore next */
  cov_1hcoqwp1hd().f[13]++;
  cov_1hcoqwp1hd().s[82]++;
  return {
    markStart: operation => {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().f[14]++;
      cov_1hcoqwp1hd().s[83]++;
      PerformanceMonitor.mark(`${componentName}.${operation}`);
    },
    markEnd: (operation, context) => {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().f[15]++;
      cov_1hcoqwp1hd().s[84]++;
      return PerformanceMonitor.measure(`${componentName}.${operation}`, {
        component: componentName,
        ...context
      });
    },
    trackAsync: (operation, asyncFn) => {
      /* istanbul ignore next */
      cov_1hcoqwp1hd().f[16]++;
      cov_1hcoqwp1hd().s[85]++;
      return PerformanceMonitor.trackApiCall(`${componentName}.${operation}`, asyncFn, {
        component: componentName
      });
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,