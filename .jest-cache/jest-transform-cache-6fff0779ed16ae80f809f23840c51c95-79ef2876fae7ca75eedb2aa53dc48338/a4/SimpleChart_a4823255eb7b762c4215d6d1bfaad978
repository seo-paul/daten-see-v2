8c2b25046d8e8756e37317d5dda85713
'use client';
"use strict";

/* istanbul ignore next */
function cov_13l54n6mvg() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/components/charts/SimpleChart.tsx";
  var hash = "6eb494c692c5c1a149082ce1781238e3f3e63edb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/components/charts/SimpleChart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 19,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 27
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 29
        }
      },
      "6": {
        start: {
          line: 20,
          column: 20
        },
        end: {
          line: 20,
          column: 48
        }
      },
      "7": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 71
        }
      },
      "8": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 50
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 26,
          column: 6
        }
      },
      "10": {
        start: {
          line: 29,
          column: 21
        },
        end: {
          line: 29,
          column: 62
        }
      },
      "11": {
        start: {
          line: 29,
          column: 50
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "13": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "14": {
        start: {
          line: 43,
          column: 68
        },
        end: {
          line: 63,
          column: 33
        }
      },
      "15": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "16": {
        start: {
          line: 69,
          column: 22
        },
        end: {
          line: 69,
          column: 67
        }
      },
      "17": {
        start: {
          line: 69,
          column: 47
        },
        end: {
          line: 69,
          column: 63
        }
      },
      "18": {
        start: {
          line: 70,
          column: 35
        },
        end: {
          line: 70,
          column: 36
        }
      },
      "19": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "20": {
        start: {
          line: 94,
          column: 59
        },
        end: {
          line: 94,
          column: 83
        }
      },
      "21": {
        start: {
          line: 95,
          column: 67
        },
        end: {
          line: 95,
          column: 87
        }
      },
      "22": {
        start: {
          line: 96,
          column: 40
        },
        end: {
          line: 96,
          column: 75
        }
      },
      "23": {
        start: {
          line: 97,
          column: 40
        },
        end: {
          line: 102,
          column: 50
        }
      },
      "24": {
        start: {
          line: 125,
          column: 55
        },
        end: {
          line: 125,
          column: 92
        }
      },
      "25": {
        start: {
          line: 126,
          column: 36
        },
        end: {
          line: 154,
          column: 46
        }
      },
      "26": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 233,
          column: 5
        }
      },
      "27": {
        start: {
          line: 165,
          column: 8
        },
        end: {
          line: 232,
          column: 11
        }
      },
      "28": {
        start: {
          line: 187,
          column: 53
        },
        end: {
          line: 194,
          column: 37
        }
      },
      "29": {
        start: {
          line: 200,
          column: 46
        },
        end: {
          line: 200,
          column: 84
        }
      },
      "30": {
        start: {
          line: 201,
          column: 46
        },
        end: {
          line: 201,
          column: 79
        }
      },
      "31": {
        start: {
          line: 202,
          column: 36
        },
        end: {
          line: 202,
          column: 55
        }
      },
      "32": {
        start: {
          line: 206,
          column: 42
        },
        end: {
          line: 206,
          column: 80
        }
      },
      "33": {
        start: {
          line: 207,
          column: 42
        },
        end: {
          line: 207,
          column: 75
        }
      },
      "34": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 226,
          column: 42
        }
      },
      "35": {
        start: {
          line: 234,
          column: 4
        },
        end: {
          line: 236,
          column: 7
        }
      },
      "36": {
        start: {
          line: 239,
          column: 24
        },
        end: {
          line: 250,
          column: 5
        }
      },
      "37": {
        start: {
          line: 240,
          column: 8
        },
        end: {
          line: 245,
          column: 9
        }
      },
      "38": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 244,
          column: 27
        }
      },
      "39": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 248,
          column: 9
        }
      },
      "40": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 40
        }
      },
      "41": {
        start: {
          line: 249,
          column: 8
        },
        end: {
          line: 249,
          column: 43
        }
      },
      "42": {
        start: {
          line: 251,
          column: 18
        },
        end: {
          line: 251,
          column: 119
        }
      },
      "43": {
        start: {
          line: 252,
          column: 28
        },
        end: {
          line: 252,
          column: 114
        }
      },
      "44": {
        start: {
          line: 253,
          column: 23
        },
        end: {
          line: 253,
          column: 92
        }
      },
      "45": {
        start: {
          line: 254,
          column: 22
        },
        end: {
          line: 254,
          column: 73
        }
      },
      "46": {
        start: {
          line: 255,
          column: 4
        },
        end: {
          line: 293,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 25
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 39
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 23
      },
      "4": {
        name: "SimpleChart",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 20
          }
        },
        loc: {
          start: {
            line: 28,
            column: 82
          },
          end: {
            line: 237,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 29,
            column: 42
          },
          end: {
            line: 29,
            column: 43
          }
        },
        loc: {
          start: {
            line: 29,
            column: 50
          },
          end: {
            line: 29,
            column: 60
          }
        },
        line: 29
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 43,
            column: 39
          },
          end: {
            line: 43,
            column: 40
          }
        },
        loc: {
          start: {
            line: 43,
            column: 68
          },
          end: {
            line: 63,
            column: 33
          }
        },
        line: 43
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 69,
            column: 34
          },
          end: {
            line: 69,
            column: 35
          }
        },
        loc: {
          start: {
            line: 69,
            column: 47
          },
          end: {
            line: 69,
            column: 63
          }
        },
        line: 69
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 93,
            column: 57
          },
          end: {
            line: 93,
            column: 58
          }
        },
        loc: {
          start: {
            line: 93,
            column: 72
          },
          end: {
            line: 103,
            column: 37
          }
        },
        line: 93
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 124,
            column: 51
          },
          end: {
            line: 124,
            column: 52
          }
        },
        loc: {
          start: {
            line: 124,
            column: 66
          },
          end: {
            line: 155,
            column: 33
          }
        },
        line: 124
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 187,
            column: 34
          },
          end: {
            line: 187,
            column: 35
          }
        },
        loc: {
          start: {
            line: 187,
            column: 53
          },
          end: {
            line: 194,
            column: 37
          }
        },
        line: 187
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 199,
            column: 49
          },
          end: {
            line: 199,
            column: 50
          }
        },
        loc: {
          start: {
            line: 199,
            column: 64
          },
          end: {
            line: 203,
            column: 33
          }
        },
        line: 199
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 205,
            column: 37
          },
          end: {
            line: 205,
            column: 38
          }
        },
        loc: {
          start: {
            line: 205,
            column: 52
          },
          end: {
            line: 227,
            column: 29
          }
        },
        line: 205
      },
      "13": {
        name: "SimpleKPICard",
        decl: {
          start: {
            line: 238,
            column: 9
          },
          end: {
            line: 238,
            column: 22
          }
        },
        loc: {
          start: {
            line: 238,
            column: 135
          },
          end: {
            line: 294,
            column: 1
          }
        },
        line: 238
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 239,
            column: 24
          },
          end: {
            line: 239,
            column: 25
          }
        },
        loc: {
          start: {
            line: 239,
            column: 31
          },
          end: {
            line: 250,
            column: 5
          }
        },
        line: 239
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 26,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 24,
            column: 35
          },
          end: {
            line: 24,
            column: 38
          }
        }, {
          start: {
            line: 24,
            column: 41
          },
          end: {
            line: 26,
            column: 5
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 24,
            column: 14
          }
        }, {
          start: {
            line: 24,
            column: 18
          },
          end: {
            line: 24,
            column: 32
          }
        }],
        line: 24
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 36
          },
          end: {
            line: 28,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 43
          },
          end: {
            line: 28,
            column: 48
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 50
          },
          end: {
            line: 28,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 59
          },
          end: {
            line: 28,
            column: 62
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 64
          },
          end: {
            line: 28,
            column: 78
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 76
          },
          end: {
            line: 28,
            column: 78
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 40,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 16
          },
          end: {
            line: 37,
            column: 21
          }
        }, {
          start: {
            line: 37,
            column: 39
          },
          end: {
            line: 40,
            column: 18
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 150
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 67
          }
        }, {
          start: {
            line: 50,
            column: 71
          },
          end: {
            line: 50,
            column: 150
          }
        }],
        line: 50
      },
      "8": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "9": {
        loc: {
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 80,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 16
          },
          end: {
            line: 77,
            column: 21
          }
        }, {
          start: {
            line: 77,
            column: 39
          },
          end: {
            line: 80,
            column: 18
          }
        }],
        line: 77
      },
      "10": {
        loc: {
          start: {
            line: 100,
            column: 78
          },
          end: {
            line: 100,
            column: 130
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 78
          },
          end: {
            line: 100,
            column: 88
          }
        }, {
          start: {
            line: 100,
            column: 92
          },
          end: {
            line: 100,
            column: 130
          }
        }],
        line: 100
      },
      "11": {
        loc: {
          start: {
            line: 132,
            column: 69
          },
          end: {
            line: 132,
            column: 162
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 132,
            column: 69
          },
          end: {
            line: 132,
            column: 79
          }
        }, {
          start: {
            line: 132,
            column: 83
          },
          end: {
            line: 132,
            column: 162
          }
        }],
        line: 132
      },
      "12": {
        loc: {
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 164,
            column: 4
          },
          end: {
            line: 233,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 164
      },
      "13": {
        loc: {
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 174,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 171,
            column: 16
          },
          end: {
            line: 171,
            column: 21
          }
        }, {
          start: {
            line: 171,
            column: 39
          },
          end: {
            line: 174,
            column: 18
          }
        }],
        line: 171
      },
      "14": {
        loc: {
          start: {
            line: 238,
            column: 54
          },
          end: {
            line: 238,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 61
          },
          end: {
            line: 238,
            column: 69
          }
        }],
        line: 238
      },
      "15": {
        loc: {
          start: {
            line: 238,
            column: 78
          },
          end: {
            line: 238,
            column: 115
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 87
          },
          end: {
            line: 238,
            column: 115
          }
        }],
        line: 238
      },
      "16": {
        loc: {
          start: {
            line: 238,
            column: 117
          },
          end: {
            line: 238,
            column: 131
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 238,
            column: 129
          },
          end: {
            line: 238,
            column: 131
          }
        }],
        line: 238
      },
      "17": {
        loc: {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 245,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "18": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 248,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "19": {
        loc: {
          start: {
            line: 251,
            column: 18
          },
          end: {
            line: 251,
            column: 119
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 34
          },
          end: {
            line: 251,
            column: 107
          }
        }, {
          start: {
            line: 251,
            column: 110
          },
          end: {
            line: 251,
            column: 119
          }
        }],
        line: 251
      },
      "20": {
        loc: {
          start: {
            line: 251,
            column: 34
          },
          end: {
            line: 251,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 58
          },
          end: {
            line: 251,
            column: 62
          }
        }, {
          start: {
            line: 251,
            column: 65
          },
          end: {
            line: 251,
            column: 107
          }
        }],
        line: 251
      },
      "21": {
        loc: {
          start: {
            line: 251,
            column: 65
          },
          end: {
            line: 251,
            column: 107
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 251,
            column: 89
          },
          end: {
            line: 251,
            column: 95
          }
        }, {
          start: {
            line: 251,
            column: 98
          },
          end: {
            line: 251,
            column: 107
          }
        }],
        line: 251
      },
      "22": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 65
          },
          end: {
            line: 252,
            column: 110
          }
        }, {
          start: {
            line: 252,
            column: 113
          },
          end: {
            line: 252,
            column: 114
          }
        }],
        line: 252
      },
      "23": {
        loc: {
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 252,
            column: 28
          },
          end: {
            line: 252,
            column: 41
          }
        }, {
          start: {
            line: 252,
            column: 45
          },
          end: {
            line: 252,
            column: 62
          }
        }],
        line: 252
      },
      "24": {
        loc: {
          start: {
            line: 253,
            column: 23
          },
          end: {
            line: 253,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 40
          },
          end: {
            line: 253,
            column: 49
          }
        }, {
          start: {
            line: 253,
            column: 52
          },
          end: {
            line: 253,
            column: 92
          }
        }],
        line: 253
      },
      "25": {
        loc: {
          start: {
            line: 253,
            column: 52
          },
          end: {
            line: 253,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 253,
            column: 71
          },
          end: {
            line: 253,
            column: 80
          }
        }, {
          start: {
            line: 253,
            column: 83
          },
          end: {
            line: 253,
            column: 92
          }
        }],
        line: 253
      },
      "26": {
        loc: {
          start: {
            line: 254,
            column: 22
          },
          end: {
            line: 254,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 39
          },
          end: {
            line: 254,
            column: 42
          }
        }, {
          start: {
            line: 254,
            column: 45
          },
          end: {
            line: 254,
            column: 73
          }
        }],
        line: 254
      },
      "27": {
        loc: {
          start: {
            line: 254,
            column: 45
          },
          end: {
            line: 254,
            column: 73
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 254,
            column: 64
          },
          end: {
            line: 254,
            column: 67
          }
        }, {
          start: {
            line: 254,
            column: 70
          },
          end: {
            line: 254,
            column: 73
          }
        }],
        line: 254
      },
      "28": {
        loc: {
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 289,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 269,
            column: 20
          },
          end: {
            line: 269,
            column: 33
          }
        }, {
          start: {
            line: 269,
            column: 51
          },
          end: {
            line: 289,
            column: 22
          }
        }],
        line: 269
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/components/charts/SimpleChart.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\n\nimport { CHART_COLORS } from '@/lib/charts/config';\n\n/**\n * Temporary Simple Chart Component\n * Simplified version to bypass complex Chart.js TypeScript issues\n * Will be replaced with full Chart.js implementation in 1.3.3\n */\n\nexport interface SimpleChartProps {\n  title?: string;\n  data: Array<{\n    label: string;\n    value: number;\n    color?: string;\n  }>;\n  type?: 'bar' | 'line' | 'pie';\n  height?: number;\n  className?: string;\n}\n\nexport function SimpleChart({\n  title,\n  data,\n  type = 'bar',\n  height = 300,\n  className = '',\n}: SimpleChartProps): React.ReactElement {\n  \n  const maxValue = Math.max(...data.map(item => item.value));\n  \n  if (type === 'bar') {\n    return (\n      <div \n        className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n        style={{ height: height + 40 }}\n      >\n        {title && (\n          <h3 className=\"text-lg font-semibold text-[#3d3d3d] mb-4 text-center\">\n            {title}\n          </h3>\n        )}\n        <div className=\"h-full flex items-end justify-around space-x-2 px-2\">\n          {data.map((item, index) => (\n            <div key={index} className=\"flex flex-col items-center space-y-2 flex-1\">\n              <div\n                className=\"w-full rounded-t transition-all duration-700 ease-out\"\n                style={{\n                  height: `${(item.value / maxValue) * (height - 100)}px`,\n                  backgroundColor: item.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length],\n                  minHeight: '10px',\n                }}\n              />\n              <div className=\"text-xs text-[#5d5d5d] text-center break-words\">\n                {item.label}\n              </div>\n              <div className=\"text-xs font-medium text-[#3d3d3d]\">\n                {item.value.toLocaleString('de-DE')}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n  \n  if (type === 'pie') {\n    const total = data.reduce((sum, item) => sum + item.value, 0);\n    let cumulativePercentage = 0;\n    \n    return (\n      <div \n        className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n        style={{ height: height + 40 }}\n      >\n        {title && (\n          <h3 className=\"text-lg font-semibold text-[#3d3d3d] mb-4 text-center\">\n            {title}\n          </h3>\n        )}\n        <div className=\"flex items-center justify-center h-full\">\n          <div className=\"flex items-center space-x-8\">\n            {/* Simple Pie Representation */}\n            <div \n              className=\"rounded-full border-8 border-[#F5EFE7] relative\"\n              style={{ width: Math.min(height - 100, 200), height: Math.min(height - 100, 200) }}\n            >\n              {data.slice(0, 3).map((item, index) => {\n                const percentage = (item.value / total) * 100;\n                const previousPercentage = cumulativePercentage;\n                cumulativePercentage += percentage;\n                \n                return (\n                  <div\n                    key={index}\n                    className=\"absolute inset-0 rounded-full\"\n                    style={{\n                      background: `conic-gradient(${item.color || CHART_COLORS.dataColors[index]} ${previousPercentage}% ${cumulativePercentage}%, transparent ${cumulativePercentage}%)`,\n                    }}\n                  />\n                );\n              })}\n              <div className=\"absolute inset-4 bg-[#FDF9F3] rounded-full flex items-center justify-center\">\n                <div className=\"text-center\">\n                  <div className=\"text-xl font-bold text-[#3d3d3d]\">\n                    {total.toLocaleString('de-DE')}\n                  </div>\n                  <div className=\"text-sm text-[#5d5d5d]\">\n                    Gesamt\n                  </div>\n                </div>\n              </div>\n            </div>\n            \n            {/* Legend */}\n            <div className=\"space-y-3\">\n              {data.map((item, index) => {\n                const percentage = ((item.value / total) * 100).toFixed(1);\n                return (\n                  <div key={index} className=\"flex items-center space-x-3\">\n                    <div\n                      className=\"w-4 h-4 rounded-full\"\n                      style={{\n                        backgroundColor: item.color || CHART_COLORS.dataColors[index % CHART_COLORS.dataColors.length],\n                      }}\n                    />\n                    <div className=\"text-sm\">\n                      <div className=\"font-medium text-[#3d3d3d]\">{item.label}</div>\n                      <div className=\"text-[#5d5d5d]\">\n                        {item.value.toLocaleString('de-DE')} ({percentage}%)\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Line chart as simple connected dots\n  if (type === 'line') {\n    return (\n      <div \n        className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n        style={{ height: height + 40 }}\n      >\n        {title && (\n          <h3 className=\"text-lg font-semibold text-[#3d3d3d] mb-4 text-center\">\n            {title}\n          </h3>\n        )}\n        <div className=\"h-full relative\">\n          <svg className=\"w-full h-full\" viewBox=\"0 0 400 200\">\n            {/* Grid lines */}\n            {[0, 1, 2, 3, 4].map(i => (\n              <line\n                key={i}\n                x1=\"40\"\n                y1={40 + (i * 32)}\n                x2=\"360\"\n                y2={40 + (i * 32)}\n                stroke=\"#F0E5C8\"\n                strokeWidth=\"1\"\n              />\n            ))}\n            \n            {/* Data line */}\n            <polyline\n              fill=\"none\"\n              stroke={CHART_COLORS.primary}\n              strokeWidth=\"3\"\n              points={data.map((item, index) => {\n                const x = 40 + (index * (320 / (data.length - 1)));\n                const y = 170 - ((item.value / maxValue) * 130);\n                return `${x},${y}`;\n              }).join(' ')}\n            />\n            \n            {/* Data points */}\n            {data.map((item, index) => {\n              const x = 40 + (index * (320 / (data.length - 1)));\n              const y = 170 - ((item.value / maxValue) * 130);\n              return (\n                <g key={index}>\n                  <circle\n                    cx={x}\n                    cy={y}\n                    r=\"4\"\n                    fill={CHART_COLORS.primary}\n                    stroke=\"#FDF9F3\"\n                    strokeWidth=\"2\"\n                  />\n                  <text\n                    x={x}\n                    y=\"195\"\n                    textAnchor=\"middle\"\n                    className=\"text-xs fill-current text-[#5d5d5d]\"\n                  >\n                    {item.label}\n                  </text>\n                </g>\n              );\n            })}\n          </svg>\n        </div>\n      </div>\n    );\n  }\n  \n  return <div>Chart type not supported</div>;\n}\n\n/**\n * Simple KPI Card without complex dependencies\n */\nexport function SimpleKPICard({\n  title,\n  value,\n  previousValue,\n  unit = 'number',\n  color: _color = CHART_COLORS.primary, // Underscore prefix to mark as intentionally unused\n  className = '',\n}: {\n  title: string;\n  value: number;\n  previousValue?: number;\n  unit?: 'currency' | 'percentage' | 'number';\n  color?: string;\n  className?: string;\n}): React.ReactElement {\n  \n  const formatValue = (val: number) => {\n    if (unit === 'currency') {\n      return new Intl.NumberFormat('de-DE', {\n        style: 'currency',\n        currency: 'EUR',\n      }).format(val);\n    }\n    if (unit === 'percentage') {\n      return `${val.toFixed(1)}%`;\n    }\n    return val.toLocaleString('de-DE');\n  };\n  \n  const trend = previousValue \n    ? value > previousValue ? 'up' : value < previousValue ? 'down' : 'neutral'\n    : 'neutral';\n  \n  const trendPercentage = previousValue && previousValue > 0\n    ? ((value - previousValue) / previousValue) * 100\n    : 0;\n  \n  const trendColor = trend === 'up' ? '#4A7C59' : trend === 'down' ? '#B85450' : '#7d7d7d';\n  const TrendIcon = trend === 'up' ? '\u2197' : trend === 'down' ? '\u2198' : '\u2192';\n\n  return (\n    <div \n      className={`bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-6 hover:shadow-md transition-shadow duration-200 ${className}`}\n    >\n      <h3 className=\"text-base font-medium text-[#3d3d3d] mb-4\">\n        {title}\n      </h3>\n      \n      <div className=\"space-y-3\">\n        <div className=\"text-3xl font-bold text-[#3d3d3d]\">\n          {formatValue(value)}\n        </div>\n        \n        {previousValue && (\n          <div className=\"flex items-center text-sm\">\n            <span style={{ color: trendColor }} className=\"mr-1\">\n              {TrendIcon} {Math.abs(trendPercentage).toFixed(1)}%\n            </span>\n            <span className=\"text-[#5d5d5d]\">\n              vs. vorherige Periode\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],
      names: ["SimpleChart", "SimpleKPICard", "title", "data", "type", "height", "className", "maxValue", "Math", "max", "map", "item", "value", "div", "style", "h3", "index", "backgroundColor", "color", "CHART_COLORS", "dataColors", "length", "minHeight", "label", "toLocaleString", "total", "reduce", "sum", "cumulativePercentage", "width", "min", "slice", "percentage", "previousPercentage", "background", "toFixed", "svg", "viewBox", "i", "line", "x1", "y1", "x2", "y2", "stroke", "strokeWidth", "polyline", "fill", "primary", "points", "x", "y", "join", "g", "circle", "cx", "cy", "r", "text", "textAnchor", "previousValue", "unit", "_color", "formatValue", "val", "Intl", "NumberFormat", "currency", "format", "trend", "trendPercentage", "trendColor", "TrendIcon", "span", "abs"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6eb494c692c5c1a149082ce1781238e3f3e63edb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13l54n6mvg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13l54n6mvg();
cov_13l54n6mvg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_13l54n6mvg().f[0]++;
  cov_13l54n6mvg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_13l54n6mvg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_13l54n6mvg().s[3]++;
_export(exports, {
  get SimpleChart() {
    /* istanbul ignore next */
    cov_13l54n6mvg().f[1]++;
    cov_13l54n6mvg().s[4]++;
    return SimpleChart;
  },
  get SimpleKPICard() {
    /* istanbul ignore next */
    cov_13l54n6mvg().f[2]++;
    cov_13l54n6mvg().s[5]++;
    return SimpleKPICard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_13l54n6mvg().s[6]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_13l54n6mvg().s[7]++, _interop_require_default(require("react")));
const _config =
/* istanbul ignore next */
(cov_13l54n6mvg().s[8]++, require("../../lib/charts/config"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_13l54n6mvg().f[3]++;
  cov_13l54n6mvg().s[9]++;
  return /* istanbul ignore next */(cov_13l54n6mvg().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[0][1]++, {
    default: obj
  });
}
function SimpleChart({
  title,
  data,
  type =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[2][0]++, 'bar'),
  height =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[3][0]++, 300),
  className =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[4][0]++, '')
}) {
  /* istanbul ignore next */
  cov_13l54n6mvg().f[4]++;
  const maxValue =
  /* istanbul ignore next */
  (cov_13l54n6mvg().s[10]++, Math.max(...data.map(item => {
    /* istanbul ignore next */
    cov_13l54n6mvg().f[5]++;
    cov_13l54n6mvg().s[11]++;
    return item.value;
  })));
  /* istanbul ignore next */
  cov_13l54n6mvg().s[12]++;
  if (type === 'bar') {
    /* istanbul ignore next */
    cov_13l54n6mvg().b[5][0]++;
    cov_13l54n6mvg().s[13]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: `w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`,
      style: {
        height: height + 40
      },
      children: [
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[6][0]++, title) &&
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[6][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-[#3d3d3d] mb-4 text-center",
        children: title
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-full flex items-end justify-around space-x-2 px-2",
        children: data.map((item, index) => {
          /* istanbul ignore next */
          cov_13l54n6mvg().f[6]++;
          cov_13l54n6mvg().s[14]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col items-center space-y-2 flex-1",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full rounded-t transition-all duration-700 ease-out",
              style: {
                height: `${item.value / maxValue * (height - 100)}px`,
                backgroundColor:
                /* istanbul ignore next */
                (cov_13l54n6mvg().b[7][0]++, item.color) ||
                /* istanbul ignore next */
                (cov_13l54n6mvg().b[7][1]++, _config.CHART_COLORS.dataColors[index % _config.CHART_COLORS.dataColors.length]),
                minHeight: '10px'
              }
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-xs text-[#5d5d5d] text-center break-words",
              children: item.label
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-xs font-medium text-[#3d3d3d]",
              children: item.value.toLocaleString('de-DE')
            })]
          }, index);
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_13l54n6mvg().b[5][1]++;
  }
  cov_13l54n6mvg().s[15]++;
  if (type === 'pie') {
    /* istanbul ignore next */
    cov_13l54n6mvg().b[8][0]++;
    const total =
    /* istanbul ignore next */
    (cov_13l54n6mvg().s[16]++, data.reduce((sum, item) => {
      /* istanbul ignore next */
      cov_13l54n6mvg().f[7]++;
      cov_13l54n6mvg().s[17]++;
      return sum + item.value;
    }, 0));
    let cumulativePercentage =
    /* istanbul ignore next */
    (cov_13l54n6mvg().s[18]++, 0);
    /* istanbul ignore next */
    cov_13l54n6mvg().s[19]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: `w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`,
      style: {
        height: height + 40
      },
      children: [
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[9][0]++, title) &&
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[9][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-[#3d3d3d] mb-4 text-center",
        children: title
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "flex items-center justify-center h-full",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-8",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "rounded-full border-8 border-[#F5EFE7] relative",
            style: {
              width: Math.min(height - 100, 200),
              height: Math.min(height - 100, 200)
            },
            children: [data.slice(0, 3).map((item, index) => {
              /* istanbul ignore next */
              cov_13l54n6mvg().f[8]++;
              const percentage =
              /* istanbul ignore next */
              (cov_13l54n6mvg().s[20]++, item.value / total * 100);
              const previousPercentage =
              /* istanbul ignore next */
              (cov_13l54n6mvg().s[21]++, cumulativePercentage);
              /* istanbul ignore next */
              cov_13l54n6mvg().s[22]++;
              cumulativePercentage += percentage;
              /* istanbul ignore next */
              cov_13l54n6mvg().s[23]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "absolute inset-0 rounded-full",
                style: {
                  background: `conic-gradient(${
                  /* istanbul ignore next */
                  (cov_13l54n6mvg().b[10][0]++, item.color) ||
                  /* istanbul ignore next */
                  (cov_13l54n6mvg().b[10][1]++, _config.CHART_COLORS.dataColors[index])} ${previousPercentage}% ${cumulativePercentage}%, transparent ${cumulativePercentage}%)`
                }
              }, index);
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "absolute inset-4 bg-[#FDF9F3] rounded-full flex items-center justify-center",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-center",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-xl font-bold text-[#3d3d3d]",
                  children: total.toLocaleString('de-DE')
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-sm text-[#5d5d5d]",
                  children: "Gesamt"
                })]
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-3",
            children: data.map((item, index) => {
              /* istanbul ignore next */
              cov_13l54n6mvg().f[9]++;
              const percentage =
              /* istanbul ignore next */
              (cov_13l54n6mvg().s[24]++, (item.value / total * 100).toFixed(1));
              /* istanbul ignore next */
              cov_13l54n6mvg().s[25]++;
              return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center space-x-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "w-4 h-4 rounded-full",
                  style: {
                    backgroundColor:
                    /* istanbul ignore next */
                    (cov_13l54n6mvg().b[11][0]++, item.color) ||
                    /* istanbul ignore next */
                    (cov_13l54n6mvg().b[11][1]++, _config.CHART_COLORS.dataColors[index % _config.CHART_COLORS.dataColors.length])
                  }
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "text-sm",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium text-[#3d3d3d]",
                    children: item.label
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-[#5d5d5d]",
                    children: [item.value.toLocaleString('de-DE'), " (", percentage, "%)"]
                  })]
                })]
              }, index);
            })
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_13l54n6mvg().b[8][1]++;
  }
  // Line chart as simple connected dots
  cov_13l54n6mvg().s[26]++;
  if (type === 'line') {
    /* istanbul ignore next */
    cov_13l54n6mvg().b[12][0]++;
    cov_13l54n6mvg().s[27]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: `w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`,
      style: {
        height: height + 40
      },
      children: [
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[13][0]++, title) &&
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[13][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold text-[#3d3d3d] mb-4 text-center",
        children: title
      })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-full relative",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("svg", {
          className: "w-full h-full",
          viewBox: "0 0 400 200",
          children: [[0, 1, 2, 3, 4].map(i => {
            /* istanbul ignore next */
            cov_13l54n6mvg().f[10]++;
            cov_13l54n6mvg().s[28]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("line", {
              x1: "40",
              y1: 40 + i * 32,
              x2: "360",
              y2: 40 + i * 32,
              stroke: "#F0E5C8",
              strokeWidth: "1"
            }, i);
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("polyline", {
            fill: "none",
            stroke: _config.CHART_COLORS.primary,
            strokeWidth: "3",
            points: data.map((item, index) => {
              /* istanbul ignore next */
              cov_13l54n6mvg().f[11]++;
              const x =
              /* istanbul ignore next */
              (cov_13l54n6mvg().s[29]++, 40 + index * (320 / (data.length - 1)));
              const y =
              /* istanbul ignore next */
              (cov_13l54n6mvg().s[30]++, 170 - item.value / maxValue * 130);
              /* istanbul ignore next */
              cov_13l54n6mvg().s[31]++;
              return `${x},${y}`;
            }).join(' ')
          }), data.map((item, index) => {
            /* istanbul ignore next */
            cov_13l54n6mvg().f[12]++;
            const x =
            /* istanbul ignore next */
            (cov_13l54n6mvg().s[32]++, 40 + index * (320 / (data.length - 1)));
            const y =
            /* istanbul ignore next */
            (cov_13l54n6mvg().s[33]++, 170 - item.value / maxValue * 130);
            /* istanbul ignore next */
            cov_13l54n6mvg().s[34]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("g", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("circle", {
                cx: x,
                cy: y,
                r: "4",
                fill: _config.CHART_COLORS.primary,
                stroke: "#FDF9F3",
                strokeWidth: "2"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("text", {
                x: x,
                y: "195",
                textAnchor: "middle",
                className: "text-xs fill-current text-[#5d5d5d]",
                children: item.label
              })]
            }, index);
          })]
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_13l54n6mvg().b[12][1]++;
  }
  cov_13l54n6mvg().s[35]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    children: "Chart type not supported"
  });
}
function SimpleKPICard({
  title,
  value,
  previousValue,
  unit =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[14][0]++, 'number'),
  color: _color =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[15][0]++, _config.CHART_COLORS.primary),
  className =
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[16][0]++, '')
}) {
  /* istanbul ignore next */
  cov_13l54n6mvg().f[13]++;
  cov_13l54n6mvg().s[36]++;
  const formatValue = val => {
    /* istanbul ignore next */
    cov_13l54n6mvg().f[14]++;
    cov_13l54n6mvg().s[37]++;
    if (unit === 'currency') {
      /* istanbul ignore next */
      cov_13l54n6mvg().b[17][0]++;
      cov_13l54n6mvg().s[38]++;
      return new Intl.NumberFormat('de-DE', {
        style: 'currency',
        currency: 'EUR'
      }).format(val);
    } else
    /* istanbul ignore next */
    {
      cov_13l54n6mvg().b[17][1]++;
    }
    cov_13l54n6mvg().s[39]++;
    if (unit === 'percentage') {
      /* istanbul ignore next */
      cov_13l54n6mvg().b[18][0]++;
      cov_13l54n6mvg().s[40]++;
      return `${val.toFixed(1)}%`;
    } else
    /* istanbul ignore next */
    {
      cov_13l54n6mvg().b[18][1]++;
    }
    cov_13l54n6mvg().s[41]++;
    return val.toLocaleString('de-DE');
  };
  const trend =
  /* istanbul ignore next */
  (cov_13l54n6mvg().s[42]++, previousValue ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[19][0]++, value > previousValue ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[20][0]++, 'up') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[20][1]++, value < previousValue ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[21][0]++, 'down') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[21][1]++, 'neutral'))) :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[19][1]++, 'neutral'));
  const trendPercentage =
  /* istanbul ignore next */
  (cov_13l54n6mvg().s[43]++,
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[23][0]++, previousValue) &&
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[23][1]++, previousValue > 0) ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[22][0]++, (value - previousValue) / previousValue * 100) :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[22][1]++, 0));
  const trendColor =
  /* istanbul ignore next */
  (cov_13l54n6mvg().s[44]++, trend === 'up' ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[24][0]++, '#4A7C59') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[24][1]++, trend === 'down' ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[25][0]++, '#B85450') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[25][1]++, '#7d7d7d')));
  const TrendIcon =
  /* istanbul ignore next */
  (cov_13l54n6mvg().s[45]++, trend === 'up' ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[26][0]++, '↗') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[26][1]++, trend === 'down' ?
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[27][0]++, '↘') :
  /* istanbul ignore next */
  (cov_13l54n6mvg().b[27][1]++, '→')));
  /* istanbul ignore next */
  cov_13l54n6mvg().s[46]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-6 hover:shadow-md transition-shadow duration-200 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
      className: "text-base font-medium text-[#3d3d3d] mb-4",
      children: title
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-3xl font-bold text-[#3d3d3d]",
        children: formatValue(value)
      }),
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[28][0]++, previousValue) &&
      /* istanbul ignore next */
      (cov_13l54n6mvg().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center text-sm",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          style: {
            color: trendColor
          },
          className: "mr-1",
          children: [TrendIcon, " ", Math.abs(trendPercentage).toFixed(1), "%"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-[#5d5d5d]",
          children: "vs. vorherige Periode"
        })]
      }))]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,