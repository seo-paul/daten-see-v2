{"version":3,"names":["cov_1mq3yi1hex","actualCoverage","s","DashboardCanvas","f","DashboardToolbar","widgets","layout","initialLayout","onLayoutChange","onAddWidget","onEditWidget","onDeleteWidget","isEditMode","b","className","currentLayout","setCurrentLayout","_react","useState","handleLayoutChange","useCallback","newLayout","gridProps","cols","rowHeight","width","isDraggable","isResizable","compactType","preventCollision","_jsxruntime","jsx","_reactgridlayout","default","map","widget","layoutItem","find","l","i","id","WidgetContainer","onEdit","onDelete","jsxs","Fragment","title","onClick","_lucidereact","Edit3","WidgetContent","placeholderContent","line","bar","pie","kpi","text","type","onToggleEditMode","onSave","hasChanges","_Button","Button","variant","size","leftIcon","Eye","Plus","disabled","Save","Settings"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/DashboardCanvas.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback } from 'react';\nimport GridLayout from 'react-grid-layout';\nimport { Plus, Settings, Save, Eye, Edit3 } from 'lucide-react';\n\nimport { Button } from '@/components/ui/Button';\nimport type { Layout, Layouts } from 'react-grid-layout';\n\n// Import grid layout styles\nimport '@/styles/react-grid-layout.css';\n\n/**\n * Widget data structure\n */\nexport interface DashboardWidget {\n  id: string;\n  type: 'line' | 'bar' | 'pie' | 'kpi' | 'text';\n  title: string;\n  config: Record<string, any>;\n  dataSource?: string;\n}\n\n/**\n * Dashboard Canvas Props\n */\ninterface DashboardCanvasProps {\n  widgets: DashboardWidget[];\n  layout: Layout[];\n  onLayoutChange?: (layout: Layout[]) => void;\n  onAddWidget?: () => void;\n  onEditWidget?: (widgetId: string) => void;\n  onDeleteWidget?: (widgetId: string) => void;\n  isEditMode?: boolean;\n  className?: string;\n}\n\n/**\n * Main Dashboard Canvas Component\n * Provides drag-and-drop grid layout for dashboard widgets\n */\nexport function DashboardCanvas({\n  widgets,\n  layout: initialLayout,\n  onLayoutChange,\n  onAddWidget,\n  onEditWidget,\n  onDeleteWidget,\n  isEditMode = false,\n  className = '',\n}: DashboardCanvasProps) {\n  const [currentLayout, setCurrentLayout] = useState<Layout[]>(initialLayout);\n\n  // Handle layout changes\n  const handleLayoutChange = useCallback((newLayout: Layout[]) => {\n    setCurrentLayout(newLayout);\n    onLayoutChange?.(newLayout);\n  }, [onLayoutChange]);\n\n  // Grid configuration\n  const gridProps = {\n    className: `react-grid-layout ${isEditMode ? 'dashboard-edit-mode' : ''} ${className}`,\n    layout: currentLayout,\n    cols: 12,\n    rowHeight: 80,\n    width: 1200, // Will be responsive\n    isDraggable: isEditMode,\n    isResizable: isEditMode,\n    compactType: 'vertical' as const,\n    preventCollision: false,\n    onLayoutChange: handleLayoutChange,\n  };\n\n  return (\n    <div className=\"dashboard-grid-container\">\n      <GridLayout {...gridProps}>\n        {widgets.map((widget) => {\n          const layoutItem = currentLayout.find(l => l.i === widget.id);\n          if (!layoutItem) return null;\n\n          return (\n            <div key={widget.id} className=\"widget-content\">\n              <WidgetContainer\n                widget={widget}\n                isEditMode={isEditMode}\n                onEdit={() => onEditWidget?.(widget.id)}\n                onDelete={() => onDeleteWidget?.(widget.id)}\n              />\n            </div>\n          );\n        })}\n      </GridLayout>\n    </div>\n  );\n}\n\n/**\n * Widget Container Component\n * Wraps widget content with header and toolbar\n */\ninterface WidgetContainerProps {\n  widget: DashboardWidget;\n  isEditMode: boolean;\n  onEdit?: () => void;\n  onDelete?: () => void;\n}\n\nfunction WidgetContainer({ \n  widget, \n  isEditMode, \n  onEdit, \n  onDelete \n}: WidgetContainerProps) {\n  return (\n    <>\n      <div className=\"widget-header\">\n        <h3 className=\"text-sm font-medium text-[#3d3d3d] truncate\">\n          {widget.title}\n        </h3>\n        {isEditMode && (\n          <div className=\"widget-toolbar\">\n            <button\n              onClick={onEdit}\n              title=\"Widget bearbeiten\"\n              aria-label=\"Widget bearbeiten\"\n            >\n              <Edit3 className=\"w-4 h-4\" />\n            </button>\n            <button\n              onClick={onDelete}\n              title=\"Widget l√∂schen\"\n              aria-label=\"Widget l√∂schen\"\n            >\n              <span className=\"text-red-600\">√ó</span>\n            </button>\n          </div>\n        )}\n      </div>\n      <div className=\"widget-body\">\n        <WidgetContent widget={widget} />\n      </div>\n    </>\n  );\n}\n\n/**\n * Widget Content Renderer\n * Renders appropriate content based on widget type\n */\nfunction WidgetContent({ widget }: { widget: DashboardWidget }) {\n  // Placeholder content for now\n  const placeholderContent = {\n    line: 'üìà Line Chart',\n    bar: 'üìä Bar Chart', \n    pie: 'ü•ß Pie Chart',\n    kpi: 'üéØ KPI Card',\n    text: 'üìù Text Widget',\n  };\n\n  return (\n    <div className=\"flex items-center justify-center h-full text-[#5d5d5d]\">\n      <div className=\"text-center\">\n        <div className=\"text-2xl mb-2\">\n          {placeholderContent[widget.type]}\n        </div>\n        <div className=\"text-sm\">\n          Widget ID: {widget.id}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * Dashboard Toolbar Component\n * Controls for edit mode and widget management\n */\ninterface DashboardToolbarProps {\n  isEditMode: boolean;\n  onToggleEditMode: () => void;\n  onAddWidget: () => void;\n  onSave?: () => void;\n  hasChanges?: boolean;\n}\n\nexport function DashboardToolbar({\n  isEditMode,\n  onToggleEditMode,\n  onAddWidget,\n  onSave,\n  hasChanges = false,\n}: DashboardToolbarProps) {\n  return (\n    <div className=\"flex items-center justify-between mb-4 p-4 bg-[#FDF9F3] rounded-lg border border-[#E6D7B8]\">\n      <div className=\"flex items-center gap-3\">\n        <Button\n          variant={isEditMode ? \"secondary\" : \"primary\"}\n          size=\"sm\"\n          onClick={onToggleEditMode}\n          leftIcon={isEditMode ? <Eye className=\"w-4 h-4\" /> : <Edit3 className=\"w-4 h-4\" />}\n        >\n          {isEditMode ? 'Vorschau' : 'Bearbeiten'}\n        </Button>\n        \n        {isEditMode && (\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={onAddWidget}\n            leftIcon={<Plus className=\"w-4 h-4\" />}\n          >\n            Widget hinzuf√ºgen\n          </Button>\n        )}\n      </div>\n\n      <div className=\"flex items-center gap-3\">\n        {hasChanges && (\n          <span className=\"text-sm text-[#C5A572]\">\n            Ungespeicherte √Ñnderungen\n          </span>\n        )}\n        \n        <Button\n          variant=\"primary\"\n          size=\"sm\"\n          onClick={onSave}\n          disabled={!hasChanges}\n          leftIcon={<Save className=\"w-4 h-4\" />}\n        >\n          Speichern\n        </Button>\n        \n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          leftIcon={<Settings className=\"w-4 h-4\" />}\n        >\n          Einstellungen\n        </Button>\n      </div>\n    </div>\n  );\n}"],"mappingsyLgB;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAhJAC,gBAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAC,eAAA;;MAgJAE,iBAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAG,gBAAA;;;;;;;;kCAvLsB;;;wEACf;;;kCAC0B;;;mCAE1B;AAAA;AAAAL,cAAA,GAAAE,CAAA;QAIhB;;;;;;;;;;;;;;;AA+BA,SAASC,gBAAgB;EAC9BG,OAAO;EACPC,MAAA,EAAQC,aAAa;EACrBC,cAAc;EACdC,WAAW;EACXC,YAAY;EACZC,cAAc;EACdC,UAAA;EAAA;EAAA,CAAAb,cAAA,GAAAc,CAAA,UAAa,KAAK;EAClBC,SAAA;EAAA;EAAA,CAAAf,cAAA,GAAAc,CAAA,UAAY,EAAE;AAAA,CACO;EAAA;EAAAd,cAAA,GAAAI,CAAA;EACrB,MAAM,CAACY,aAAA,EAAeC,gBAAA,CAAiB;EAAA;EAAA,CAAAjB,cAAA,GAAAE,CAAA,QAAG,IAAAgB,MAAA,CAAAC,QAAQ,EAAWX,aAAA;EAE7D;EACA,MAAMY,kBAAA;EAAA;EAAA,CAAApB,cAAA,GAAAE,CAAA,QAAqB,IAAAgB,MAAA,CAAAG,WAAW,EAAEC,SAAA;IAAA;IAAAtB,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;IACtCe,gBAAA,CAAiBK,SAAA;IAAA;IAAAtB,cAAA,GAAAE,CAAA;IACjBO,cAAA,GAAiBa,SAAA;EACnB,GAAG,CAACb,cAAA,CAAe;EAEnB;EACA,MAAMc,SAAA;EAAA;EAAA,CAAAvB,cAAA,GAAAE,CAAA,QAAY;IAChBa,SAAA,EAAW,qBAAqBF,UAAA;IAAA;IAAA,CAAAb,cAAA,GAAAc,CAAA,UAAa;IAAA;IAAA,CAAAd,cAAA,GAAAc,CAAA,UAAwB,OAAMC,SAAA,EAAW;IACtFR,MAAA,EAAQS,aAAA;IACRQ,IAAA,EAAM;IACNC,SAAA,EAAW;IACXC,KAAA,EAAO;IACPC,WAAA,EAAad,UAAA;IACbe,WAAA,EAAaf,UAAA;IACbgB,WAAA,EAAa;IACbC,gBAAA,EAAkB;IAClBrB,cAAA,EAAgBW;EAClB;EAAA;EAAApB,cAAA,GAAAE,CAAA;EAEA,oBACE,IAAA6B,WAAA,CAAAC,GAAA,EAAC;IAAIjB,SAAA,EAAU;cACb,iBAAAgB,WAAA,CAAAC,GAAA,EAACC,gBAAA,CAAAC,OAAU;MAAE,GAAGX,SAAS;gBACtBjB,OAAA,CAAQ6B,GAAG,CAAEC,MAAA;QAAA;QAAApC,cAAA,GAAAI,CAAA;QACZ,MAAMiC,UAAA;QAAA;QAAA,CAAArC,cAAA,GAAAE,CAAA,QAAac,aAAA,CAAcsB,IAAI,CAACC,CAAA,IAAK;UAAA;UAAAvC,cAAA,GAAAI,CAAA;UAAAJ,cAAA,GAAAE,CAAA;UAAA,OAAAqC,CAAA,CAAEC,CAAC,KAAKJ,MAAA,CAAOK,EAAE;QAAF,CAAE;QAAA;QAAAzC,cAAA,GAAAE,CAAA;QAC5D,IAAI,CAACmC,UAAA,EAAY;UAAA;UAAArC,cAAA,GAAAc,CAAA;UAAAd,cAAA,GAAAE,CAAA;UAAA,OAAO;QAAA;QAAA;QAAA;UAAAF,cAAA,GAAAc,CAAA;QAAA;QAAAd,cAAA,GAAAE,CAAA;QAExB,oBACE,IAAA6B,WAAA,CAAAC,GAAA,EAAC;UAAoBjB,SAAA,EAAU;oBAC7B,iBAAAgB,WAAA,CAAAC,GAAA,EAACU,eAAA;YACCN,MAAA,EAAQA,MAAA;YACRvB,UAAA,EAAYA,UAAA;YACZ8B,MAAA,EAAQA,CAAA,KAAM;cAAA;cAAA3C,cAAA,GAAAI,CAAA;cAAAJ,cAAA,GAAAE,CAAA;cAAA,OAAAS,YAAA,GAAeyB,MAAA,CAAOK,EAAE;YAAA;YACtCG,QAAA,EAAUA,CAAA,KAAM;cAAA;cAAA5C,cAAA,GAAAI,CAAA;cAAAJ,cAAA,GAAAE,CAAA;cAAA,OAAAU,cAAA,GAAiBwB,MAAA,CAAOK,EAAE;YAAA;;WALpCL,MAAA,CAAOK,EAAE;MASvB;;;AAIR;AAaA,SAASC,gBAAgB;EACvBN,MAAM;EACNvB,UAAU;EACV8B,MAAM;EACNC;AAAQ,CACa;EAAA;EAAA5C,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EACrB,oBACE,IAAA6B,WAAA,CAAAc,IAAA,EAAAd,WAAA,CAAAe,QAAA;4BACE,IAAAf,WAAA,CAAAc,IAAA,EAAC;MAAI9B,SAAA,EAAU;8BACb,IAAAgB,WAAA,CAAAC,GAAA,EAAC;QAAGjB,SAAA,EAAU;kBACXqB,MAAA,CAAOW;;MAET;MAAA,CAAA/C,cAAA,GAAAc,CAAA,UAAAD,UAAA;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,uBACC,IAAAiB,WAAA,CAAAc,IAAA,EAAC;QAAI9B,SAAA,EAAU;gCACb,IAAAgB,WAAA,CAAAC,GAAA,EAAC;UACCgB,OAAA,EAASL,MAAA;UACTI,KAAA,EAAM;UACN,cAAW;oBAEX,iBAAAhB,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAC,KAAK;YAACnC,SAAA,EAAU;;yBAEnB,IAAAgB,WAAA,CAAAC,GAAA,EAAC;UACCgB,OAAA,EAASJ,QAAA;UACTG,KAAA,EAAM;UACN,cAAW;oBAEX,iBAAAhB,WAAA,CAAAC,GAAA,EAAC;YAAKjB,SAAA,EAAU;sBAAe;;;;qBAKvC,IAAAgB,WAAA,CAAAC,GAAA,EAAC;MAAIjB,SAAA,EAAU;gBACb,iBAAAgB,WAAA,CAAAC,GAAA,EAACmB,aAAA;QAAcf,MAAA,EAAQA;;;;AAI/B;AAEA;;;;AAIA,SAASe,cAAc;EAAEf;AAAM,CAA+B;EAAA;EAAApC,cAAA,GAAAI,CAAA;EAC5D;EACA,MAAMgD,kBAAA;EAAA;EAAA,CAAApD,cAAA,GAAAE,CAAA,QAAqB;IACzBmD,IAAA,EAAM;IACNC,GAAA,EAAK;IACLC,GAAA,EAAK;IACLC,GAAA,EAAK;IACLC,IAAA,EAAM;EACR;EAAA;EAAAzD,cAAA,GAAAE,CAAA;EAEA,oBACE,IAAA6B,WAAA,CAAAC,GAAA,EAAC;IAAIjB,SAAA,EAAU;cACb,iBAAAgB,WAAA,CAAAc,IAAA,EAAC;MAAI9B,SAAA,EAAU;8BACb,IAAAgB,WAAA,CAAAC,GAAA,EAAC;QAAIjB,SAAA,EAAU;kBACZqC,kBAAkB,CAAChB,MAAA,CAAOsB,IAAI;uBAEjC,IAAA3B,WAAA,CAAAc,IAAA,EAAC;QAAI9B,SAAA,EAAU;mBAAU,eACXqB,MAAA,CAAOK,EAAE;;;;AAK/B;AAcO,SAASpC,iBAAiB;EAC/BQ,UAAU;EACV8C,gBAAgB;EAChBjD,WAAW;EACXkD,MAAM;EACNC,UAAA;EAAA;EAAA,CAAA7D,cAAA,GAAAc,CAAA,UAAa,KAAK;AAAA,CACI;EAAA;EAAAd,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;EACtB,oBACE,IAAA6B,WAAA,CAAAc,IAAA,EAAC;IAAI9B,SAAA,EAAU;4BACb,IAAAgB,WAAA,CAAAc,IAAA,EAAC;MAAI9B,SAAA,EAAU;8BACb,IAAAgB,WAAA,CAAAC,GAAA,EAAC8B,OAAA,CAAAC,MAAM;QACLC,OAAA,EAASnD,UAAA;QAAA;QAAA,CAAAb,cAAA,GAAAc,CAAA,UAAa;QAAA;QAAA,CAAAd,cAAA,GAAAc,CAAA,UAAc;QACpCmD,IAAA,EAAK;QACLjB,OAAA,EAASW,gBAAA;QACTO,QAAA,EAAUrD,UAAA;QAAA;QAAA,cAAAb,cAAA,GAAAc,CAAA,UAAa,IAAAiB,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAkB,GAAG;UAACpD,SAAA,EAAU;;;kDAAe,IAAAgB,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAC,KAAK;UAACnC,SAAA,EAAU;;kBAErEF,UAAA;QAAA;QAAA,CAAAb,cAAA,GAAAc,CAAA,WAAa;QAAA;QAAA,CAAAd,cAAA,GAAAc,CAAA,WAAa;;MAG5B;MAAA,CAAAd,cAAA,GAAAc,CAAA,WAAAD,UAAA;MAAA;MAAA,CAAAb,cAAA,GAAAc,CAAA,wBACC,IAAAiB,WAAA,CAAAC,GAAA,EAAC8B,OAAA,CAAAC,MAAM;QACLC,OAAA,EAAQ;QACRC,IAAA,EAAK;QACLjB,OAAA,EAAStC,WAAA;QACTwD,QAAA,eAAU,IAAAnC,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAmB,IAAI;UAACrD,SAAA,EAAU;;kBAC3B;;qBAML,IAAAgB,WAAA,CAAAc,IAAA,EAAC;MAAI9B,SAAA,EAAU;;MACZ;MAAA,CAAAf,cAAA,GAAAc,CAAA,WAAA+C,UAAA;MAAA;MAAA,CAAA7D,cAAA,GAAAc,CAAA,wBACC,IAAAiB,WAAA,CAAAC,GAAA,EAAC;QAAKjB,SAAA,EAAU;kBAAyB;wBAK3C,IAAAgB,WAAA,CAAAC,GAAA,EAAC8B,OAAA,CAAAC,MAAM;QACLC,OAAA,EAAQ;QACRC,IAAA,EAAK;QACLjB,OAAA,EAASY,MAAA;QACTS,QAAA,EAAU,CAACR,UAAA;QACXK,QAAA,eAAU,IAAAnC,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAqB,IAAI;UAACvD,SAAA,EAAU;;kBAC3B;uBAID,IAAAgB,WAAA,CAAAC,GAAA,EAAC8B,OAAA,CAAAC,MAAM;QACLC,OAAA,EAAQ;QACRC,IAAA,EAAK;QACLC,QAAA,eAAU,IAAAnC,WAAA,CAAAC,GAAA,EAACiB,YAAA,CAAAsB,QAAQ;UAACxD,SAAA,EAAU;;kBAC/B;;;;AAMT","ignoreList":[]}