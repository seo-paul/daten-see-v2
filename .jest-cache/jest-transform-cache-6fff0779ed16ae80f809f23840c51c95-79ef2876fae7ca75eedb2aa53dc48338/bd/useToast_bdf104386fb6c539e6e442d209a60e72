b35ca78fc8b3ffc32a406f47d9c5cb13
'use client';
"use strict";

/* istanbul ignore next */
function cov_1qupuyi4yz() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/hooks/useToast.tsx";
  var hash = "c698d558b5f484a3eacbd0b2a9de835fae4a6d52";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/hooks/useToast.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 24
        }
      },
      "3": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "4": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 56
        }
      },
      "5": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 25,
          column: 10
        }
      },
      "6": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 61
        }
      },
      "7": {
        start: {
          line: 17,
          column: 22
        },
        end: {
          line: 20,
          column: 9
        }
      },
      "8": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "9": {
        start: {
          line: 21,
          column: 26
        },
        end: {
          line: 24,
          column: 13
        }
      },
      "10": {
        start: {
          line: 26,
          column: 24
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "11": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 65
        }
      },
      "12": {
        start: {
          line: 27,
          column: 26
        },
        end: {
          line: 27,
          column: 63
        }
      },
      "13": {
        start: {
          line: 27,
          column: 47
        },
        end: {
          line: 27,
          column: 62
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "useToast",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 17
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 34,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 46
          },
          end: {
            line: 15,
            column: 47
          }
        },
        loc: {
          start: {
            line: 15,
            column: 57
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 19
          }
        },
        loc: {
          start: {
            line: 21,
            column: 26
          },
          end: {
            line: 24,
            column: 13
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 49
          }
        },
        loc: {
          start: {
            line: 26,
            column: 54
          },
          end: {
            line: 28,
            column: 5
          }
        },
        line: 26
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 18
          },
          end: {
            line: 27,
            column: 19
          }
        },
        loc: {
          start: {
            line: 27,
            column: 26
          },
          end: {
            line: 27,
            column: 63
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 38
          },
          end: {
            line: 27,
            column: 39
          }
        },
        loc: {
          start: {
            line: 27,
            column: 47
          },
          end: {
            line: 27,
            column: 62
          }
        },
        line: 27
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/hooks/useToast.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback } from 'react';\n\nexport interface ToastOptions {\n  message: string;\n  type?: 'success' | 'error' | 'info';\n  duration?: number;\n}\n\nexport function useToast() {\n  const [toasts, setToasts] = useState<(ToastOptions & { id: string })[]>([]);\n\n  const showToast = useCallback((options: ToastOptions) => {\n    const id = Math.random().toString(36).substring(2, 9);\n    const toast = { ...options, id };\n    \n    setToasts(prev => [...prev, toast]);\n  }, []);\n\n  const removeToast = useCallback((id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  }, []);\n\n  return {\n    toasts,\n    showToast,\n    removeToast,\n  };\n}"],
      names: ["useToast", "toasts", "setToasts", "useState", "showToast", "useCallback", "options", "id", "Math", "random", "toString", "substring", "toast", "prev", "removeToast", "filter"],
      mappings: "AAAA;;;;;+BAUgBA;;;eAAAA;;;uBARsB;AAQ/B,SAASA;IACd,MAAM,CAACC,QAAQC,UAAU,GAAGC,IAAAA,eAAQ,EAAoC,EAAE;IAE1E,MAAMC,YAAYC,IAAAA,kBAAW,EAAC,CAACC;QAC7B,MAAMC,KAAKC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,GAAG;QACnD,MAAMC,QAAQ;YAAE,GAAGN,OAAO;YAAEC;QAAG;QAE/BL,UAAUW,CAAAA,OAAQ;mBAAIA;gBAAMD;aAAM;IACpC,GAAG,EAAE;IAEL,MAAME,cAAcT,IAAAA,kBAAW,EAAC,CAACE;QAC/BL,UAAUW,CAAAA,OAAQA,KAAKE,MAAM,CAACH,CAAAA,QAASA,MAAML,EAAE,KAAKA;IACtD,GAAG,EAAE;IAEL,OAAO;QACLN;QACAG;QACAU;IACF;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "c698d558b5f484a3eacbd0b2a9de835fae4a6d52"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qupuyi4yz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qupuyi4yz();
cov_1qupuyi4yz().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1qupuyi4yz().s[1]++;
Object.defineProperty(exports, "useToast", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1qupuyi4yz().f[0]++;
    cov_1qupuyi4yz().s[2]++;
    return useToast;
  }
});
const _react =
/* istanbul ignore next */
(cov_1qupuyi4yz().s[3]++, require("react"));
function useToast() {
  /* istanbul ignore next */
  cov_1qupuyi4yz().f[1]++;
  const [toasts, setToasts] =
  /* istanbul ignore next */
  (cov_1qupuyi4yz().s[4]++, (0, _react.useState)([]));
  const showToast =
  /* istanbul ignore next */
  (cov_1qupuyi4yz().s[5]++, (0, _react.useCallback)(options => {
    /* istanbul ignore next */
    cov_1qupuyi4yz().f[2]++;
    const id =
    /* istanbul ignore next */
    (cov_1qupuyi4yz().s[6]++, Math.random().toString(36).substring(2, 9));
    const toast =
    /* istanbul ignore next */
    (cov_1qupuyi4yz().s[7]++, {
      ...options,
      id
    });
    /* istanbul ignore next */
    cov_1qupuyi4yz().s[8]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_1qupuyi4yz().f[3]++;
      cov_1qupuyi4yz().s[9]++;
      return [...prev, toast];
    });
  }, []));
  const removeToast =
  /* istanbul ignore next */
  (cov_1qupuyi4yz().s[10]++, (0, _react.useCallback)(id => {
    /* istanbul ignore next */
    cov_1qupuyi4yz().f[4]++;
    cov_1qupuyi4yz().s[11]++;
    setToasts(prev => {
      /* istanbul ignore next */
      cov_1qupuyi4yz().f[5]++;
      cov_1qupuyi4yz().s[12]++;
      return prev.filter(toast => {
        /* istanbul ignore next */
        cov_1qupuyi4yz().f[6]++;
        cov_1qupuyi4yz().s[13]++;
        return toast.id !== id;
      });
    });
  }, []));
  /* istanbul ignore next */
  cov_1qupuyi4yz().s[14]++;
  return {
    toasts,
    showToast,
    removeToast
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXF1cHV5aTR5eiIsImFjdHVhbENvdmVyYWdlIiwicyIsInVzZVRvYXN0IiwiZiIsInRvYXN0cyIsInNldFRvYXN0cyIsIl9yZWFjdCIsInVzZVN0YXRlIiwic2hvd1RvYXN0IiwidXNlQ2FsbGJhY2siLCJvcHRpb25zIiwiaWQiLCJNYXRoIiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciLCJ0b2FzdCIsInByZXYiLCJyZW1vdmVUb2FzdCIsImZpbHRlciJdLCJzb3VyY2VzIjpbIi9Vc2Vycy96d2VpZ2VuL1NpdGVzL2RhdGVuLXNlZS12Mi9zcmMvaG9va3MvdXNlVG9hc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFRvYXN0T3B0aW9ucyB7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgdHlwZT86ICdzdWNjZXNzJyB8ICdlcnJvcicgfCAnaW5mbyc7XG4gIGR1cmF0aW9uPzogbnVtYmVyO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlVG9hc3QoKSB7XG4gIGNvbnN0IFt0b2FzdHMsIHNldFRvYXN0c10gPSB1c2VTdGF0ZTwoVG9hc3RPcHRpb25zICYgeyBpZDogc3RyaW5nIH0pW10+KFtdKTtcblxuICBjb25zdCBzaG93VG9hc3QgPSB1c2VDYWxsYmFjaygob3B0aW9uczogVG9hc3RPcHRpb25zKSA9PiB7XG4gICAgY29uc3QgaWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoMiwgOSk7XG4gICAgY29uc3QgdG9hc3QgPSB7IC4uLm9wdGlvbnMsIGlkIH07XG4gICAgXG4gICAgc2V0VG9hc3RzKHByZXYgPT4gWy4uLnByZXYsIHRvYXN0XSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCByZW1vdmVUb2FzdCA9IHVzZUNhbGxiYWNrKChpZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0VG9hc3RzKHByZXYgPT4gcHJldi5maWx0ZXIodG9hc3QgPT4gdG9hc3QuaWQgIT09IGlkKSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4ge1xuICAgIHRvYXN0cyxcbiAgICBzaG93VG9hc3QsXG4gICAgcmVtb3ZlVG9hc3QsXG4gIH07XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFjSTtJQUFBQSxjQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxjQUFBO0FBQUFBLGNBQUEsR0FBQUUsQ0FBQTs7Ozs7OytCQUpZOzs7Ozs7V0FBQUMsUUFBQTs7Ozs7a0NBUnNCO0FBUS9CLFNBQVNBLFNBQUE7RUFBQTtFQUFBSCxjQUFBLEdBQUFJLENBQUE7RUFDZCxNQUFNLENBQUNDLE1BQUEsRUFBUUMsU0FBQSxDQUFVO0VBQUE7RUFBQSxDQUFBTixjQUFBLEdBQUFFLENBQUEsT0FBRyxJQUFBSyxNQUFBLENBQUFDLFFBQVEsRUFBb0MsRUFBRTtFQUUxRSxNQUFNQyxTQUFBO0VBQUE7RUFBQSxDQUFBVCxjQUFBLEdBQUFFLENBQUEsT0FBWSxJQUFBSyxNQUFBLENBQUFHLFdBQVcsRUFBRUMsT0FBQTtJQUFBO0lBQUFYLGNBQUEsR0FBQUksQ0FBQTtJQUM3QixNQUFNUSxFQUFBO0lBQUE7SUFBQSxDQUFBWixjQUFBLEdBQUFFLENBQUEsT0FBS1csSUFBQSxDQUFLQyxNQUFNLEdBQUdDLFFBQVEsQ0FBQyxJQUFJQyxTQUFTLENBQUMsR0FBRztJQUNuRCxNQUFNQyxLQUFBO0lBQUE7SUFBQSxDQUFBakIsY0FBQSxHQUFBRSxDQUFBLE9BQVE7TUFBRSxHQUFHUyxPQUFPO01BQUVDO0lBQUc7SUFBQTtJQUFBWixjQUFBLEdBQUFFLENBQUE7SUFFL0JJLFNBQUEsQ0FBVVksSUFBQSxJQUFRO01BQUE7TUFBQWxCLGNBQUEsR0FBQUksQ0FBQTtNQUFBSixjQUFBLEdBQUFFLENBQUE7TUFBQSxRLEdBQUlnQixJQUFBLEVBQU1ELEtBQUEsQ0FBTTtLQUFBO0VBQ3BDLEdBQUcsRUFBRTtFQUVMLE1BQU1FLFdBQUE7RUFBQTtFQUFBLENBQUFuQixjQUFBLEdBQUFFLENBQUEsUUFBYyxJQUFBSyxNQUFBLENBQUFHLFdBQVcsRUFBRUUsRUFBQTtJQUFBO0lBQUFaLGNBQUEsR0FBQUksQ0FBQTtJQUFBSixjQUFBLEdBQUFFLENBQUE7SUFDL0JJLFNBQUEsQ0FBVVksSUFBQSxJQUFRO01BQUE7TUFBQWxCLGNBQUEsR0FBQUksQ0FBQTtNQUFBSixjQUFBLEdBQUFFLENBQUE7TUFBQSxPQUFBZ0IsSUFBQSxDQUFLRSxNQUFNLENBQUNILEtBQUEsSUFBUztRQUFBO1FBQUFqQixjQUFBLEdBQUFJLENBQUE7UUFBQUosY0FBQSxHQUFBRSxDQUFBO1FBQUEsT0FBQWUsS0FBQSxDQUFNTCxFQUFFLEtBQUtBLEVBQUE7TUFBQTtJQUFBO0VBQ3RELEdBQUcsRUFBRTtFQUFBO0VBQUFaLGNBQUEsR0FBQUUsQ0FBQTtFQUVMLE9BQU87SUFDTEcsTUFBQTtJQUNBSSxTQUFBO0lBQ0FVO0VBQ0Y7QUFDRiIsImlnbm9yZUxpc3QiOltdfQ==