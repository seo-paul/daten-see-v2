d079ae40963f8ab1d9b4369d529dfe50
'use client';
"use strict";

/* istanbul ignore next */
function cov_20152wdwl0() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/shared/components/ErrorBoundary.tsx";
  var hash = "a1c33cdd28afb7de28b85cb21dd5ed75a6aee13b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/shared/components/ErrorBoundary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 30
        },
        end: {
          line: 13,
          column: 82
        }
      },
      "5": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 14,
          column: 72
        }
      },
      "6": {
        start: {
          line: 15,
          column: 22
        },
        end: {
          line: 15,
          column: 67
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "33": {
        start: {
          line: 60,
          column: 44
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "34": {
        start: {
          line: 61,
          column: 12
        },
        end: {
          line: 64,
          column: 15
        }
      },
      "35": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 67,
          column: 15
        }
      },
      "36": {
        start: {
          line: 69,
          column: 44
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "37": {
        start: {
          line: 70,
          column: 12
        },
        end: {
          line: 79,
          column: 13
        }
      },
      "38": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 74,
          column: 19
        }
      },
      "39": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 78,
          column: 17
        }
      },
      "40": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 77,
          column: 223
        }
      },
      "41": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 83,
          column: 10
        }
      },
      "42": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 10
        }
      },
      "43": {
        start: {
          line: 92,
          column: 49
        },
        end: {
          line: 92,
          column: 59
        }
      },
      "44": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 102,
          column: 11
        }
      },
      "45": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 116,
          column: 11
        }
      },
      "46": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 49
        }
      },
      "47": {
        start: {
          line: 106,
          column: 12
        },
        end: {
          line: 106,
          column: 36
        }
      },
      "48": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 111,
          column: 15
        }
      },
      "49": {
        start: {
          line: 112,
          column: 28
        },
        end: {
          line: 112,
          column: 59
        }
      },
      "50": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 115,
          column: 15
        }
      },
      "51": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 211,
          column: 9
        }
      },
      "52": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 123,
          column: 13
        }
      },
      "53": {
        start: {
          line: 122,
          column: 16
        },
        end: {
          line: 122,
          column: 43
        }
      },
      "54": {
        start: {
          line: 124,
          column: 44
        },
        end: {
          line: 124,
          column: 54
        }
      },
      "55": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 210,
          column: 15
        }
      },
      "56": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 212,
          column: 35
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        loc: {
          start: {
            line: 58,
            column: 22
          },
          end: {
            line: 84,
            column: 5
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 59,
            column: 41
          },
          end: {
            line: 59,
            column: 42
          }
        },
        loc: {
          start: {
            line: 59,
            column: 45
          },
          end: {
            line: 68,
            column: 9
          }
        },
        line: 59
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 68,
            column: 36
          },
          end: {
            line: 68,
            column: 37
          }
        },
        loc: {
          start: {
            line: 68,
            column: 40
          },
          end: {
            line: 80,
            column: 9
          }
        },
        line: 68
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 85,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        loc: {
          start: {
            line: 85,
            column: 43
          },
          end: {
            line: 90,
            column: 5
          }
        },
        line: 85
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 91,
            column: 5
          }
        },
        loc: {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 91
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 104,
            column: 26
          },
          end: {
            line: 104,
            column: 27
          }
        },
        loc: {
          start: {
            line: 104,
            column: 35
          },
          end: {
            line: 116,
            column: 9
          }
        },
        line: 104
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 5
          }
        },
        loc: {
          start: {
            line: 118,
            column: 13
          },
          end: {
            line: 213,
            column: 5
          }
        },
        line: 118
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 20
          },
          end: {
            line: 60,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 60,
            column: 28
          },
          end: {
            line: 60,
            column: 39
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 69,
            column: 20
          },
          end: {
            line: 69,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 69,
            column: 28
          },
          end: {
            line: 69,
            column: 39
          }
        }],
        line: 69
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 70,
            column: 12
          },
          end: {
            line: 79,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 76,
            column: 16
          },
          end: {
            line: 78,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 76
      },
      "19": {
        loc: {
          start: {
            line: 92,
            column: 16
          },
          end: {
            line: 92,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 92,
            column: 24
          },
          end: {
            line: 92,
            column: 35
          }
        }],
        line: 92
      },
      "20": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 211,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "21": {
        loc: {
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 121,
            column: 12
          },
          end: {
            line: 123,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 121
      },
      "22": {
        loc: {
          start: {
            line: 124,
            column: 20
          },
          end: {
            line: 124,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 28
          },
          end: {
            line: 124,
            column: 39
          }
        }],
        line: 124
      },
      "23": {
        loc: {
          start: {
            line: 159,
            column: 52
          },
          end: {
            line: 159,
            column: 148
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 159,
            column: 52
          },
          end: {
            line: 159,
            column: 68
          }
        }, {
          start: {
            line: 159,
            column: 72
          },
          end: {
            line: 159,
            column: 148
          }
        }],
        line: 159
      },
      "24": {
        loc: {
          start: {
            line: 160,
            column: 52
          },
          end: {
            line: 160,
            column: 152
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 160,
            column: 52
          },
          end: {
            line: 160,
            column: 70
          }
        }, {
          start: {
            line: 160,
            column: 74
          },
          end: {
            line: 160,
            column: 152
          }
        }],
        line: 160
      },
      "25": {
        loc: {
          start: {
            line: 161,
            column: 52
          },
          end: {
            line: 161,
            column: 126
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 52
          },
          end: {
            line: 161,
            column: 73
          }
        }, {
          start: {
            line: 161,
            column: 77
          },
          end: {
            line: 161,
            column: 126
          }
        }],
        line: 161
      },
      "26": {
        loc: {
          start: {
            line: 164,
            column: 44
          },
          end: {
            line: 180,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 164,
            column: 44
          },
          end: {
            line: 164,
            column: 82
          }
        }, {
          start: {
            line: 164,
            column: 86
          },
          end: {
            line: 164,
            column: 102
          }
        }, {
          start: {
            line: 164,
            column: 120
          },
          end: {
            line: 180,
            column: 46
          }
        }],
        line: 164
      },
      "27": {
        loc: {
          start: {
            line: 191,
            column: 44
          },
          end: {
            line: 195,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 191,
            column: 44
          },
          end: {
            line: 191,
            column: 62
          }
        }, {
          start: {
            line: 191,
            column: 66
          },
          end: {
            line: 191,
            column: 103
          }
        }, {
          start: {
            line: 191,
            column: 121
          },
          end: {
            line: 195,
            column: 46
          }
        }],
        line: 191
      },
      "28": {
        loc: {
          start: {
            line: 196,
            column: 44
          },
          end: {
            line: 202,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 196,
            column: 44
          },
          end: {
            line: 196,
            column: 62
          }
        }, {
          start: {
            line: 196,
            column: 80
          },
          end: {
            line: 202,
            column: 46
          }
        }],
        line: 196
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0, 0],
      "27": [0, 0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/shared/components/ErrorBoundary.tsx"],
      sourcesContent: ["'use client';\n\nimport * as Sentry from '@sentry/nextjs';\nimport React, { Component, ReactNode } from 'react';\n\nimport { appLogger } from '@/lib/monitoring/logger.config';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  level?: 'page' | 'widget' | 'component';\n  context?: Record<string, unknown>;\n}\n\ninterface State {\n  hasError: boolean;\n  error?: Error;\n  errorId?: string;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  override componentDidCatch(error: Error, errorInfo: React.ErrorInfo): void {\n    const { level = 'component', context } = this.props;\n    \n    // Enhanced logging with context\n    appLogger.error(`Error Boundary Triggered (${level})`, {\n      error,\n      component: `error-boundary-${level}`,\n      metadata: {\n        componentStack: errorInfo.componentStack,\n        errorBoundaryLevel: level,\n        ...context,\n      },\n    });\n\n    // Capture to Sentry with enhanced context\n    Sentry.withScope((scope) => {\n      scope.setTag('errorBoundary', level);\n      scope.setLevel('error');\n      scope.setContext('errorInfo', {\n        componentStack: errorInfo.componentStack,\n        level,\n        ...context,\n      });\n      \n      const errorId = Sentry.captureException(error);\n      this.setState({ errorId });\n    });\n  }\n\n  private handleRetry = (): void => {\n    const { level = 'component' } = this.props;\n    appLogger.info('Error Boundary Retry Attempted', {\n      component: `error-boundary-${level}`,\n      action: 'retry',\n    });\n    \n    this.setState({ hasError: false });\n  };\n\n  private handleReportIssue = (): void => {\n    const { level = 'component' } = this.props;\n    if (this.state.errorId) {\n      appLogger.userAction('report-error', undefined, {\n        errorId: this.state.errorId,\n        errorBoundaryLevel: level,\n      });\n      \n      // In production, this could open a support ticket\n      if (typeof window !== 'undefined') {\n        window.open(\n          `mailto:support@daten-see.com?subject=Error Report - ${this.state.errorId}&body=Error ID: ${this.state.errorId}%0A%0APlease describe what you were doing when this error occurred.`,\n          '_blank'\n        );\n      }\n    }\n  };\n\n  override render(): ReactNode {\n    if (this.state.hasError) {\n      // Custom fallback UI or use provided fallback\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      const { level = 'component' } = this.props;\n      \n      return (\n        <div className=\"error-boundary-fallback\" data-level={level} role=\"alert\">\n          <div className=\"p-6 bg-red-50 border border-red-200 rounded-lg\">\n            <div className=\"flex items-start\">\n              <div className=\"flex-shrink-0\">\n                <svg\n                  className=\"w-5 h-5 text-red-400\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-sm font-medium text-red-800\">\n                  Oops! Etwas ist schiefgelaufen\n                </h3>\n                <div className=\"mt-2 text-sm text-red-700\">\n                  <p>\n                    {level === 'page' && 'Diese Seite ist auf einen Fehler gesto\xDFen und kann nicht angezeigt werden.'}\n                    {level === 'widget' && 'Dieses Widget ist auf einen Fehler gesto\xDFen und kann nicht angezeigt werden.'}\n                    {level === 'component' && 'Diese Komponente ist auf einen Fehler gesto\xDFen.'}\n                  </p>\n                  \n                  {process.env.NODE_ENV === 'development' && this.state.error && (\n                    <details className=\"mt-2\">\n                      <summary className=\"cursor-pointer font-medium\">\n                        Development Error Details\n                      </summary>\n                      <pre className=\"mt-2 text-xs bg-red-100 p-2 rounded overflow-auto\">\n                        {this.state.error.message}\n                        {'\\n'}\n                        {this.state.error.stack}\n                      </pre>\n                    </details>\n                  )}\n                </div>\n                \n                <div className=\"mt-4 flex space-x-3\">\n                  <button\n                    onClick={this.handleRetry}\n                    className=\"bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500\"\n                  >\n                    Seite neu laden\n                  </button>\n                  \n                  {this.state.errorId && process.env.NODE_ENV === 'production' && (\n                    <button\n                      onClick={this.handleReportIssue}\n                      className=\"bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n                    >\n                      Report Issue\n                    </button>\n                  )}\n                  \n                  {this.state.errorId && (\n                    <span className=\"text-xs text-gray-500 self-center\">\n                      Error ID: {this.state.errorId.slice(0, 8)}\n                    </span>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}"],
      names: ["ErrorBoundary", "Component", "props", "handleRetry", "level", "appLogger", "info", "component", "action", "setState", "hasError", "handleReportIssue", "state", "errorId", "userAction", "undefined", "errorBoundaryLevel", "window", "open", "getDerivedStateFromError", "error", "componentDidCatch", "errorInfo", "context", "metadata", "componentStack", "Sentry", "withScope", "scope", "setTag", "setLevel", "setContext", "captureException", "render", "fallback", "div", "className", "data-level", "role", "svg", "viewBox", "fill", "path", "fillRule", "d", "clipRule", "h3", "p", "process", "env", "NODE_ENV", "details", "summary", "pre", "message", "stack", "button", "onClick", "span", "slice", "children"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1c33cdd28afb7de28b85cb21dd5ed75a6aee13b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_20152wdwl0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_20152wdwl0();
cov_20152wdwl0().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_20152wdwl0().s[1]++;
Object.defineProperty(exports, "ErrorBoundary", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_20152wdwl0().f[0]++;
    cov_20152wdwl0().s[2]++;
    return ErrorBoundary;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_20152wdwl0().s[3]++, require("react/jsx-runtime"));
const _nextjs =
/* istanbul ignore next */
(/*#__PURE__*/cov_20152wdwl0().s[4]++, _interop_require_wildcard(require("@sentry/nextjs")));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_20152wdwl0().s[5]++, _interop_require_wildcard(require("react")));
const _loggerconfig =
/* istanbul ignore next */
(cov_20152wdwl0().s[6]++, require("../../lib/monitoring/logger.config"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_20152wdwl0().f[1]++;
  cov_20152wdwl0().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_20152wdwl0().b[0][0]++;
    cov_20152wdwl0().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_20152wdwl0().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_20152wdwl0().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_20152wdwl0().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_20152wdwl0().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_20152wdwl0().f[2]++;
    cov_20152wdwl0().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_20152wdwl0().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_20152wdwl0().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_20152wdwl0().f[3]++;
  cov_20152wdwl0().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_20152wdwl0().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_20152wdwl0().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_20152wdwl0().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_20152wdwl0().b[2][0]++;
    cov_20152wdwl0().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_20152wdwl0().b[2][1]++;
  }
  cov_20152wdwl0().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_20152wdwl0().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_20152wdwl0().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_20152wdwl0().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_20152wdwl0().b[4][0]++;
    cov_20152wdwl0().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_20152wdwl0().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_20152wdwl0().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_20152wdwl0().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_20152wdwl0().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_20152wdwl0().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_20152wdwl0().b[6][0]++;
    cov_20152wdwl0().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_20152wdwl0().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_20152wdwl0().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_20152wdwl0().s[21]++,
  /* istanbul ignore next */
  (cov_20152wdwl0().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_20152wdwl0().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_20152wdwl0().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_20152wdwl0().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_20152wdwl0().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_20152wdwl0().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_20152wdwl0().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_20152wdwl0().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_20152wdwl0().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_20152wdwl0().b[11][1]++, null));
      /* istanbul ignore next */
      cov_20152wdwl0().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_20152wdwl0().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_20152wdwl0().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_20152wdwl0().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_20152wdwl0().b[12][0]++;
        cov_20152wdwl0().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_20152wdwl0().b[12][1]++;
        cov_20152wdwl0().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_20152wdwl0().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_20152wdwl0().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_20152wdwl0().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_20152wdwl0().b[14][0]++;
    cov_20152wdwl0().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_20152wdwl0().b[14][1]++;
  }
  cov_20152wdwl0().s[31]++;
  return newObj;
}
class ErrorBoundary extends
/* istanbul ignore next */
(_react.Component) {
  constructor(props) {
    /* istanbul ignore next */
    cov_20152wdwl0().f[4]++;
    cov_20152wdwl0().s[32]++;
    super(props), this.handleRetry = () => {
      /* istanbul ignore next */
      cov_20152wdwl0().f[5]++;
      const {
        level =
        /* istanbul ignore next */
        (cov_20152wdwl0().b[15][0]++, 'component')
      } =
      /* istanbul ignore next */
      (cov_20152wdwl0().s[33]++, this.props);
      /* istanbul ignore next */
      cov_20152wdwl0().s[34]++;
      _loggerconfig.appLogger.info('Error Boundary Retry Attempted', {
        component: `error-boundary-${level}`,
        action: 'retry'
      });
      /* istanbul ignore next */
      cov_20152wdwl0().s[35]++;
      this.setState({
        hasError: false
      });
    }, this.handleReportIssue = () => {
      /* istanbul ignore next */
      cov_20152wdwl0().f[6]++;
      const {
        level =
        /* istanbul ignore next */
        (cov_20152wdwl0().b[16][0]++, 'component')
      } =
      /* istanbul ignore next */
      (cov_20152wdwl0().s[36]++, this.props);
      /* istanbul ignore next */
      cov_20152wdwl0().s[37]++;
      if (this.state.errorId) {
        /* istanbul ignore next */
        cov_20152wdwl0().b[17][0]++;
        cov_20152wdwl0().s[38]++;
        _loggerconfig.appLogger.userAction('report-error', undefined, {
          errorId: this.state.errorId,
          errorBoundaryLevel: level
        });
        // In production, this could open a support ticket
        /* istanbul ignore next */
        cov_20152wdwl0().s[39]++;
        if (typeof window !== 'undefined') {
          /* istanbul ignore next */
          cov_20152wdwl0().b[18][0]++;
          cov_20152wdwl0().s[40]++;
          window.open(`mailto:support@daten-see.com?subject=Error Report - ${this.state.errorId}&body=Error ID: ${this.state.errorId}%0A%0APlease describe what you were doing when this error occurred.`, '_blank');
        } else
        /* istanbul ignore next */
        {
          cov_20152wdwl0().b[18][1]++;
        }
      } else
      /* istanbul ignore next */
      {
        cov_20152wdwl0().b[17][1]++;
      }
    };
    /* istanbul ignore next */
    cov_20152wdwl0().s[41]++;
    this.state = {
      hasError: false
    };
  }
  static getDerivedStateFromError(error) {
    /* istanbul ignore next */
    cov_20152wdwl0().f[7]++;
    cov_20152wdwl0().s[42]++;
    return {
      hasError: true,
      error
    };
  }
  componentDidCatch(error, errorInfo) {
    /* istanbul ignore next */
    cov_20152wdwl0().f[8]++;
    const {
      level =
      /* istanbul ignore next */
      (cov_20152wdwl0().b[19][0]++, 'component'),
      context
    } =
    /* istanbul ignore next */
    (cov_20152wdwl0().s[43]++, this.props);
    // Enhanced logging with context
    /* istanbul ignore next */
    cov_20152wdwl0().s[44]++;
    _loggerconfig.appLogger.error(`Error Boundary Triggered (${level})`, {
      error,
      component: `error-boundary-${level}`,
      metadata: {
        componentStack: errorInfo.componentStack,
        errorBoundaryLevel: level,
        ...context
      }
    });
    // Capture to Sentry with enhanced context
    /* istanbul ignore next */
    cov_20152wdwl0().s[45]++;
    _nextjs.withScope(scope => {
      /* istanbul ignore next */
      cov_20152wdwl0().f[9]++;
      cov_20152wdwl0().s[46]++;
      scope.setTag('errorBoundary', level);
      /* istanbul ignore next */
      cov_20152wdwl0().s[47]++;
      scope.setLevel('error');
      /* istanbul ignore next */
      cov_20152wdwl0().s[48]++;
      scope.setContext('errorInfo', {
        componentStack: errorInfo.componentStack,
        level,
        ...context
      });
      const errorId =
      /* istanbul ignore next */
      (cov_20152wdwl0().s[49]++, _nextjs.captureException(error));
      /* istanbul ignore next */
      cov_20152wdwl0().s[50]++;
      this.setState({
        errorId
      });
    });
  }
  render() {
    /* istanbul ignore next */
    cov_20152wdwl0().f[10]++;
    cov_20152wdwl0().s[51]++;
    if (this.state.hasError) {
      /* istanbul ignore next */
      cov_20152wdwl0().b[20][0]++;
      cov_20152wdwl0().s[52]++;
      // Custom fallback UI or use provided fallback
      if (this.props.fallback) {
        /* istanbul ignore next */
        cov_20152wdwl0().b[21][0]++;
        cov_20152wdwl0().s[53]++;
        return this.props.fallback;
      } else
      /* istanbul ignore next */
      {
        cov_20152wdwl0().b[21][1]++;
      }
      const {
        level =
        /* istanbul ignore next */
        (cov_20152wdwl0().b[22][0]++, 'component')
      } =
      /* istanbul ignore next */
      (cov_20152wdwl0().s[54]++, this.props);
      /* istanbul ignore next */
      cov_20152wdwl0().s[55]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "error-boundary-fallback",
        "data-level": level,
        role: "alert",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "p-6 bg-red-50 border border-red-200 rounded-lg",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-start",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex-shrink-0",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("svg", {
                className: "w-5 h-5 text-red-400",
                viewBox: "0 0 20 20",
                fill: "currentColor",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)("path", {
                  fillRule: "evenodd",
                  d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z",
                  clipRule: "evenodd"
                })
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "ml-3",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                className: "text-sm font-medium text-red-800",
                children: "Oops! Etwas ist schiefgelaufen"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-2 text-sm text-red-700",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                  children: [
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[23][0]++, level === 'page') &&
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[23][1]++, 'Diese Seite ist auf einen Fehler gestoßen und kann nicht angezeigt werden.'),
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[24][0]++, level === 'widget') &&
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[24][1]++, 'Dieses Widget ist auf einen Fehler gestoßen und kann nicht angezeigt werden.'),
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[25][0]++, level === 'component') &&
                  /* istanbul ignore next */
                  (cov_20152wdwl0().b[25][1]++, 'Diese Komponente ist auf einen Fehler gestoßen.')]
                }),
                /* istanbul ignore next */
                (cov_20152wdwl0().b[26][0]++, process.env.NODE_ENV === 'development') &&
                /* istanbul ignore next */
                (cov_20152wdwl0().b[26][1]++, this.state.error) &&
                /* istanbul ignore next */
                (cov_20152wdwl0().b[26][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("details", {
                  className: "mt-2",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("summary", {
                    className: "cursor-pointer font-medium",
                    children: "Development Error Details"
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("pre", {
                    className: "mt-2 text-xs bg-red-100 p-2 rounded overflow-auto",
                    children: [this.state.error.message, '\n', this.state.error.stack]
                  })]
                }))]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "mt-4 flex space-x-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                  onClick: this.handleRetry,
                  className: "bg-red-600 text-white px-3 py-1 rounded text-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500",
                  children: "Seite neu laden"
                }),
                /* istanbul ignore next */
                (cov_20152wdwl0().b[27][0]++, this.state.errorId) &&
                /* istanbul ignore next */
                (cov_20152wdwl0().b[27][1]++, process.env.NODE_ENV === 'production') &&
                /* istanbul ignore next */
                (cov_20152wdwl0().b[27][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
                  onClick: this.handleReportIssue,
                  className: "bg-gray-600 text-white px-3 py-1 rounded text-sm hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500",
                  children: "Report Issue"
                })),
                /* istanbul ignore next */
                (cov_20152wdwl0().b[28][0]++, this.state.errorId) &&
                /* istanbul ignore next */
                (cov_20152wdwl0().b[28][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                  className: "text-xs text-gray-500 self-center",
                  children: ["Error ID: ", this.state.errorId.slice(0, 8)]
                }))]
              })]
            })]
          })
        })
      });
    } else
    /* istanbul ignore next */
    {
      cov_20152wdwl0().b[20][1]++;
    }
    cov_20152wdwl0().s[56]++;
    return this.props.children;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJFcnJvckJvdW5kYXJ5IiwiX3JlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsImNvdl8yMDE1Mndkd2wwIiwiZiIsInMiLCJoYW5kbGVSZXRyeSIsImxldmVsIiwiYiIsIl9sb2dnZXJjb25maWciLCJhcHBMb2dnZXIiLCJpbmZvIiwiY29tcG9uZW50IiwiYWN0aW9uIiwic2V0U3RhdGUiLCJoYXNFcnJvciIsImhhbmRsZVJlcG9ydElzc3VlIiwic3RhdGUiLCJlcnJvcklkIiwidXNlckFjdGlvbiIsInVuZGVmaW5lZCIsImVycm9yQm91bmRhcnlMZXZlbCIsIndpbmRvdyIsIm9wZW4iLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJlcnJvciIsImNvbXBvbmVudERpZENhdGNoIiwiZXJyb3JJbmZvIiwiY29udGV4dCIsIm1ldGFkYXRhIiwiY29tcG9uZW50U3RhY2siLCJfbmV4dGpzIiwid2l0aFNjb3BlIiwic2NvcGUiLCJzZXRUYWciLCJzZXRMZXZlbCIsInNldENvbnRleHQiLCJjYXB0dXJlRXhjZXB0aW9uIiwicmVuZGVyIiwiZmFsbGJhY2siLCJfanN4cnVudGltZSIsImpzeCIsImNsYXNzTmFtZSIsInJvbGUiLCJqc3hzIiwidmlld0JveCIsImZpbGwiLCJmaWxsUnVsZSIsImQiLCJjbGlwUnVsZSIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsIm1lc3NhZ2UiLCJzdGFjayIsIm9uQ2xpY2siLCJzbGljZSIsImNoaWxkcmVuIl0sInNvdXJjZXMiOlsiL1VzZXJzL3p3ZWlnZW4vU2l0ZXMvZGF0ZW4tc2VlLXYyL3NyYy9zaGFyZWQvY29tcG9uZW50cy9FcnJvckJvdW5kYXJ5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCAqIGFzIFNlbnRyeSBmcm9tICdAc2VudHJ5L25leHRqcyc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBSZWFjdE5vZGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IGFwcExvZ2dlciB9IGZyb20gJ0AvbGliL21vbml0b3JpbmcvbG9nZ2VyLmNvbmZpZyc7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG4gIGZhbGxiYWNrPzogUmVhY3ROb2RlO1xuICBsZXZlbD86ICdwYWdlJyB8ICd3aWRnZXQnIHwgJ2NvbXBvbmVudCc7XG4gIGNvbnRleHQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPjtcbn1cblxuaW50ZXJmYWNlIFN0YXRlIHtcbiAgaGFzRXJyb3I6IGJvb2xlYW47XG4gIGVycm9yPzogRXJyb3I7XG4gIGVycm9ySWQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjbGFzcyBFcnJvckJvdW5kYXJ5IGV4dGVuZHMgQ29tcG9uZW50PFByb3BzLCBTdGF0ZT4ge1xuICBjb25zdHJ1Y3Rvcihwcm9wczogUHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHsgaGFzRXJyb3I6IGZhbHNlIH07XG4gIH1cblxuICBzdGF0aWMgZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yKGVycm9yOiBFcnJvcik6IFN0YXRlIHtcbiAgICByZXR1cm4ge1xuICAgICAgaGFzRXJyb3I6IHRydWUsXG4gICAgICBlcnJvcixcbiAgICB9O1xuICB9XG5cbiAgb3ZlcnJpZGUgY29tcG9uZW50RGlkQ2F0Y2goZXJyb3I6IEVycm9yLCBlcnJvckluZm86IFJlYWN0LkVycm9ySW5mbyk6IHZvaWQge1xuICAgIGNvbnN0IHsgbGV2ZWwgPSAnY29tcG9uZW50JywgY29udGV4dCB9ID0gdGhpcy5wcm9wcztcbiAgICBcbiAgICAvLyBFbmhhbmNlZCBsb2dnaW5nIHdpdGggY29udGV4dFxuICAgIGFwcExvZ2dlci5lcnJvcihgRXJyb3IgQm91bmRhcnkgVHJpZ2dlcmVkICgke2xldmVsfSlgLCB7XG4gICAgICBlcnJvcixcbiAgICAgIGNvbXBvbmVudDogYGVycm9yLWJvdW5kYXJ5LSR7bGV2ZWx9YCxcbiAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgIGNvbXBvbmVudFN0YWNrOiBlcnJvckluZm8uY29tcG9uZW50U3RhY2ssXG4gICAgICAgIGVycm9yQm91bmRhcnlMZXZlbDogbGV2ZWwsXG4gICAgICAgIC4uLmNvbnRleHQsXG4gICAgICB9LFxuICAgIH0pO1xuXG4gICAgLy8gQ2FwdHVyZSB0byBTZW50cnkgd2l0aCBlbmhhbmNlZCBjb250ZXh0XG4gICAgU2VudHJ5LndpdGhTY29wZSgoc2NvcGUpID0+IHtcbiAgICAgIHNjb3BlLnNldFRhZygnZXJyb3JCb3VuZGFyeScsIGxldmVsKTtcbiAgICAgIHNjb3BlLnNldExldmVsKCdlcnJvcicpO1xuICAgICAgc2NvcGUuc2V0Q29udGV4dCgnZXJyb3JJbmZvJywge1xuICAgICAgICBjb21wb25lbnRTdGFjazogZXJyb3JJbmZvLmNvbXBvbmVudFN0YWNrLFxuICAgICAgICBsZXZlbCxcbiAgICAgICAgLi4uY29udGV4dCxcbiAgICAgIH0pO1xuICAgICAgXG4gICAgICBjb25zdCBlcnJvcklkID0gU2VudHJ5LmNhcHR1cmVFeGNlcHRpb24oZXJyb3IpO1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7IGVycm9ySWQgfSk7XG4gICAgfSk7XG4gIH1cblxuICBwcml2YXRlIGhhbmRsZVJldHJ5ID0gKCk6IHZvaWQgPT4ge1xuICAgIGNvbnN0IHsgbGV2ZWwgPSAnY29tcG9uZW50JyB9ID0gdGhpcy5wcm9wcztcbiAgICBhcHBMb2dnZXIuaW5mbygnRXJyb3IgQm91bmRhcnkgUmV0cnkgQXR0ZW1wdGVkJywge1xuICAgICAgY29tcG9uZW50OiBgZXJyb3ItYm91bmRhcnktJHtsZXZlbH1gLFxuICAgICAgYWN0aW9uOiAncmV0cnknLFxuICAgIH0pO1xuICAgIFxuICAgIHRoaXMuc2V0U3RhdGUoeyBoYXNFcnJvcjogZmFsc2UgfSk7XG4gIH07XG5cbiAgcHJpdmF0ZSBoYW5kbGVSZXBvcnRJc3N1ZSA9ICgpOiB2b2lkID0+IHtcbiAgICBjb25zdCB7IGxldmVsID0gJ2NvbXBvbmVudCcgfSA9IHRoaXMucHJvcHM7XG4gICAgaWYgKHRoaXMuc3RhdGUuZXJyb3JJZCkge1xuICAgICAgYXBwTG9nZ2VyLnVzZXJBY3Rpb24oJ3JlcG9ydC1lcnJvcicsIHVuZGVmaW5lZCwge1xuICAgICAgICBlcnJvcklkOiB0aGlzLnN0YXRlLmVycm9ySWQsXG4gICAgICAgIGVycm9yQm91bmRhcnlMZXZlbDogbGV2ZWwsXG4gICAgICB9KTtcbiAgICAgIFxuICAgICAgLy8gSW4gcHJvZHVjdGlvbiwgdGhpcyBjb3VsZCBvcGVuIGEgc3VwcG9ydCB0aWNrZXRcbiAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3aW5kb3cub3BlbihcbiAgICAgICAgICBgbWFpbHRvOnN1cHBvcnRAZGF0ZW4tc2VlLmNvbT9zdWJqZWN0PUVycm9yIFJlcG9ydCAtICR7dGhpcy5zdGF0ZS5lcnJvcklkfSZib2R5PUVycm9yIElEOiAke3RoaXMuc3RhdGUuZXJyb3JJZH0lMEElMEFQbGVhc2UgZGVzY3JpYmUgd2hhdCB5b3Ugd2VyZSBkb2luZyB3aGVuIHRoaXMgZXJyb3Igb2NjdXJyZWQuYCxcbiAgICAgICAgICAnX2JsYW5rJ1xuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBvdmVycmlkZSByZW5kZXIoKTogUmVhY3ROb2RlIHtcbiAgICBpZiAodGhpcy5zdGF0ZS5oYXNFcnJvcikge1xuICAgICAgLy8gQ3VzdG9tIGZhbGxiYWNrIFVJIG9yIHVzZSBwcm92aWRlZCBmYWxsYmFja1xuICAgICAgaWYgKHRoaXMucHJvcHMuZmFsbGJhY2spIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucHJvcHMuZmFsbGJhY2s7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHsgbGV2ZWwgPSAnY29tcG9uZW50JyB9ID0gdGhpcy5wcm9wcztcbiAgICAgIFxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJlcnJvci1ib3VuZGFyeS1mYWxsYmFja1wiIGRhdGEtbGV2ZWw9e2xldmVsfSByb2xlPVwiYWxlcnRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInAtNiBiZy1yZWQtNTAgYm9yZGVyIGJvcmRlci1yZWQtMjAwIHJvdW5kZWQtbGdcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1zdGFydFwiPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgtc2hyaW5rLTBcIj5cbiAgICAgICAgICAgICAgICA8c3ZnXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LTUgaC01IHRleHQtcmVkLTQwMFwiXG4gICAgICAgICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDIwIDIwXCJcbiAgICAgICAgICAgICAgICAgIGZpbGw9XCJjdXJyZW50Q29sb3JcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgIGZpbGxSdWxlPVwiZXZlbm9kZFwiXG4gICAgICAgICAgICAgICAgICAgIGQ9XCJNMTAgMThhOCA4IDAgMTAwLTE2IDggOCAwIDAwMCAxNnpNOC43MDcgNy4yOTNhMSAxIDAgMDAtMS40MTQgMS40MTRMOC41ODYgMTBsLTEuMjkzIDEuMjkzYTEgMSAwIDEwMS40MTQgMS40MTRMMTAgMTEuNDE0bDEuMjkzIDEuMjkzYTEgMSAwIDAwMS40MTQtMS40MTRMMTEuNDE0IDEwbDEuMjkzLTEuMjkzYTEgMSAwIDAwLTEuNDE0LTEuNDE0TDEwIDguNTg2IDguNzA3IDcuMjkzelwiXG4gICAgICAgICAgICAgICAgICAgIGNsaXBSdWxlPVwiZXZlbm9kZFwiXG4gICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtbC0zXCI+XG4gICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cInRleHQtc20gZm9udC1tZWRpdW0gdGV4dC1yZWQtODAwXCI+XG4gICAgICAgICAgICAgICAgICBPb3BzISBFdHdhcyBpc3Qgc2NoaWVmZ2VsYXVmZW5cbiAgICAgICAgICAgICAgICA8L2gzPlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtMiB0ZXh0LXNtIHRleHQtcmVkLTcwMFwiPlxuICAgICAgICAgICAgICAgICAgPHA+XG4gICAgICAgICAgICAgICAgICAgIHtsZXZlbCA9PT0gJ3BhZ2UnICYmICdEaWVzZSBTZWl0ZSBpc3QgYXVmIGVpbmVuIEZlaGxlciBnZXN0b8OfZW4gdW5kIGthbm4gbmljaHQgYW5nZXplaWd0IHdlcmRlbi4nfVxuICAgICAgICAgICAgICAgICAgICB7bGV2ZWwgPT09ICd3aWRnZXQnICYmICdEaWVzZXMgV2lkZ2V0IGlzdCBhdWYgZWluZW4gRmVobGVyIGdlc3Rvw59lbiB1bmQga2FubiBuaWNodCBhbmdlemVpZ3Qgd2VyZGVuLid9XG4gICAgICAgICAgICAgICAgICAgIHtsZXZlbCA9PT0gJ2NvbXBvbmVudCcgJiYgJ0RpZXNlIEtvbXBvbmVudGUgaXN0IGF1ZiBlaW5lbiBGZWhsZXIgZ2VzdG/Dn2VuLid9XG4gICAgICAgICAgICAgICAgICA8L3A+XG4gICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgIHtwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJiB0aGlzLnN0YXRlLmVycm9yICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGRldGFpbHMgY2xhc3NOYW1lPVwibXQtMlwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxzdW1tYXJ5IGNsYXNzTmFtZT1cImN1cnNvci1wb2ludGVyIGZvbnQtbWVkaXVtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBEZXZlbG9wbWVudCBFcnJvciBEZXRhaWxzXG4gICAgICAgICAgICAgICAgICAgICAgPC9zdW1tYXJ5PlxuICAgICAgICAgICAgICAgICAgICAgIDxwcmUgY2xhc3NOYW1lPVwibXQtMiB0ZXh0LXhzIGJnLXJlZC0xMDAgcC0yIHJvdW5kZWQgb3ZlcmZsb3ctYXV0b1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuZXJyb3IubWVzc2FnZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHsnXFxuJ31cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0aGlzLnN0YXRlLmVycm9yLnN0YWNrfVxuICAgICAgICAgICAgICAgICAgICAgIDwvcHJlPlxuICAgICAgICAgICAgICAgICAgICA8L2RldGFpbHM+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNCBmbGV4IHNwYWNlLXgtM1wiPlxuICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt0aGlzLmhhbmRsZVJldHJ5fVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJiZy1yZWQtNjAwIHRleHQtd2hpdGUgcHgtMyBweS0xIHJvdW5kZWQgdGV4dC1zbSBob3ZlcjpiZy1yZWQtNzAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1yZWQtNTAwXCJcbiAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgU2VpdGUgbmV1IGxhZGVuXG4gICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAge3RoaXMuc3RhdGUuZXJyb3JJZCAmJiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nICYmIChcbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RoaXMuaGFuZGxlUmVwb3J0SXNzdWV9XG4gICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctZ3JheS02MDAgdGV4dC13aGl0ZSBweC0zIHB5LTEgcm91bmRlZCB0ZXh0LXNtIGhvdmVyOmJnLWdyYXktNzAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1ncmF5LTUwMFwiXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICBSZXBvcnQgSXNzdWVcbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICB7dGhpcy5zdGF0ZS5lcnJvcklkICYmIChcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LWdyYXktNTAwIHNlbGYtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgRXJyb3IgSUQ6IHt0aGlzLnN0YXRlLmVycm9ySWQuc2xpY2UoMCwgOCl9XG4gICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgfVxufSJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFvQmE7Ozs7OztXQUFBQSxhQUFBOzs7Ozs7Ozt5RUFsQlc7Ozt5RUFDb0I7OztrQ0FFbEI7Ozs7Ozs7Ozs7Ozs7Ozs7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