{"version":3,"names":["cov_1obdl5ryzk","actualCoverage","s","CompactKPICard","f","KPICard","KPIGrid","title","value","previousValue","target","unit","b","trend","trendValue","trendData","showProgress","icon","color","_config","CHART_COLORS","primary","size","className","calculatedTrend","calculatedTrendValue","formattedValue","formatChartValue","formattedTrendValue","Math","abs","toFixed","sizeConfig","sm","container","md","lg","config","trendColors","up","success","down","error","neutral","textMuted","trendColor","TrendIcon","_lucidereact","ArrowUpIcon","ArrowDownIcon","MinusIcon","_jsxruntime","jsxs","jsx","style","length","_LineChart","TrendLineChart","data","height","width","min","backgroundColor","_PieChart","DonutProgress","maxValue","change","changeType","toLocaleString","formattedChange","metrics","columns","gridCols","map","metric","index"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/charts/KPICard.tsx"],"sourcesContent":["'use client';\n\nimport { ArrowDownIcon, ArrowUpIcon, MinusIcon } from 'lucide-react';\n\nimport { CHART_COLORS, formatChartValue } from '@/lib/charts/config';\nimport { TrendLineChart } from './LineChart';\nimport { DonutProgress } from './PieChart';\n\nexport interface KPICardProps {\n  title: string;\n  value: number | string;\n  previousValue?: number;\n  target?: number;\n  unit?: 'currency' | 'percentage' | 'number';\n  trend?: 'up' | 'down' | 'neutral';\n  trendValue?: number;\n  trendData?: number[];\n  showProgress?: boolean;\n  icon?: React.ReactNode;\n  color?: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\n/**\n * Professional KPI Card Component\n * Displays key metrics with trend indicators and progress visualization\n */\nexport function KPICard({\n  title,\n  value,\n  previousValue,\n  target,\n  unit = 'number',\n  trend,\n  trendValue,\n  trendData,\n  showProgress = false,\n  icon,\n  color = CHART_COLORS.primary,\n  size = 'md',\n  className = '',\n}: KPICardProps): React.ReactElement {\n  \n  // Calculate trend if not provided\n  const calculatedTrend = trend || (previousValue && typeof value === 'number' \n    ? value > previousValue ? 'up' : value < previousValue ? 'down' : 'neutral'\n    : 'neutral'\n  );\n  \n  // Calculate trend percentage if not provided\n  const calculatedTrendValue = trendValue || (\n    previousValue && typeof value === 'number' && previousValue > 0\n      ? ((value - previousValue) / previousValue) * 100\n      : 0\n  );\n  \n  // Format the main value\n  const formattedValue = typeof value === 'string' \n    ? value \n    : formatChartValue(value, unit);\n  \n  // Format trend value\n  const formattedTrendValue = Math.abs(calculatedTrendValue).toFixed(1);\n  \n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      container: 'p-4',\n      title: 'text-sm',\n      value: 'text-2xl',\n      trend: 'text-xs',\n      icon: 'w-5 h-5',\n    },\n    md: {\n      container: 'p-6',\n      title: 'text-base',\n      value: 'text-3xl',\n      trend: 'text-sm',\n      icon: 'w-6 h-6',\n    },\n    lg: {\n      container: 'p-8',\n      title: 'text-lg',\n      value: 'text-4xl',\n      trend: 'text-base',\n      icon: 'w-8 h-8',\n    },\n  };\n  \n  const config = sizeConfig[size];\n  \n  // Trend colors\n  const trendColors = {\n    up: CHART_COLORS.success,\n    down: CHART_COLORS.error,\n    neutral: CHART_COLORS.textMuted,\n  };\n  \n  const trendColor = trendColors[calculatedTrend];\n  \n  // Trend icons\n  const TrendIcon = calculatedTrend === 'up' \n    ? ArrowUpIcon \n    : calculatedTrend === 'down' \n    ? ArrowDownIcon \n    : MinusIcon;\n\n  return (\n    <div \n      className={`\n        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] \n        hover:shadow-md transition-all duration-200\n        ${config.container} ${className}\n      `}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className={`font-medium text-[#3d3d3d] ${config.title}`}>\n          {title}\n        </h3>\n        {icon && (\n          <div \n            className={`${config.icon} flex-shrink-0`}\n            style={{ color }}\n          >\n            {icon}\n          </div>\n        )}\n      </div>\n      \n      {/* Main Content */}\n      <div className=\"space-y-4\">\n        {/* Value and Trend */}\n        <div className=\"flex items-end justify-between\">\n          <div className=\"flex-1\">\n            <div className={`font-bold text-[#3d3d3d] ${config.value}`}>\n              {formattedValue}\n            </div>\n            \n            {/* Trend Indicator */}\n            {(calculatedTrendValue !== 0 || trend) && (\n              <div className={`flex items-center mt-2 ${config.trend}`}>\n                <TrendIcon \n                  className=\"w-3 h-3 mr-1\" \n                  style={{ color: trendColor }}\n                />\n                <span style={{ color: trendColor }}>\n                  {formattedTrendValue}%\n                </span>\n                <span className=\"text-[#5d5d5d] ml-1\">\n                  vs. vorherige Periode\n                </span>\n              </div>\n            )}\n          </div>\n          \n          {/* Trend Chart */}\n          {trendData && trendData.length > 0 && (\n            <div className=\"w-20 ml-4\">\n              <TrendLineChart \n                data={trendData}\n                color={trendColor}\n                height={40}\n              />\n            </div>\n          )}\n        </div>\n        \n        {/* Progress towards target */}\n        {showProgress && target && typeof value === 'number' && (\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center text-sm\">\n              <span className=\"text-[#5d5d5d]\">Ziel</span>\n              <span className=\"text-[#3d3d3d] font-medium\">\n                {formatChartValue(target, unit)}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"flex-1\">\n                <div className=\"w-full bg-[#F5EFE7] rounded-full h-2\">\n                  <div\n                    className=\"h-2 rounded-full transition-all duration-500\"\n                    style={{\n                      width: `${Math.min((value / target) * 100, 100)}%`,\n                      backgroundColor: color,\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"w-12\">\n                <DonutProgress\n                  value={value}\n                  maxValue={target}\n                  color={color}\n                  size={40}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Compact KPI Card for dashboard grids\n */\nexport function CompactKPICard({\n  title,\n  value,\n  change,\n  changeType = 'percentage',\n  trend = 'neutral',\n  color = CHART_COLORS.primary,\n  className = '',\n}: {\n  title: string;\n  value: string | number;\n  change?: number;\n  changeType?: 'percentage' | 'absolute';\n  trend?: 'up' | 'down' | 'neutral';\n  color?: string;\n  className?: string;\n}): React.ReactElement {\n  \n  const TrendIcon = trend === 'up' \n    ? ArrowUpIcon \n    : trend === 'down' \n    ? ArrowDownIcon \n    : MinusIcon;\n  \n  const trendColors = {\n    up: CHART_COLORS.success,\n    down: CHART_COLORS.error,\n    neutral: CHART_COLORS.textMuted,\n  };\n  \n  const formattedValue = typeof value === 'string' \n    ? value \n    : value.toLocaleString('de-DE');\n  \n  const formattedChange = change \n    ? changeType === 'percentage' \n      ? `${change > 0 ? '+' : ''}${change.toFixed(1)}%`\n      : `${change > 0 ? '+' : ''}${change.toLocaleString('de-DE')}`\n    : null;\n\n  return (\n    <div \n      className={`\n        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4\n        hover:shadow-sm transition-shadow duration-200\n        ${className}\n      `}\n    >\n      <div className=\"space-y-3\">\n        <h4 className=\"text-sm font-medium text-[#5d5d5d] truncate\">\n          {title}\n        </h4>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-2xl font-bold text-[#3d3d3d]\">\n            {formattedValue}\n          </div>\n          \n          {formattedChange && (\n            <div \n              className=\"flex items-center text-xs font-medium\"\n              style={{ color: trendColors[trend] }}\n            >\n              <TrendIcon className=\"w-3 h-3 mr-1\" />\n              {formattedChange}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * KPI Grid Layout for multiple metrics\n */\nexport function KPIGrid({\n  metrics,\n  columns = 4,\n  className = '',\n}: {\n  metrics: Array<{\n    title: string;\n    value: number | string;\n    previousValue?: number;\n    unit?: 'currency' | 'percentage' | 'number';\n    trend?: 'up' | 'down' | 'neutral';\n    color?: string;\n    icon?: React.ReactNode;\n  }>;\n  columns?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const gridCols = {\n    1: 'grid-cols-1',\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',\n    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6',\n  };\n\n  return (\n    <div className={`grid gap-4 ${gridCols[columns as keyof typeof gridCols] || gridCols[4]} ${className}`}>\n      {metrics.map((metric, index) => (\n        <KPICard\n          key={index}\n          title={metric.title}\n          value={metric.value}\n          previousValue={metric.previousValue}\n          unit={metric.unit}\n          trend={metric.trend}\n          color={metric.color}\n          icon={metric.icon}\n          size=\"sm\"\n        />\n      ))}\n    </div>\n  );\n}"],"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","ignoreList":[]}