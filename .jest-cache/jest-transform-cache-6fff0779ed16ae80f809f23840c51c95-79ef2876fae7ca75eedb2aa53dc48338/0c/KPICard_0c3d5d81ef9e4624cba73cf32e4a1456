c5b81e4160271225f70fa2cf74c4d0d7
'use client';
"use strict";

/* istanbul ignore next */
function cov_1obdl5ryzk() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/components/charts/KPICard.tsx";
  var hash = "7cf3eeb7a77c5a8fdb602c407688353bbe50053d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/components/charts/KPICard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 30
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 23
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 21
        },
        end: {
          line: 24,
          column: 44
        }
      },
      "9": {
        start: {
          line: 25,
          column: 16
        },
        end: {
          line: 25,
          column: 50
        }
      },
      "10": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 41
        }
      },
      "11": {
        start: {
          line: 27,
          column: 18
        },
        end: {
          line: 27,
          column: 39
        }
      },
      "12": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 169
        }
      },
      "13": {
        start: {
          line: 32,
          column: 33
        },
        end: {
          line: 32,
          column: 164
        }
      },
      "14": {
        start: {
          line: 34,
          column: 27
        },
        end: {
          line: 34,
          column: 105
        }
      },
      "15": {
        start: {
          line: 36,
          column: 32
        },
        end: {
          line: 36,
          column: 73
        }
      },
      "16": {
        start: {
          line: 38,
          column: 23
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "17": {
        start: {
          line: 61,
          column: 19
        },
        end: {
          line: 61,
          column: 35
        }
      },
      "18": {
        start: {
          line: 63,
          column: 24
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "19": {
        start: {
          line: 68,
          column: 23
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "20": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 70,
          column: 156
        }
      },
      "21": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 191,
          column: 7
        }
      },
      "22": {
        start: {
          line: 194,
          column: 22
        },
        end: {
          line: 194,
          column: 136
        }
      },
      "23": {
        start: {
          line: 195,
          column: 24
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "24": {
        start: {
          line: 200,
          column: 27
        },
        end: {
          line: 200,
          column: 92
        }
      },
      "25": {
        start: {
          line: 201,
          column: 28
        },
        end: {
          line: 201,
          column: 183
        }
      },
      "26": {
        start: {
          line: 202,
          column: 4
        },
        end: {
          line: 238,
          column: 7
        }
      },
      "27": {
        start: {
          line: 241,
          column: 21
        },
        end: {
          line: 248,
          column: 5
        }
      },
      "28": {
        start: {
          line: 249,
          column: 4
        },
        end: {
          line: 261,
          column: 7
        }
      },
      "29": {
        start: {
          line: 251,
          column: 61
        },
        end: {
          line: 260,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 26
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 19
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "KPICard",
        decl: {
          start: {
            line: 28,
            column: 9
          },
          end: {
            line: 28,
            column: 16
          }
        },
        loc: {
          start: {
            line: 28,
            column: 200
          },
          end: {
            line: 192,
            column: 1
          }
        },
        line: 28
      },
      "5": {
        name: "CompactKPICard",
        decl: {
          start: {
            line: 193,
            column: 9
          },
          end: {
            line: 193,
            column: 23
          }
        },
        loc: {
          start: {
            line: 193,
            column: 150
          },
          end: {
            line: 239,
            column: 1
          }
        },
        line: 193
      },
      "6": {
        name: "KPIGrid",
        decl: {
          start: {
            line: 240,
            column: 9
          },
          end: {
            line: 240,
            column: 16
          }
        },
        loc: {
          start: {
            line: 240,
            column: 59
          },
          end: {
            line: 262,
            column: 1
          }
        },
        line: 240
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 251,
            column: 30
          },
          end: {
            line: 251,
            column: 31
          }
        },
        loc: {
          start: {
            line: 251,
            column: 61
          },
          end: {
            line: 260,
            column: 21
          }
        },
        line: 251
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 56
          },
          end: {
            line: 28,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 63
          },
          end: {
            line: 28,
            column: 71
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 103
          },
          end: {
            line: 28,
            column: 123
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 118
          },
          end: {
            line: 28,
            column: 123
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 28,
            column: 131
          },
          end: {
            line: 28,
            column: 167
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 139
          },
          end: {
            line: 28,
            column: 167
          }
        }],
        line: 28
      },
      "3": {
        loc: {
          start: {
            line: 28,
            column: 169
          },
          end: {
            line: 28,
            column: 180
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 176
          },
          end: {
            line: 28,
            column: 180
          }
        }],
        line: 28
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 182
          },
          end: {
            line: 28,
            column: 196
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 28,
            column: 194
          },
          end: {
            line: 28,
            column: 196
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 169
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 28
          },
          end: {
            line: 30,
            column: 33
          }
        }, {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 168
          }
        }],
        line: 30
      },
      "6": {
        loc: {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 168
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 83
          },
          end: {
            line: 30,
            column: 156
          }
        }, {
          start: {
            line: 30,
            column: 159
          },
          end: {
            line: 30,
            column: 168
          }
        }],
        line: 30
      },
      "7": {
        loc: {
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 38
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: 30,
            column: 55
          },
          end: {
            line: 30,
            column: 80
          }
        }],
        line: 30
      },
      "8": {
        loc: {
          start: {
            line: 30,
            column: 83
          },
          end: {
            line: 30,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 107
          },
          end: {
            line: 30,
            column: 111
          }
        }, {
          start: {
            line: 30,
            column: 114
          },
          end: {
            line: 30,
            column: 156
          }
        }],
        line: 30
      },
      "9": {
        loc: {
          start: {
            line: 30,
            column: 114
          },
          end: {
            line: 30,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 138
          },
          end: {
            line: 30,
            column: 144
          }
        }, {
          start: {
            line: 30,
            column: 147
          },
          end: {
            line: 30,
            column: 156
          }
        }],
        line: 30
      },
      "10": {
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 164
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 43
          }
        }, {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 163
          }
        }],
        line: 32
      },
      "11": {
        loc: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 163
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 114
          },
          end: {
            line: 32,
            column: 159
          }
        }, {
          start: {
            line: 32,
            column: 162
          },
          end: {
            line: 32,
            column: 163
          }
        }],
        line: 32
      },
      "12": {
        loc: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 61
          }
        }, {
          start: {
            line: 32,
            column: 65
          },
          end: {
            line: 32,
            column: 90
          }
        }, {
          start: {
            line: 32,
            column: 94
          },
          end: {
            line: 32,
            column: 111
          }
        }],
        line: 32
      },
      "13": {
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 34,
            column: 105
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 55
          },
          end: {
            line: 34,
            column: 60
          }
        }, {
          start: {
            line: 34,
            column: 63
          },
          end: {
            line: 34,
            column: 105
          }
        }],
        line: 34
      },
      "14": {
        loc: {
          start: {
            line: 70,
            column: 22
          },
          end: {
            line: 70,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 49
          },
          end: {
            line: 70,
            column: 73
          }
        }, {
          start: {
            line: 70,
            column: 76
          },
          end: {
            line: 70,
            column: 156
          }
        }],
        line: 70
      },
      "15": {
        loc: {
          start: {
            line: 70,
            column: 76
          },
          end: {
            line: 70,
            column: 156
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 105
          },
          end: {
            line: 70,
            column: 131
          }
        }, {
          start: {
            line: 70,
            column: 134
          },
          end: {
            line: 70,
            column: 156
          }
        }],
        line: 70
      },
      "16": {
        loc: {
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 91,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 20
          },
          end: {
            line: 85,
            column: 24
          }
        }, {
          start: {
            line: 85,
            column: 42
          },
          end: {
            line: 91,
            column: 22
          }
        }],
        line: 85
      },
      "17": {
        loc: {
          start: {
            line: 107,
            column: 36
          },
          end: {
            line: 130,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 63
          }
        }, {
          start: {
            line: 107,
            column: 67
          },
          end: {
            line: 107,
            column: 72
          }
        }, {
          start: {
            line: 107,
            column: 91
          },
          end: {
            line: 130,
            column: 38
          }
        }],
        line: 107
      },
      "18": {
        loc: {
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 140,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 28
          },
          end: {
            line: 133,
            column: 37
          }
        }, {
          start: {
            line: 133,
            column: 41
          },
          end: {
            line: 133,
            column: 61
          }
        }, {
          start: {
            line: 133,
            column: 79
          },
          end: {
            line: 140,
            column: 30
          }
        }],
        line: 133
      },
      "19": {
        loc: {
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 187,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 143,
            column: 20
          },
          end: {
            line: 143,
            column: 32
          }
        }, {
          start: {
            line: 143,
            column: 36
          },
          end: {
            line: 143,
            column: 42
          }
        }, {
          start: {
            line: 143,
            column: 46
          },
          end: {
            line: 143,
            column: 71
          }
        }, {
          start: {
            line: 143,
            column: 89
          },
          end: {
            line: 187,
            column: 22
          }
        }],
        line: 143
      },
      "20": {
        loc: {
          start: {
            line: 193,
            column: 48
          },
          end: {
            line: 193,
            column: 73
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 61
          },
          end: {
            line: 193,
            column: 73
          }
        }],
        line: 193
      },
      "21": {
        loc: {
          start: {
            line: 193,
            column: 75
          },
          end: {
            line: 193,
            column: 92
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 83
          },
          end: {
            line: 193,
            column: 92
          }
        }],
        line: 193
      },
      "22": {
        loc: {
          start: {
            line: 193,
            column: 94
          },
          end: {
            line: 193,
            column: 130
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 102
          },
          end: {
            line: 193,
            column: 130
          }
        }],
        line: 193
      },
      "23": {
        loc: {
          start: {
            line: 193,
            column: 132
          },
          end: {
            line: 193,
            column: 146
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 193,
            column: 144
          },
          end: {
            line: 193,
            column: 146
          }
        }],
        line: 193
      },
      "24": {
        loc: {
          start: {
            line: 194,
            column: 22
          },
          end: {
            line: 194,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 39
          },
          end: {
            line: 194,
            column: 63
          }
        }, {
          start: {
            line: 194,
            column: 66
          },
          end: {
            line: 194,
            column: 136
          }
        }],
        line: 194
      },
      "25": {
        loc: {
          start: {
            line: 194,
            column: 66
          },
          end: {
            line: 194,
            column: 136
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 85
          },
          end: {
            line: 194,
            column: 111
          }
        }, {
          start: {
            line: 194,
            column: 114
          },
          end: {
            line: 194,
            column: 136
          }
        }],
        line: 194
      },
      "26": {
        loc: {
          start: {
            line: 200,
            column: 27
          },
          end: {
            line: 200,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 200,
            column: 55
          },
          end: {
            line: 200,
            column: 60
          }
        }, {
          start: {
            line: 200,
            column: 63
          },
          end: {
            line: 200,
            column: 92
          }
        }],
        line: 200
      },
      "27": {
        loc: {
          start: {
            line: 201,
            column: 28
          },
          end: {
            line: 201,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 201,
            column: 176
          }
        }, {
          start: {
            line: 201,
            column: 179
          },
          end: {
            line: 201,
            column: 183
          }
        }],
        line: 201
      },
      "28": {
        loc: {
          start: {
            line: 201,
            column: 37
          },
          end: {
            line: 201,
            column: 176
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 67
          },
          end: {
            line: 201,
            column: 114
          }
        }, {
          start: {
            line: 201,
            column: 117
          },
          end: {
            line: 201,
            column: 176
          }
        }],
        line: 201
      },
      "29": {
        loc: {
          start: {
            line: 201,
            column: 70
          },
          end: {
            line: 201,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 83
          },
          end: {
            line: 201,
            column: 86
          }
        }, {
          start: {
            line: 201,
            column: 89
          },
          end: {
            line: 201,
            column: 91
          }
        }],
        line: 201
      },
      "30": {
        loc: {
          start: {
            line: 201,
            column: 120
          },
          end: {
            line: 201,
            column: 141
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 201,
            column: 133
          },
          end: {
            line: 201,
            column: 136
          }
        }, {
          start: {
            line: 201,
            column: 139
          },
          end: {
            line: 201,
            column: 141
          }
        }],
        line: 201
      },
      "31": {
        loc: {
          start: {
            line: 222,
            column: 24
          },
          end: {
            line: 233,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 222,
            column: 24
          },
          end: {
            line: 222,
            column: 39
          }
        }, {
          start: {
            line: 222,
            column: 57
          },
          end: {
            line: 233,
            column: 26
          }
        }],
        line: 222
      },
      "32": {
        loc: {
          start: {
            line: 240,
            column: 28
          },
          end: {
            line: 240,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 38
          },
          end: {
            line: 240,
            column: 39
          }
        }],
        line: 240
      },
      "33": {
        loc: {
          start: {
            line: 240,
            column: 41
          },
          end: {
            line: 240,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 240,
            column: 53
          },
          end: {
            line: 240,
            column: 55
          }
        }],
        line: 240
      },
      "34": {
        loc: {
          start: {
            line: 250,
            column: 33
          },
          end: {
            line: 250,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 250,
            column: 33
          },
          end: {
            line: 250,
            column: 50
          }
        }, {
          start: {
            line: 250,
            column: 54
          },
          end: {
            line: 250,
            column: 65
          }
        }],
        line: 250
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0, 0],
      "18": [0, 0, 0],
      "19": [0, 0, 0, 0],
      "20": [0],
      "21": [0],
      "22": [0],
      "23": [0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/components/charts/KPICard.tsx"],
      sourcesContent: ["'use client';\n\nimport { ArrowDownIcon, ArrowUpIcon, MinusIcon } from 'lucide-react';\n\nimport { CHART_COLORS, formatChartValue } from '@/lib/charts/config';\nimport { TrendLineChart } from './LineChart';\nimport { DonutProgress } from './PieChart';\n\nexport interface KPICardProps {\n  title: string;\n  value: number | string;\n  previousValue?: number;\n  target?: number;\n  unit?: 'currency' | 'percentage' | 'number';\n  trend?: 'up' | 'down' | 'neutral';\n  trendValue?: number;\n  trendData?: number[];\n  showProgress?: boolean;\n  icon?: React.ReactNode;\n  color?: string;\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\n/**\n * Professional KPI Card Component\n * Displays key metrics with trend indicators and progress visualization\n */\nexport function KPICard({\n  title,\n  value,\n  previousValue,\n  target,\n  unit = 'number',\n  trend,\n  trendValue,\n  trendData,\n  showProgress = false,\n  icon,\n  color = CHART_COLORS.primary,\n  size = 'md',\n  className = '',\n}: KPICardProps): React.ReactElement {\n  \n  // Calculate trend if not provided\n  const calculatedTrend = trend || (previousValue && typeof value === 'number' \n    ? value > previousValue ? 'up' : value < previousValue ? 'down' : 'neutral'\n    : 'neutral'\n  );\n  \n  // Calculate trend percentage if not provided\n  const calculatedTrendValue = trendValue || (\n    previousValue && typeof value === 'number' && previousValue > 0\n      ? ((value - previousValue) / previousValue) * 100\n      : 0\n  );\n  \n  // Format the main value\n  const formattedValue = typeof value === 'string' \n    ? value \n    : formatChartValue(value, unit);\n  \n  // Format trend value\n  const formattedTrendValue = Math.abs(calculatedTrendValue).toFixed(1);\n  \n  // Size configurations\n  const sizeConfig = {\n    sm: {\n      container: 'p-4',\n      title: 'text-sm',\n      value: 'text-2xl',\n      trend: 'text-xs',\n      icon: 'w-5 h-5',\n    },\n    md: {\n      container: 'p-6',\n      title: 'text-base',\n      value: 'text-3xl',\n      trend: 'text-sm',\n      icon: 'w-6 h-6',\n    },\n    lg: {\n      container: 'p-8',\n      title: 'text-lg',\n      value: 'text-4xl',\n      trend: 'text-base',\n      icon: 'w-8 h-8',\n    },\n  };\n  \n  const config = sizeConfig[size];\n  \n  // Trend colors\n  const trendColors = {\n    up: CHART_COLORS.success,\n    down: CHART_COLORS.error,\n    neutral: CHART_COLORS.textMuted,\n  };\n  \n  const trendColor = trendColors[calculatedTrend];\n  \n  // Trend icons\n  const TrendIcon = calculatedTrend === 'up' \n    ? ArrowUpIcon \n    : calculatedTrend === 'down' \n    ? ArrowDownIcon \n    : MinusIcon;\n\n  return (\n    <div \n      className={`\n        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] \n        hover:shadow-md transition-all duration-200\n        ${config.container} ${className}\n      `}\n    >\n      {/* Header */}\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className={`font-medium text-[#3d3d3d] ${config.title}`}>\n          {title}\n        </h3>\n        {icon && (\n          <div \n            className={`${config.icon} flex-shrink-0`}\n            style={{ color }}\n          >\n            {icon}\n          </div>\n        )}\n      </div>\n      \n      {/* Main Content */}\n      <div className=\"space-y-4\">\n        {/* Value and Trend */}\n        <div className=\"flex items-end justify-between\">\n          <div className=\"flex-1\">\n            <div className={`font-bold text-[#3d3d3d] ${config.value}`}>\n              {formattedValue}\n            </div>\n            \n            {/* Trend Indicator */}\n            {(calculatedTrendValue !== 0 || trend) && (\n              <div className={`flex items-center mt-2 ${config.trend}`}>\n                <TrendIcon \n                  className=\"w-3 h-3 mr-1\" \n                  style={{ color: trendColor }}\n                />\n                <span style={{ color: trendColor }}>\n                  {formattedTrendValue}%\n                </span>\n                <span className=\"text-[#5d5d5d] ml-1\">\n                  vs. vorherige Periode\n                </span>\n              </div>\n            )}\n          </div>\n          \n          {/* Trend Chart */}\n          {trendData && trendData.length > 0 && (\n            <div className=\"w-20 ml-4\">\n              <TrendLineChart \n                data={trendData}\n                color={trendColor}\n                height={40}\n              />\n            </div>\n          )}\n        </div>\n        \n        {/* Progress towards target */}\n        {showProgress && target && typeof value === 'number' && (\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between items-center text-sm\">\n              <span className=\"text-[#5d5d5d]\">Ziel</span>\n              <span className=\"text-[#3d3d3d] font-medium\">\n                {formatChartValue(target, unit)}\n              </span>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"flex-1\">\n                <div className=\"w-full bg-[#F5EFE7] rounded-full h-2\">\n                  <div\n                    className=\"h-2 rounded-full transition-all duration-500\"\n                    style={{\n                      width: `${Math.min((value / target) * 100, 100)}%`,\n                      backgroundColor: color,\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"w-12\">\n                <DonutProgress\n                  value={value}\n                  maxValue={target}\n                  color={color}\n                  size={40}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\n/**\n * Compact KPI Card for dashboard grids\n */\nexport function CompactKPICard({\n  title,\n  value,\n  change,\n  changeType = 'percentage',\n  trend = 'neutral',\n  color = CHART_COLORS.primary,\n  className = '',\n}: {\n  title: string;\n  value: string | number;\n  change?: number;\n  changeType?: 'percentage' | 'absolute';\n  trend?: 'up' | 'down' | 'neutral';\n  color?: string;\n  className?: string;\n}): React.ReactElement {\n  \n  const TrendIcon = trend === 'up' \n    ? ArrowUpIcon \n    : trend === 'down' \n    ? ArrowDownIcon \n    : MinusIcon;\n  \n  const trendColors = {\n    up: CHART_COLORS.success,\n    down: CHART_COLORS.error,\n    neutral: CHART_COLORS.textMuted,\n  };\n  \n  const formattedValue = typeof value === 'string' \n    ? value \n    : value.toLocaleString('de-DE');\n  \n  const formattedChange = change \n    ? changeType === 'percentage' \n      ? `${change > 0 ? '+' : ''}${change.toFixed(1)}%`\n      : `${change > 0 ? '+' : ''}${change.toLocaleString('de-DE')}`\n    : null;\n\n  return (\n    <div \n      className={`\n        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4\n        hover:shadow-sm transition-shadow duration-200\n        ${className}\n      `}\n    >\n      <div className=\"space-y-3\">\n        <h4 className=\"text-sm font-medium text-[#5d5d5d] truncate\">\n          {title}\n        </h4>\n        \n        <div className=\"flex items-center justify-between\">\n          <div className=\"text-2xl font-bold text-[#3d3d3d]\">\n            {formattedValue}\n          </div>\n          \n          {formattedChange && (\n            <div \n              className=\"flex items-center text-xs font-medium\"\n              style={{ color: trendColors[trend] }}\n            >\n              <TrendIcon className=\"w-3 h-3 mr-1\" />\n              {formattedChange}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n/**\n * KPI Grid Layout for multiple metrics\n */\nexport function KPIGrid({\n  metrics,\n  columns = 4,\n  className = '',\n}: {\n  metrics: Array<{\n    title: string;\n    value: number | string;\n    previousValue?: number;\n    unit?: 'currency' | 'percentage' | 'number';\n    trend?: 'up' | 'down' | 'neutral';\n    color?: string;\n    icon?: React.ReactNode;\n  }>;\n  columns?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const gridCols = {\n    1: 'grid-cols-1',\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',\n    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',\n    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6',\n  };\n\n  return (\n    <div className={`grid gap-4 ${gridCols[columns as keyof typeof gridCols] || gridCols[4]} ${className}`}>\n      {metrics.map((metric, index) => (\n        <KPICard\n          key={index}\n          title={metric.title}\n          value={metric.value}\n          previousValue={metric.previousValue}\n          unit={metric.unit}\n          trend={metric.trend}\n          color={metric.color}\n          icon={metric.icon}\n          size=\"sm\"\n        />\n      ))}\n    </div>\n  );\n}"],
      names: ["CompactKPICard", "KPICard", "KPIGrid", "title", "value", "previousValue", "target", "unit", "trend", "trendValue", "trendData", "showProgress", "icon", "color", "CHART_COLORS", "primary", "size", "className", "calculatedTrend", "calculatedTrendValue", "formattedValue", "formatChartValue", "formattedTrendValue", "Math", "abs", "toFixed", "sizeConfig", "sm", "container", "md", "lg", "config", "trendColors", "up", "success", "down", "error", "neutral", "textMuted", "trendColor", "TrendIcon", "ArrowUpIcon", "ArrowDownIcon", "MinusIcon", "div", "h3", "style", "span", "length", "TrendLineChart", "data", "height", "width", "min", "backgroundColor", "DonutProgress", "maxValue", "change", "changeType", "toLocaleString", "formattedChange", "h4", "metrics", "columns", "gridCols", "map", "metric", "index"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7cf3eeb7a77c5a8fdb602c407688353bbe50053d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1obdl5ryzk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1obdl5ryzk();
cov_1obdl5ryzk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1obdl5ryzk().f[0]++;
  cov_1obdl5ryzk().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1obdl5ryzk().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1obdl5ryzk().s[3]++;
_export(exports, {
  get CompactKPICard() {
    /* istanbul ignore next */
    cov_1obdl5ryzk().f[1]++;
    cov_1obdl5ryzk().s[4]++;
    return CompactKPICard;
  },
  get KPICard() {
    /* istanbul ignore next */
    cov_1obdl5ryzk().f[2]++;
    cov_1obdl5ryzk().s[5]++;
    return KPICard;
  },
  get KPIGrid() {
    /* istanbul ignore next */
    cov_1obdl5ryzk().f[3]++;
    cov_1obdl5ryzk().s[6]++;
    return KPIGrid;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1obdl5ryzk().s[7]++, require("react/jsx-runtime"));
const _lucidereact =
/* istanbul ignore next */
(cov_1obdl5ryzk().s[8]++, require("lucide-react"));
const _config =
/* istanbul ignore next */
(cov_1obdl5ryzk().s[9]++, require("../../lib/charts/config"));
const _LineChart =
/* istanbul ignore next */
(cov_1obdl5ryzk().s[10]++, require("./LineChart"));
const _PieChart =
/* istanbul ignore next */
(cov_1obdl5ryzk().s[11]++, require("./PieChart"));
function KPICard({
  title,
  value,
  previousValue,
  target,
  unit =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[0][0]++, 'number'),
  trend,
  trendValue,
  trendData,
  showProgress =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[1][0]++, false),
  icon,
  color =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[2][0]++, _config.CHART_COLORS.primary),
  size =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[3][0]++, 'md'),
  className =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[4][0]++, '')
}) {
  /* istanbul ignore next */
  cov_1obdl5ryzk().f[4]++;
  // Calculate trend if not provided
  const calculatedTrend =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[12]++,
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[5][0]++, trend) ||
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[5][1]++,
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[7][0]++, previousValue) &&
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[7][1]++, typeof value === 'number') ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[6][0]++, value > previousValue ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[8][0]++, 'up') :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[8][1]++, value < previousValue ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[9][0]++, 'down') :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[9][1]++, 'neutral'))) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[6][1]++, 'neutral')));
  // Calculate trend percentage if not provided
  const calculatedTrendValue =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[13]++,
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[10][0]++, trendValue) ||
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[10][1]++,
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[12][0]++, previousValue) &&
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[12][1]++, typeof value === 'number') &&
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[12][2]++, previousValue > 0) ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[11][0]++, (value - previousValue) / previousValue * 100) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[11][1]++, 0)));
  // Format the main value
  const formattedValue =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[14]++, typeof value === 'string' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[13][0]++, value) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[13][1]++, (0, _config.formatChartValue)(value, unit)));
  // Format trend value
  const formattedTrendValue =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[15]++, Math.abs(calculatedTrendValue).toFixed(1));
  // Size configurations
  const sizeConfig =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[16]++, {
    sm: {
      container: 'p-4',
      title: 'text-sm',
      value: 'text-2xl',
      trend: 'text-xs',
      icon: 'w-5 h-5'
    },
    md: {
      container: 'p-6',
      title: 'text-base',
      value: 'text-3xl',
      trend: 'text-sm',
      icon: 'w-6 h-6'
    },
    lg: {
      container: 'p-8',
      title: 'text-lg',
      value: 'text-4xl',
      trend: 'text-base',
      icon: 'w-8 h-8'
    }
  });
  const config =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[17]++, sizeConfig[size]);
  // Trend colors
  const trendColors =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[18]++, {
    up: _config.CHART_COLORS.success,
    down: _config.CHART_COLORS.error,
    neutral: _config.CHART_COLORS.textMuted
  });
  const trendColor =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[19]++, trendColors[calculatedTrend]);
  // Trend icons
  const TrendIcon =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[20]++, calculatedTrend === 'up' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[14][0]++, _lucidereact.ArrowUpIcon) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[14][1]++, calculatedTrend === 'down' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[15][0]++, _lucidereact.ArrowDownIcon) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[15][1]++, _lucidereact.MinusIcon)));
  /* istanbul ignore next */
  cov_1obdl5ryzk().s[21]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `
        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] 
        hover:shadow-md transition-all duration-200
        ${config.container} ${className}
      `,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between mb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: `font-medium text-[#3d3d3d] ${config.title}`,
        children: title
      }),
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[16][0]++, icon) &&
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[16][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: `${config.icon} flex-shrink-0`,
        style: {
          color
        },
        children: icon
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-end justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex-1",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: `font-bold text-[#3d3d3d] ${config.value}`,
            children: formattedValue
          }), (
          /* istanbul ignore next */
          (cov_1obdl5ryzk().b[17][0]++, calculatedTrendValue !== 0) ||
          /* istanbul ignore next */
          (cov_1obdl5ryzk().b[17][1]++, trend)) &&
          /* istanbul ignore next */
          (cov_1obdl5ryzk().b[17][2]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: `flex items-center mt-2 ${config.trend}`,
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(TrendIcon, {
              className: "w-3 h-3 mr-1",
              style: {
                color: trendColor
              }
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              style: {
                color: trendColor
              },
              children: [formattedTrendValue, "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              className: "text-[#5d5d5d] ml-1",
              children: "vs. vorherige Periode"
            })]
          }))]
        }),
        /* istanbul ignore next */
        (cov_1obdl5ryzk().b[18][0]++, trendData) &&
        /* istanbul ignore next */
        (cov_1obdl5ryzk().b[18][1]++, trendData.length > 0) &&
        /* istanbul ignore next */
        (cov_1obdl5ryzk().b[18][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-20 ml-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LineChart.TrendLineChart, {
            data: trendData,
            color: trendColor,
            height: 40
          })
        }))]
      }),
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[19][0]++, showProgress) &&
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[19][1]++, target) &&
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[19][2]++, typeof value === 'number') &&
      /* istanbul ignore next */
      (cov_1obdl5ryzk().b[19][3]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex justify-between items-center text-sm",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-[#5d5d5d]",
            children: "Ziel"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-[#3d3d3d] font-medium",
            children: (0, _config.formatChartValue)(target, unit)
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center space-x-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "flex-1",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full bg-[#F5EFE7] rounded-full h-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-2 rounded-full transition-all duration-500",
                style: {
                  width: `${Math.min(value / target * 100, 100)}%`,
                  backgroundColor: color
                }
              })
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-12",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PieChart.DonutProgress, {
              value: value,
              maxValue: target,
              color: color,
              size: 40
            })
          })]
        })]
      }))]
    })]
  });
}
function CompactKPICard({
  title,
  value,
  change,
  changeType =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[20][0]++, 'percentage'),
  trend =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[21][0]++, 'neutral'),
  color =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[22][0]++, _config.CHART_COLORS.primary),
  className =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[23][0]++, '')
}) {
  /* istanbul ignore next */
  cov_1obdl5ryzk().f[5]++;
  const TrendIcon =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[22]++, trend === 'up' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[24][0]++, _lucidereact.ArrowUpIcon) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[24][1]++, trend === 'down' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[25][0]++, _lucidereact.ArrowDownIcon) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[25][1]++, _lucidereact.MinusIcon)));
  const trendColors =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[23]++, {
    up: _config.CHART_COLORS.success,
    down: _config.CHART_COLORS.error,
    neutral: _config.CHART_COLORS.textMuted
  });
  const formattedValue =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[24]++, typeof value === 'string' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[26][0]++, value) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[26][1]++, value.toLocaleString('de-DE')));
  const formattedChange =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[25]++, change ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[27][0]++, changeType === 'percentage' ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[28][0]++, `${change > 0 ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[29][0]++, '+') :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[29][1]++, '')}${change.toFixed(1)}%`) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[28][1]++, `${change > 0 ?
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[30][0]++, '+') :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[30][1]++, '')}${change.toLocaleString('de-DE')}`)) :
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[27][1]++, null));
  /* istanbul ignore next */
  cov_1obdl5ryzk().s[26]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `
        bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4
        hover:shadow-sm transition-shadow duration-200
        ${className}
      `,
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-3",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
        className: "text-sm font-medium text-[#5d5d5d] truncate",
        children: title
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-2xl font-bold text-[#3d3d3d]",
          children: formattedValue
        }),
        /* istanbul ignore next */
        (cov_1obdl5ryzk().b[31][0]++, formattedChange) &&
        /* istanbul ignore next */
        (cov_1obdl5ryzk().b[31][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center text-xs font-medium",
          style: {
            color: trendColors[trend]
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(TrendIcon, {
            className: "w-3 h-3 mr-1"
          }), formattedChange]
        }))]
      })]
    })
  });
}
function KPIGrid({
  metrics,
  columns =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[32][0]++, 4),
  className =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().b[33][0]++, '')
}) {
  /* istanbul ignore next */
  cov_1obdl5ryzk().f[6]++;
  const gridCols =
  /* istanbul ignore next */
  (cov_1obdl5ryzk().s[27]++, {
    1: 'grid-cols-1',
    2: 'grid-cols-1 md:grid-cols-2',
    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',
    5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5',
    6: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6'
  });
  /* istanbul ignore next */
  cov_1obdl5ryzk().s[28]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `grid gap-4 ${
    /* istanbul ignore next */
    (cov_1obdl5ryzk().b[34][0]++, gridCols[columns]) ||
    /* istanbul ignore next */
    (cov_1obdl5ryzk().b[34][1]++, gridCols[4])} ${className}`,
    children: metrics.map((metric, index) => {
      /* istanbul ignore next */
      cov_1obdl5ryzk().f[7]++;
      cov_1obdl5ryzk().s[29]++;
      return /*#__PURE__*/(0, _jsxruntime.jsx)(KPICard, {
        title: metric.title,
        value: metric.value,
        previousValue: metric.previousValue,
        unit: metric.unit,
        trend: metric.trend,
        color: metric.color,
        icon: metric.icon,
        size: "sm"
      }, index);
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,