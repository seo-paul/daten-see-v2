{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/layout/__tests__/MainLayout.test.tsx"],"sourcesContent":["import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { render, screen } from '@testing-library/react';\nimport React from 'react';\n\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { TokenManagerMockScenarios } from '@/lib/testing/token-manager-mock';\n\nimport { MainLayout } from '../MainLayout';\n\n// Mock TopNavigation component\njest.mock('../TopNavigation', () => ({\n  TopNavigation: () => <nav data-testid=\"top-navigation\">Top Navigation</nav>,\n}));\n\n// Mock Sentry\njest.mock('@sentry/nextjs', () => ({\n  addBreadcrumb: jest.fn(),\n  captureException: jest.fn(),\n  captureMessage: jest.fn(),\n  setTag: jest.fn(),\n  setContext: jest.fn(),\n}));\n\n// Mock logger\njest.mock('@/lib/monitoring/logger.config', () => ({\n  appLogger: {\n    debug: jest.fn(),\n    info: jest.fn(),\n    warn: jest.fn(),\n    error: jest.fn(),\n  },\n}));\n\nconst TestWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: { queries: { retry: false }, mutations: { retry: false } },\n  });\n\n  const mockTokenManager = TokenManagerMockScenarios.authenticatedUser();\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider tokenManager={mockTokenManager}>\n        {children}\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n};\n\ndescribe('MainLayout', () => {\n  it('should render with authenticated user', () => {\n    render(\n      <TestWrapper>\n        <MainLayout>\n          <div data-testid=\"main-content\">Test Content</div>\n        </MainLayout>\n      </TestWrapper>\n    );\n\n    expect(screen.getByTestId('top-navigation')).toBeInTheDocument();\n    expect(screen.getByTestId('main-content')).toBeInTheDocument();\n  });\n\n  it('should render children in main element', () => {\n    render(\n      <TestWrapper>\n        <MainLayout>\n          <h1>Test Content</h1>\n        </MainLayout>\n      </TestWrapper>\n    );\n\n    const mainElement = screen.getByRole('main');\n    expect(mainElement).toContainElement(screen.getByRole('heading'));\n  });\n\n  it('should apply custom className to main element', () => {\n    render(\n      <TestWrapper>\n        <MainLayout className=\"custom-class\">\n          <div>Content</div>\n        </MainLayout>\n      </TestWrapper>\n    );\n\n    const mainElement = screen.getByRole('main');\n    expect(mainElement).toHaveClass('custom-class');\n  });\n});"],"names":["jest","mock","TopNavigation","nav","data-testid","addBreadcrumb","fn","captureException","captureMessage","setTag","setContext","appLogger","debug","info","warn","error","TestWrapper","children","queryClient","QueryClient","defaultOptions","queries","retry","mutations","mockTokenManager","TokenManagerMockScenarios","authenticatedUser","QueryClientProvider","client","AuthProvider","tokenManager","describe","it","render","MainLayout","div","expect","screen","getByTestId","toBeInTheDocument","h1","mainElement","getByRole","toContainElement","className","toHaveClass"],"mappings":";AASA,+BAA+B;AAC/BA,KAAKC,IAAI,CAAC,oBAAoB,IAAO,CAAA;QACnCC,eAAe,kBAAM,qBAACC;gBAAIC,eAAY;0BAAiB;;IACzD,CAAA;AAEA,cAAc;AACdJ,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCI,eAAeL,KAAKM,EAAE;QACtBC,kBAAkBP,KAAKM,EAAE;QACzBE,gBAAgBR,KAAKM,EAAE;QACvBG,QAAQT,KAAKM,EAAE;QACfI,YAAYV,KAAKM,EAAE;IACrB,CAAA;AAEA,cAAc;AACdN,KAAKC,IAAI,CAAC,kCAAkC,IAAO,CAAA;QACjDU,WAAW;YACTC,OAAOZ,KAAKM,EAAE;YACdO,MAAMb,KAAKM,EAAE;YACbQ,MAAMd,KAAKM,EAAE;YACbS,OAAOf,KAAKM,EAAE;QAChB;IACF,CAAA;;;;;4BA/BiD;uBAClB;+DACb;6BAEW;kCACa;4BAEf;;;;;;AA0B3B,MAAMU,cAAuD,CAAC,EAAEC,QAAQ,EAAE;IACxE,MAAMC,cAAc,IAAIC,uBAAW,CAAC;QAClCC,gBAAgB;YAAEC,SAAS;gBAAEC,OAAO;YAAM;YAAGC,WAAW;gBAAED,OAAO;YAAM;QAAE;IAC3E;IAEA,MAAME,mBAAmBC,2CAAyB,CAACC,iBAAiB;IAEpE,qBACE,qBAACC,+BAAmB;QAACC,QAAQV;kBAC3B,cAAA,qBAACW,yBAAY;YAACC,cAAcN;sBACzBP;;;AAIT;AAEAc,SAAS,cAAc;IACrBC,GAAG,yCAAyC;QAC1CC,IAAAA,aAAM,gBACJ,qBAACjB;sBACC,cAAA,qBAACkB,sBAAU;0BACT,cAAA,qBAACC;oBAAI/B,eAAY;8BAAe;;;;QAKtCgC,OAAOC,aAAM,CAACC,WAAW,CAAC,mBAAmBC,iBAAiB;QAC9DH,OAAOC,aAAM,CAACC,WAAW,CAAC,iBAAiBC,iBAAiB;IAC9D;IAEAP,GAAG,0CAA0C;QAC3CC,IAAAA,aAAM,gBACJ,qBAACjB;sBACC,cAAA,qBAACkB,sBAAU;0BACT,cAAA,qBAACM;8BAAG;;;;QAKV,MAAMC,cAAcJ,aAAM,CAACK,SAAS,CAAC;QACrCN,OAAOK,aAAaE,gBAAgB,CAACN,aAAM,CAACK,SAAS,CAAC;IACxD;IAEAV,GAAG,iDAAiD;QAClDC,IAAAA,aAAM,gBACJ,qBAACjB;sBACC,cAAA,qBAACkB,sBAAU;gBAACU,WAAU;0BACpB,cAAA,qBAACT;8BAAI;;;;QAKX,MAAMM,cAAcJ,aAAM,CAACK,SAAS,CAAC;QACrCN,OAAOK,aAAaI,WAAW,CAAC;IAClC;AACF"}