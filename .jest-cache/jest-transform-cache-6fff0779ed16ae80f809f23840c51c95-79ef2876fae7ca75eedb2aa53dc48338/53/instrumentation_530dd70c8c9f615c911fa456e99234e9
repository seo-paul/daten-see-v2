ddff4cdc5b0a3652dc359981db1ee976
// Next.js Instrumentation Hook (Official Pattern)
// https://nextjs.org/docs/app/building-your-application/optimizing/instrumentation
"use strict";

/* istanbul ignore next */
function cov_123dv79uit() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/instrumentation.ts";
  var hash = "a08f2daa7b2f2ff825216ba62a4b344704c4234f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/instrumentation.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 0
        },
        end: {
          line: 6,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 0
        },
        end: {
          line: 12,
          column: 3
        }
      },
      "2": {
        start: {
          line: 10,
          column: 8
        },
        end: {
          line: 10,
          column: 24
        }
      },
      "3": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "4": {
        start: {
          line: 14,
          column: 39
        },
        end: {
          line: 14,
          column: 51
        }
      },
      "5": {
        start: {
          line: 15,
          column: 28
        },
        end: {
          line: 15,
          column: 41
        }
      },
      "6": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 40
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 20
        }
      },
      "8": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 24,
          column: 5
        }
      },
      "10": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 19
        }
      },
      "11": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "12": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 28,
          column: 10
        }
      },
      "13": {
        start: {
          line: 30,
          column: 16
        },
        end: {
          line: 30,
          column: 53
        }
      },
      "14": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "15": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 30
        }
      },
      "16": {
        start: {
          line: 34,
          column: 17
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "17": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 37,
          column: 88
        }
      },
      "18": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "19": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "20": {
        start: {
          line: 40,
          column: 23
        },
        end: {
          line: 40,
          column: 95
        }
      },
      "21": {
        start: {
          line: 41,
          column: 12
        },
        end: {
          line: 45,
          column: 13
        }
      },
      "22": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "23": {
        start: {
          line: 44,
          column: 16
        },
        end: {
          line: 44,
          column: 39
        }
      },
      "24": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 48,
          column: 25
        }
      },
      "25": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "26": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 31
        }
      },
      "27": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 18
        }
      },
      "28": {
        start: {
          line: 55,
          column: 26
        },
        end: {
          line: 55,
          column: 147
        }
      },
      "29": {
        start: {
          line: 55,
          column: 73
        },
        end: {
          line: 55,
          column: 146
        }
      },
      "30": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "31": {
        start: {
          line: 59,
          column: 8
        },
        end: {
          line: 59,
          column: 122
        }
      },
      "32": {
        start: {
          line: 59,
          column: 55
        },
        end: {
          line: 59,
          column: 120
        }
      },
      "33": {
        start: {
          line: 61,
          column: 47
        },
        end: {
          line: 61,
          column: 169
        }
      },
      "34": {
        start: {
          line: 61,
          column: 94
        },
        end: {
          line: 61,
          column: 168
        }
      },
      "35": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 37
        }
      },
      "36": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "37": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "38": {
        start: {
          line: 68,
          column: 25
        },
        end: {
          line: 68,
          column: 125
        }
      },
      "39": {
        start: {
          line: 68,
          column: 72
        },
        end: {
          line: 68,
          column: 124
        }
      },
      "40": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 104,
          column: 11
        }
      },
      "41": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 86,
          column: 18
        }
      },
      "42": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 29
        }
      },
      "43": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 10
          }
        },
        loc: {
          start: {
            line: 9,
            column: 20
          },
          end: {
            line: 11,
            column: 5
          }
        },
        line: 9
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 47
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 17,
            column: 39
          },
          end: {
            line: 17,
            column: 40
          }
        },
        loc: {
          start: {
            line: 17,
            column: 61
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 53
          },
          end: {
            line: 53,
            column: 1
          }
        },
        line: 21
      },
      "4": {
        name: "register",
        decl: {
          start: {
            line: 54,
            column: 15
          },
          end: {
            line: 54,
            column: 23
          }
        },
        loc: {
          start: {
            line: 54,
            column: 26
          },
          end: {
            line: 108,
            column: 1
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 55,
            column: 55
          },
          end: {
            line: 55,
            column: 56
          }
        },
        loc: {
          start: {
            line: 55,
            column: 73
          },
          end: {
            line: 55,
            column: 146
          }
        },
        line: 55
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 59,
            column: 38
          }
        },
        loc: {
          start: {
            line: 59,
            column: 55
          },
          end: {
            line: 59,
            column: 120
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 61,
            column: 76
          },
          end: {
            line: 61,
            column: 77
          }
        },
        loc: {
          start: {
            line: 61,
            column: 94
          },
          end: {
            line: 61,
            column: 168
          }
        },
        line: 61
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 68,
            column: 54
          },
          end: {
            line: 68,
            column: 55
          }
        },
        loc: {
          start: {
            line: 68,
            column: 72
          },
          end: {
            line: 68,
            column: 124
          }
        },
        line: 68
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 78,
            column: 13
          }
        },
        loc: {
          start: {
            line: 78,
            column: 31
          },
          end: {
            line: 88,
            column: 13
          }
        },
        line: 78
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 14,
            column: 4
          },
          end: {
            line: 14,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 15
          },
          end: {
            line: 18,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 18,
            column: 29
          },
          end: {
            line: 18,
            column: 45
          }
        }, {
          start: {
            line: 18,
            column: 48
          },
          end: {
            line: 18,
            column: 65
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "3": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 20
          }
        }, {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 22,
            column: 27
          }
        }, {
          start: {
            line: 22,
            column: 31
          },
          end: {
            line: 22,
            column: 45
          }
        }],
        line: 22
      },
      "4": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "5": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 47
          }
        }, {
          start: {
            line: 25,
            column: 51
          },
          end: {
            line: 25,
            column: 76
          }
        }],
        line: 25
      },
      "6": {
        loc: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 31
      },
      "7": {
        loc: {
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 31,
            column: 8
          },
          end: {
            line: 31,
            column: 13
          }
        }, {
          start: {
            line: 31,
            column: 17
          },
          end: {
            line: 31,
            column: 31
          }
        }],
        line: 31
      },
      "8": {
        loc: {
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 53
          }
        }, {
          start: {
            line: 37,
            column: 57
          },
          end: {
            line: 37,
            column: 88
          }
        }],
        line: 37
      },
      "9": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "10": {
        loc: {
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 12
          },
          end: {
            line: 39,
            column: 29
          }
        }, {
          start: {
            line: 39,
            column: 33
          },
          end: {
            line: 39,
            column: 79
          }
        }],
        line: 39
      },
      "11": {
        loc: {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 40,
            column: 47
          },
          end: {
            line: 40,
            column: 88
          }
        }, {
          start: {
            line: 40,
            column: 91
          },
          end: {
            line: 40,
            column: 95
          }
        }],
        line: 40
      },
      "12": {
        loc: {
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 12
          },
          end: {
            line: 45,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 19
          },
          end: {
            line: 45,
            column: 13
          }
        }],
        line: 41
      },
      "13": {
        loc: {
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 16
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 25
          },
          end: {
            line: 41,
            column: 33
          }
        }, {
          start: {
            line: 41,
            column: 37
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "14": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "15": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 65,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "16": {
        loc: {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 107,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 67
      },
      "17": {
        loc: {
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 70,
            column: 17
          },
          end: {
            line: 70,
            column: 39
          }
        }, {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 70,
            column: 45
          }
        }],
        line: 70
      },
      "18": {
        loc: {
          start: {
            line: 72,
            column: 30
          },
          end: {
            line: 72,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 72,
            column: 70
          },
          end: {
            line: 72,
            column: 74
          }
        }, {
          start: {
            line: 72,
            column: 77
          },
          end: {
            line: 72,
            column: 80
          }
        }],
        line: 72
      },
      "19": {
        loc: {
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 76,
            column: 21
          },
          end: {
            line: 76,
            column: 52
          }
        }, {
          start: {
            line: 76,
            column: 56
          },
          end: {
            line: 76,
            column: 63
          }
        }],
        line: 76
      },
      "20": {
        loc: {
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 83,
            column: 75
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 33
          },
          end: {
            line: 83,
            column: 64
          }
        }, {
          start: {
            line: 83,
            column: 68
          },
          end: {
            line: 83,
            column: 75
          }
        }],
        line: 83
      },
      "21": {
        loc: {
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 96,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 29
          },
          end: {
            line: 96,
            column: 60
          }
        }, {
          start: {
            line: 96,
            column: 64
          },
          end: {
            line: 96,
            column: 71
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/instrumentation.ts"],
      sourcesContent: ["// Next.js Instrumentation Hook (Official Pattern)\n// https://nextjs.org/docs/app/building-your-application/optimizing/instrumentation\n\nexport async function register(): Promise<void> {\n  const { devLogger } = await import('./lib/monitoring/development-logger');\n  // Server-side Sentry initialization\n  if (process.env.NEXT_RUNTIME === 'nodejs') {\n    // Import minimal Sentry configuration for Docker compatibility\n    await import('../sentry.minimal.config.js');\n    \n    // Initialize performance monitoring for server\n    const { configureSentryPerformance } = await import('./lib/performance/sentry-integration');\n    configureSentryPerformance();\n    \n    // Server-side logging\n    devLogger.sentryInit('server', true);\n  }\n  \n  // Edge runtime initialization (if needed)\n  if (process.env.NEXT_RUNTIME === 'edge') {\n    const { init } = await import('@sentry/nextjs');\n    \n    init({\n      dsn: process.env.SENTRY_DSN || '',\n      \n      // Performance Monitoring - Conservative for edge\n      tracesSampleRate: process.env.NODE_ENV === 'production' ? 0.05 : 0.5,\n      \n      // Edge-specific settings\n      debug: false,\n      environment: process.env.NODE_ENV,\n      release: process.env.npm_package_version || '0.1.0',\n      \n      // Edge runtime context\n      beforeSend(event) {\n        event.contexts = {\n          ...event.contexts,\n          runtime: {\n            name: 'edge',\n            version: process.env.npm_package_version || '0.1.0',\n            environment: process.env.NODE_ENV,\n          },\n        };\n        \n        return event;\n      },\n      \n      // Minimal integrations for edge\n      integrations: [\n        // Only essential integrations for edge runtime\n      ],\n      \n      // Tags for filtering\n      initialScope: {\n        tags: {\n          component: 'edge',\n          runtime: 'edge',\n          version: process.env.npm_package_version || '0.1.0',\n        },\n      },\n      \n      // Edge-specific settings\n      maxBreadcrumbs: 20,\n      attachStacktrace: true,\n      sendDefaultPii: false,\n      autoSessionTracking: false,\n    });\n    \n    // Edge runtime logging\n    devLogger.sentryInit('edge', true);\n  }\n}"],
      names: ["register", "devLogger", "process", "env", "NEXT_RUNTIME", "configureSentryPerformance", "sentryInit", "init", "dsn", "SENTRY_DSN", "tracesSampleRate", "NODE_ENV", "debug", "environment", "release", "npm_package_version", "beforeSend", "event", "contexts", "runtime", "name", "version", "integrations", "initialScope", "tags", "component", "maxBreadcrumbs", "attachStacktrace", "sendDefaultPii", "autoSessionTracking"],
      mappings: "AAAA,kDAAkD;AAClD,mFAAmF;;;;;+BAE7DA;;;eAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAf,eAAeA;IACpB,MAAM,EAAEC,SAAS,EAAE,GAAG,MAAM,mEAAA,QAAO;IACnC,oCAAoC;IACpC,IAAIC,QAAQC,GAAG,CAACC,YAAY,KAAK,UAAU;QACzC,+DAA+D;QAC/D,MAAM,mEAAA,QAAO;QAEb,+CAA+C;QAC/C,MAAM,EAAEC,0BAA0B,EAAE,GAAG,MAAM,mEAAA,QAAO;QACpDA;QAEA,sBAAsB;QACtBJ,UAAUK,UAAU,CAAC,UAAU;IACjC;IAEA,0CAA0C;IAC1C,IAAIJ,QAAQC,GAAG,CAACC,YAAY,KAAK,QAAQ;QACvC,MAAM,EAAEG,IAAI,EAAE,GAAG,MAAM,mEAAA,QAAO;QAE9BA,KAAK;YACHC,KAAKN,QAAQC,GAAG,CAACM,UAAU,IAAI;YAE/B,iDAAiD;YACjDC,kBAAkBR,QAAQC,GAAG,CAACQ,QAAQ,KAAK,eAAe,OAAO;YAEjE,yBAAyB;YACzBC,OAAO;YACPC,aAAaX,QAAQC,GAAG,CAACQ,QAAQ;YACjCG,SAASZ,QAAQC,GAAG,CAACY,mBAAmB,IAAI;YAE5C,uBAAuB;YACvBC,YAAWC,KAAK;gBACdA,MAAMC,QAAQ,GAAG;oBACf,GAAGD,MAAMC,QAAQ;oBACjBC,SAAS;wBACPC,MAAM;wBACNC,SAASnB,QAAQC,GAAG,CAACY,mBAAmB,IAAI;wBAC5CF,aAAaX,QAAQC,GAAG,CAACQ,QAAQ;oBACnC;gBACF;gBAEA,OAAOM;YACT;YAEA,gCAAgC;YAChCK,cAAc,EAEb;YAED,qBAAqB;YACrBC,cAAc;gBACZC,MAAM;oBACJC,WAAW;oBACXN,SAAS;oBACTE,SAASnB,QAAQC,GAAG,CAACY,mBAAmB,IAAI;gBAC9C;YACF;YAEA,yBAAyB;YACzBW,gBAAgB;YAChBC,kBAAkB;YAClBC,gBAAgB;YAChBC,qBAAqB;QACvB;QAEA,uBAAuB;QACvB5B,UAAUK,UAAU,CAAC,QAAQ;IAC/B;AACF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a08f2daa7b2f2ff825216ba62a4b344704c4234f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_123dv79uit = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_123dv79uit();
cov_123dv79uit().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_123dv79uit().s[1]++;
Object.defineProperty(exports, "register", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_123dv79uit().f[0]++;
    cov_123dv79uit().s[2]++;
    return register;
  }
});
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_123dv79uit().f[1]++;
  cov_123dv79uit().s[3]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_123dv79uit().b[0][0]++;
    cov_123dv79uit().s[4]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_123dv79uit().s[5]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_123dv79uit().s[6]++, new WeakMap());
  /* istanbul ignore next */
  cov_123dv79uit().s[7]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_123dv79uit().f[2]++;
    cov_123dv79uit().s[8]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_123dv79uit().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_123dv79uit().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_123dv79uit().f[3]++;
  cov_123dv79uit().s[9]++;
  if (
  /* istanbul ignore next */
  (cov_123dv79uit().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_123dv79uit().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_123dv79uit().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_123dv79uit().b[2][0]++;
    cov_123dv79uit().s[10]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[2][1]++;
  }
  cov_123dv79uit().s[11]++;
  if (
  /* istanbul ignore next */
  (cov_123dv79uit().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_123dv79uit().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_123dv79uit().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_123dv79uit().b[4][0]++;
    cov_123dv79uit().s[12]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_123dv79uit().s[13]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_123dv79uit().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_123dv79uit().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_123dv79uit().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_123dv79uit().b[6][0]++;
    cov_123dv79uit().s[15]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_123dv79uit().s[16]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_123dv79uit().s[17]++,
  /* istanbul ignore next */
  (cov_123dv79uit().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_123dv79uit().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_123dv79uit().s[18]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_123dv79uit().s[19]++;
    if (
    /* istanbul ignore next */
    (cov_123dv79uit().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_123dv79uit().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_123dv79uit().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_123dv79uit().s[20]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_123dv79uit().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_123dv79uit().b[11][1]++, null));
      /* istanbul ignore next */
      cov_123dv79uit().s[21]++;
      if (
      /* istanbul ignore next */
      (cov_123dv79uit().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_123dv79uit().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_123dv79uit().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_123dv79uit().b[12][0]++;
        cov_123dv79uit().s[22]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_123dv79uit().b[12][1]++;
        cov_123dv79uit().s[23]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_123dv79uit().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_123dv79uit().s[24]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_123dv79uit().s[25]++;
  if (cache) {
    /* istanbul ignore next */
    cov_123dv79uit().b[14][0]++;
    cov_123dv79uit().s[26]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[14][1]++;
  }
  cov_123dv79uit().s[27]++;
  return newObj;
}
async function register() {
  /* istanbul ignore next */
  cov_123dv79uit().f[4]++;
  const {
    devLogger
  } =
  /* istanbul ignore next */
  (cov_123dv79uit().s[28]++, await Promise.resolve().then(() => {
    /* istanbul ignore next */
    cov_123dv79uit().f[5]++;
    cov_123dv79uit().s[29]++;
    return /*#__PURE__*/_interop_require_wildcard(require("./lib/monitoring/development-logger"));
  }));
  // Server-side Sentry initialization
  /* istanbul ignore next */
  cov_123dv79uit().s[30]++;
  if (process.env.NEXT_RUNTIME === 'nodejs') {
    /* istanbul ignore next */
    cov_123dv79uit().b[15][0]++;
    cov_123dv79uit().s[31]++;
    // Import minimal Sentry configuration for Docker compatibility
    await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_123dv79uit().f[6]++;
      cov_123dv79uit().s[32]++;
      return /*#__PURE__*/_interop_require_wildcard(require("../sentry.minimal.config.js"));
    });
    // Initialize performance monitoring for server
    const {
      configureSentryPerformance
    } =
    /* istanbul ignore next */
    (cov_123dv79uit().s[33]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_123dv79uit().f[7]++;
      cov_123dv79uit().s[34]++;
      return /*#__PURE__*/_interop_require_wildcard(require("./lib/performance/sentry-integration"));
    }));
    /* istanbul ignore next */
    cov_123dv79uit().s[35]++;
    configureSentryPerformance();
    // Server-side logging
    /* istanbul ignore next */
    cov_123dv79uit().s[36]++;
    devLogger.sentryInit('server', true);
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[15][1]++;
  }
  // Edge runtime initialization (if needed)
  cov_123dv79uit().s[37]++;
  if (process.env.NEXT_RUNTIME === 'edge') {
    /* istanbul ignore next */
    cov_123dv79uit().b[16][0]++;
    const {
      init
    } =
    /* istanbul ignore next */
    (cov_123dv79uit().s[38]++, await Promise.resolve().then(() => {
      /* istanbul ignore next */
      cov_123dv79uit().f[8]++;
      cov_123dv79uit().s[39]++;
      return /*#__PURE__*/_interop_require_wildcard(require("@sentry/nextjs"));
    }));
    /* istanbul ignore next */
    cov_123dv79uit().s[40]++;
    init({
      dsn:
      /* istanbul ignore next */
      (cov_123dv79uit().b[17][0]++, process.env.SENTRY_DSN) ||
      /* istanbul ignore next */
      (cov_123dv79uit().b[17][1]++, ''),
      // Performance Monitoring - Conservative for edge
      tracesSampleRate: process.env.NODE_ENV === 'production' ?
      /* istanbul ignore next */
      (cov_123dv79uit().b[18][0]++, 0.05) :
      /* istanbul ignore next */
      (cov_123dv79uit().b[18][1]++, 0.5),
      // Edge-specific settings
      debug: false,
      environment: process.env.NODE_ENV,
      release:
      /* istanbul ignore next */
      (cov_123dv79uit().b[19][0]++, process.env.npm_package_version) ||
      /* istanbul ignore next */
      (cov_123dv79uit().b[19][1]++, '0.1.0'),
      // Edge runtime context
      beforeSend(event) {
        /* istanbul ignore next */
        cov_123dv79uit().f[9]++;
        cov_123dv79uit().s[41]++;
        event.contexts = {
          ...event.contexts,
          runtime: {
            name: 'edge',
            version:
            /* istanbul ignore next */
            (cov_123dv79uit().b[20][0]++, process.env.npm_package_version) ||
            /* istanbul ignore next */
            (cov_123dv79uit().b[20][1]++, '0.1.0'),
            environment: process.env.NODE_ENV
          }
        };
        /* istanbul ignore next */
        cov_123dv79uit().s[42]++;
        return event;
      },
      // Minimal integrations for edge
      integrations: [],
      // Tags for filtering
      initialScope: {
        tags: {
          component: 'edge',
          runtime: 'edge',
          version:
          /* istanbul ignore next */
          (cov_123dv79uit().b[21][0]++, process.env.npm_package_version) ||
          /* istanbul ignore next */
          (cov_123dv79uit().b[21][1]++, '0.1.0')
        }
      },
      // Edge-specific settings
      maxBreadcrumbs: 20,
      attachStacktrace: true,
      sendDefaultPii: false,
      autoSessionTracking: false
    });
    // Edge runtime logging
    /* istanbul ignore next */
    cov_123dv79uit().s[43]++;
    devLogger.sentryInit('edge', true);
  } else
  /* istanbul ignore next */
  {
    cov_123dv79uit().b[16][1]++;
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,