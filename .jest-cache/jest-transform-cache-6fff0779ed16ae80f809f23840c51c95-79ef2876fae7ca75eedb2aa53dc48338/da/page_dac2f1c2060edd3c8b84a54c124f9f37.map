{"version":3,"names":["DashboardDetailPage","cov_1y5axex60z","f","params","s","_navigation","useParams","dashboardId","id","currentDashboard","isLoading","error","fetchDashboard","clearError","_dashboardstore","useDashboardStore","isEditMode","setIsEditMode","_react","useState","hasChanges","setHasChanges","widgets","setWidgets","type","title","config","metric","value","previousValue","unit","trend","layouts","setLayouts","lg","i","x","y","w","h","md","sm","xs","xxs","undoStack","setUndoStack","redoStack","setRedoStack","useEffect","b","handleLayoutChange","useCallback","_currentLayout","allLayouts","handleToggleEditMode","console","log","handleAddWidget","widgetType","prompt","includes","prev","newWidgetId","Date","now","newWidget","_WidgetRenderer","createDefaultWidget","_ResponsiveDashboard","mergeLayouts","generateDefaultLayouts","handleDeleteWidget","widgetId","filter","removeWidgetFromLayouts","handleDuplicateWidget","widget","find","handleEditWidget","newTitle","map","handleUndo","length","previousState","slice","handleRedo","nextState","_jsxruntime","jsx","_MainLayout","MainLayout","jsxs","className","onClick","Fragment","_DashboardHeader","DashboardHeader","name","subtitle","description","isPublic","lastUpdated","Intl","DateTimeFormat","day","month","hour","minute","format","updatedAt","onToggleEditMode","onAddWidget","onUndo","onRedo","canUndo","canRedo","ResponsiveDashboard","onLayoutChange","onEditWidget","onDeleteWidget","onDuplicateWidget"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/app/dashboard/[id]/page.tsx"],"sourcesContent":["'use client';\n\nimport { useParams } from 'next/navigation';\nimport { useEffect, useState, useCallback } from 'react';\nimport type { Layout, Layouts } from 'react-grid-layout';\n\nimport { DashboardHeader } from '@/components/layout/DashboardHeader';\nimport { MainLayout } from '@/components/layout/MainLayout';\nimport { \n  ResponsiveDashboard, \n  generateDefaultLayouts, \n  mergeLayouts,\n  removeWidgetFromLayouts,\n} from '@/components/dashboard/ResponsiveDashboard';\nimport { createDefaultWidget } from '@/components/dashboard/WidgetRenderer';\nimport type { DashboardWidget } from '@/components/dashboard/DashboardCanvas';\nimport { useDashboardStore } from '@/store/dashboard.store';\n\nexport default function DashboardDetailPage(): React.ReactElement {\n  const params = useParams();\n  const dashboardId = params.id as string;\n  \n  const {\n    currentDashboard,\n    isLoading,\n    error,\n    fetchDashboard,\n    clearError\n  } = useDashboardStore();\n\n  // Edit Mode State\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [hasChanges, setHasChanges] = useState(false);\n  \n  // Demo widgets state (will be replaced with real data later)\n  const [widgets, setWidgets] = useState<DashboardWidget[]>([\n    {\n      id: 'widget-1',\n      type: 'line',\n      title: 'Marketing Performance',\n      config: {},\n    },\n    {\n      id: 'widget-2',\n      type: 'kpi',\n      title: 'Gesamtumsatz',\n      config: {\n        metric: 'Gesamtumsatz',\n        value: 89500,\n        previousValue: 76200,\n        unit: 'currency',\n        trend: 'up',\n      },\n    },\n  ]);\n\n  // Layout state\n  const [layouts, setLayouts] = useState<Layouts>({\n    lg: [\n      { i: 'widget-1', x: 0, y: 0, w: 8, h: 4 },\n      { i: 'widget-2', x: 8, y: 0, w: 4, h: 3 },\n    ],\n    md: [\n      { i: 'widget-1', x: 0, y: 0, w: 6, h: 4 },\n      { i: 'widget-2', x: 6, y: 0, w: 4, h: 3 },\n    ],\n    sm: [\n      { i: 'widget-1', x: 0, y: 0, w: 6, h: 4 },\n      { i: 'widget-2', x: 0, y: 4, w: 6, h: 3 },\n    ],\n    xs: [\n      { i: 'widget-1', x: 0, y: 0, w: 4, h: 4 },\n      { i: 'widget-2', x: 0, y: 4, w: 4, h: 3 },\n    ],\n    xxs: [\n      { i: 'widget-1', x: 0, y: 0, w: 2, h: 4 },\n      { i: 'widget-2', x: 0, y: 4, w: 2, h: 3 },\n    ],\n  });\n\n  // Undo/Redo state (basic implementation)\n  const [undoStack, setUndoStack] = useState<{widgets: DashboardWidget[]; layouts: Layouts}[]>([]);\n  const [redoStack, setRedoStack] = useState<{widgets: DashboardWidget[]; layouts: Layouts}[]>([]);\n\n  // Load dashboard on mount\n  useEffect(() => {\n    if (dashboardId) {\n      fetchDashboard(dashboardId);\n    }\n  }, [dashboardId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Handle layout changes\n  const handleLayoutChange = useCallback((_currentLayout: Layout[], allLayouts: Layouts) => {\n    setLayouts(allLayouts);\n    setHasChanges(true);\n  }, []);\n\n  // Edit Mode Handlers\n  const handleToggleEditMode = useCallback(() => {\n    setIsEditMode(!isEditMode);\n    if (isEditMode && hasChanges) {\n      // Save changes when exiting edit mode\n      console.log('Saving dashboard changes:', { widgets, layouts });\n      setHasChanges(false);\n    }\n  }, [isEditMode, hasChanges, widgets, layouts]);\n\n  // Add new widget\n  const handleAddWidget = useCallback(() => {\n    const widgetType = prompt('Widget-Typ wählen: line, bar, pie, kpi, text') as DashboardWidget['type'];\n    if (!widgetType || !['line', 'bar', 'pie', 'kpi', 'text'].includes(widgetType)) {\n      return;\n    }\n\n    // Save current state to undo stack\n    setUndoStack(prev => [...prev, { widgets, layouts }]);\n    setRedoStack([]); // Clear redo stack\n\n    const newWidgetId = `widget-${Date.now()}`;\n    const newWidget: DashboardWidget = {\n      id: newWidgetId,\n      ...createDefaultWidget(widgetType),\n    };\n\n    setWidgets([...widgets, newWidget]);\n    setLayouts(mergeLayouts(layouts, generateDefaultLayouts(newWidgetId, widgetType)));\n    setHasChanges(true);\n  }, [widgets, layouts]);\n\n  // Delete widget (no confirmation dialog)\n  const handleDeleteWidget = useCallback((widgetId: string) => {\n    // Save current state to undo stack\n    setUndoStack(prev => [...prev, { widgets, layouts }]);\n    setRedoStack([]); // Clear redo stack\n\n    setWidgets(widgets.filter(w => w.id !== widgetId));\n    setLayouts(removeWidgetFromLayouts(layouts, widgetId));\n    setHasChanges(true);\n  }, [widgets, layouts]);\n\n  // Duplicate widget\n  const handleDuplicateWidget = useCallback((widgetId: string) => {\n    const widget = widgets.find(w => w.id === widgetId);\n    if (!widget) return;\n\n    // Save current state to undo stack\n    setUndoStack(prev => [...prev, { widgets, layouts }]);\n    setRedoStack([]); // Clear redo stack\n\n    const newWidgetId = `widget-${Date.now()}`;\n    const newWidget: DashboardWidget = {\n      ...widget,\n      id: newWidgetId,\n      title: `${widget.title} (Kopie)`,\n    };\n\n    setWidgets([...widgets, newWidget]);\n    setLayouts(mergeLayouts(layouts, generateDefaultLayouts(newWidgetId, widget.type)));\n    setHasChanges(true);\n  }, [widgets, layouts]);\n\n  // Edit widget\n  const handleEditWidget = useCallback((widgetId: string) => {\n    const widget = widgets.find(w => w.id === widgetId);\n    if (!widget) return;\n\n    const newTitle = prompt('Widget-Titel:', widget.title);\n    if (newTitle && newTitle !== widget.title) {\n      // Save current state to undo stack\n      setUndoStack(prev => [...prev, { widgets, layouts }]);\n      setRedoStack([]); // Clear redo stack\n\n      setWidgets(widgets.map(w => \n        w.id === widgetId ? { ...w, title: newTitle } : w\n      ));\n      setHasChanges(true);\n    }\n  }, [widgets, layouts]);\n\n  // Undo/Redo handlers\n  const handleUndo = useCallback(() => {\n    if (undoStack.length === 0) return;\n    \n    const previousState = undoStack[undoStack.length - 1];\n    if (!previousState) return;\n    \n    setRedoStack(prev => [...prev, { widgets, layouts }]);\n    setUndoStack(prev => prev.slice(0, -1));\n    \n    setWidgets(previousState.widgets);\n    setLayouts(previousState.layouts);\n    setHasChanges(true);\n  }, [undoStack, widgets, layouts]);\n\n  const handleRedo = useCallback(() => {\n    if (redoStack.length === 0) return;\n    \n    const nextState = redoStack[redoStack.length - 1];\n    if (!nextState) return;\n    \n    setUndoStack(prev => [...prev, { widgets, layouts }]);\n    setRedoStack(prev => prev.slice(0, -1));\n    \n    setWidgets(nextState.widgets);\n    setLayouts(nextState.layouts);\n    setHasChanges(true);\n  }, [redoStack, widgets, layouts]);\n\n  return (\n    <MainLayout>\n      <div className=\"flex flex-col h-full bg-[#FEFCF9]\">\n\n        {/* Loading State */}\n        {isLoading && (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <div className=\"text-center text-[#5d5d5d]\">\n              <div className=\"w-16 h-16 mx-auto mb-4 bg-[#FBF5ED] rounded-lg flex items-center justify-center animate-pulse\">\n                <div className=\"w-8 h-8 border-2 border-[#E6D7B8] border-dashed rounded animate-spin\"></div>\n              </div>\n              <p className=\"text-lg font-medium\">Lade Dashboard...</p>\n            </div>\n          </div>\n        )}\n\n        {/* Error State */}\n        {error && (\n          <div className=\"flex-1 flex items-center justify-center p-6\">\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-8 max-w-md w-full\">\n              <div className=\"text-center\">\n                <div className=\"text-red-600 text-sm mb-4\">\n                  <strong>Fehler beim Laden:</strong> {error}\n                </div>\n                <div className=\"space-x-3\">\n                  <button\n                    onClick={clearError}\n                    className=\"px-4 py-2 text-sm text-red-600 border border-red-300 rounded-lg hover:bg-red-50 transition-colors\"\n                  >\n                    Schließen\n                  </button>\n                  <button\n                    onClick={() => fetchDashboard(dashboardId)}\n                    className=\"px-4 py-2 text-sm text-white bg-red-600 rounded-lg hover:bg-red-700 transition-colors\"\n                  >\n                    Erneut versuchen\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Dashboard Content */}\n        {!isLoading && !error && currentDashboard && (\n          <>\n            {/* Dashboard Header with Edit Mode */}\n            <DashboardHeader\n              title={currentDashboard.name}\n              subtitle={`${currentDashboard.description} • ${currentDashboard.isPublic ? 'Öffentlich' : 'Privat'} • Bearbeitungsmodus ${isEditMode ? 'aktiv' : 'inaktiv'}`}\n              lastUpdated={new Intl.DateTimeFormat('de-DE', {\n                day: '2-digit',\n                month: '2-digit',\n                hour: '2-digit',\n                minute: '2-digit'\n              }).format(currentDashboard.updatedAt)}\n              isEditMode={isEditMode}\n              onToggleEditMode={handleToggleEditMode}\n              onAddWidget={handleAddWidget}\n              onUndo={handleUndo}\n              onRedo={handleRedo}    \n              canUndo={undoStack.length > 0}\n              canRedo={redoStack.length > 0}\n            />\n\n            {/* Main Dashboard Content - Full Width Widget Area (No container background) */}\n            <div className=\"flex-1 bg-[#FBF5ED] bg-opacity-20\">\n              <ResponsiveDashboard\n                widgets={widgets}\n                layouts={layouts}\n                onLayoutChange={handleLayoutChange}\n                isEditMode={isEditMode}\n                onEditWidget={handleEditWidget}\n                onDeleteWidget={handleDeleteWidget}\n                onDuplicateWidget={handleDuplicateWidget}\n                className={isEditMode ? 'dashboard-edit-mode-active' : ''}\n              />\n              \n              {/* Empty State */}\n              {widgets.length === 0 && (\n                <div className=\"text-center text-[#5d5d5d] py-16\">\n                  <p className=\"text-lg font-medium mb-2\">\n                    {isEditMode ? 'Bearbeitungsmodus aktiv' : 'Dashboard Widget-Bereich'}\n                  </p>\n                  <p className=\"text-sm mb-4\">\n                    {isEditMode \n                      ? 'Klicken Sie auf \"Widget hinzufügen\" um neue Widgets zu erstellen'\n                      : 'Dieses Dashboard hat noch keine Widgets'\n                    }\n                  </p>\n                  {isEditMode && (\n                    <p className=\"text-xs text-[#5d5d5d]\">\n                      Widgets haben hellblaue Overlays im Bearbeitungsmodus\n                    </p>\n                  )}\n                </div>\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </MainLayout>\n  );\n}"],"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","ignoreList":[]}