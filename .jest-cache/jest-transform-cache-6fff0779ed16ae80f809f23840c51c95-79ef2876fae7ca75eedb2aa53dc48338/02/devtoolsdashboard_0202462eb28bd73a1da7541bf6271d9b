ab9b2288d1cf6e4820db725fdc43438a
/**
 * Advanced Query Performance Dashboard
 * Comprehensive development tools for TanStack Query optimization
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_13uwrfo6ka() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools-dashboard.tsx";
  var hash = "41f7669bfac2573f39e746b939c2391d1a953a6e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools-dashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 41
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 44
        }
      },
      "6": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "7": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "8": {
        start: {
          line: 25,
          column: 15
        },
        end: {
          line: 25,
          column: 31
        }
      },
      "9": {
        start: {
          line: 27,
          column: 24
        },
        end: {
          line: 27,
          column: 57
        }
      },
      "10": {
        start: {
          line: 28,
          column: 50
        },
        end: {
          line: 28,
          column: 76
        }
      },
      "11": {
        start: {
          line: 29,
          column: 48
        },
        end: {
          line: 29,
          column: 74
        }
      },
      "12": {
        start: {
          line: 30,
          column: 32
        },
        end: {
          line: 30,
          column: 67
        }
      },
      "13": {
        start: {
          line: 32,
          column: 28
        },
        end: {
          line: 49,
          column: 6
        }
      },
      "14": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 46,
          column: 16
        }
      },
      "15": {
        start: {
          line: 33,
          column: 66
        },
        end: {
          line: 46,
          column: 13
        }
      },
      "16": {
        start: {
          line: 51,
          column: 25
        },
        end: {
          line: 72,
          column: 6
        }
      },
      "17": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 38
        }
      },
      "18": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "19": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 119
        }
      },
      "20": {
        start: {
          line: 54,
          column: 48
        },
        end: {
          line: 54,
          column: 117
        }
      },
      "21": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 67,
          column: 11
        }
      },
      "22": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 66,
          column: 13
        }
      },
      "23": {
        start: {
          line: 59,
          column: 20
        },
        end: {
          line: 59,
          column: 65
        }
      },
      "24": {
        start: {
          line: 61,
          column: 20
        },
        end: {
          line: 61,
          column: 63
        }
      },
      "25": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 67
        }
      },
      "26": {
        start: {
          line: 65,
          column: 20
        },
        end: {
          line: 65,
          column: 29
        }
      },
      "27": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 103,
          column: 6
        }
      },
      "28": {
        start: {
          line: 75,
          column: 22
        },
        end: {
          line: 75,
          column: 24
        }
      },
      "29": {
        start: {
          line: 76,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "30": {
        start: {
          line: 77,
          column: 27
        },
        end: {
          line: 77,
          column: 88
        }
      },
      "31": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "32": {
        start: {
          line: 79,
          column: 16
        },
        end: {
          line: 85,
          column: 18
        }
      },
      "33": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 34
        }
      },
      "34": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "35": {
        start: {
          line: 88,
          column: 31
        },
        end: {
          line: 88,
          column: 53
        }
      },
      "36": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "37": {
        start: {
          line: 89,
          column: 42
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "38": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "39": {
        start: {
          line: 90,
          column: 44
        },
        end: {
          line: 90,
          column: 68
        }
      },
      "40": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 66
        }
      },
      "41": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 99,
          column: 11
        }
      },
      "42": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 95,
          column: 44
        }
      },
      "43": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 98,
          column: 13
        }
      },
      "44": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 62
        }
      },
      "45": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 21
        }
      },
      "46": {
        start: {
          line: 105,
          column: 4
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "47": {
        start: {
          line: 106,
          column: 8
        },
        end: {
          line: 106,
          column: 56
        }
      },
      "48": {
        start: {
          line: 106,
          column: 49
        },
        end: {
          line: 106,
          column: 56
        }
      },
      "49": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 110,
          column: 27
        }
      },
      "50": {
        start: {
          line: 109,
          column: 12
        },
        end: {
          line: 109,
          column: 49
        }
      },
      "51": {
        start: {
          line: 111,
          column: 8
        },
        end: {
          line: 111,
          column: 43
        }
      },
      "52": {
        start: {
          line: 111,
          column: 19
        },
        end: {
          line: 111,
          column: 42
        }
      },
      "53": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 32
        }
      },
      "54": {
        start: {
          line: 117,
          column: 20
        },
        end: {
          line: 117,
          column: 32
        }
      },
      "55": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 476,
          column: 7
        }
      },
      "56": {
        start: {
          line: 166,
          column: 59
        },
        end: {
          line: 166,
          column: 101
        }
      },
      "57": {
        start: {
          line: 231,
          column: 103
        },
        end: {
          line: 279,
          column: 42
        }
      },
      "58": {
        start: {
          line: 232,
          column: 49
        },
        end: {
          line: 232,
          column: 109
        }
      },
      "59": {
        start: {
          line: 298,
          column: 51
        },
        end: {
          line: 298,
          column: 76
        }
      },
      "60": {
        start: {
          line: 329,
          column: 49
        },
        end: {
          line: 329,
          column: 68
        }
      },
      "61": {
        start: {
          line: 341,
          column: 49
        },
        end: {
          line: 341,
          column: 80
        }
      },
      "62": {
        start: {
          line: 353,
          column: 49
        },
        end: {
          line: 353,
          column: 77
        }
      },
      "63": {
        start: {
          line: 422,
          column: 85
        },
        end: {
          line: 470,
          column: 41
        }
      },
      "64": {
        start: {
          line: 479,
          column: 38
        },
        end: {
          line: 479,
          column: 65
        }
      },
      "65": {
        start: {
          line: 481,
          column: 4
        },
        end: {
          line: 491,
          column: 11
        }
      },
      "66": {
        start: {
          line: 482,
          column: 30
        },
        end: {
          line: 488,
          column: 9
        }
      },
      "67": {
        start: {
          line: 484,
          column: 12
        },
        end: {
          line: 487,
          column: 13
        }
      },
      "68": {
        start: {
          line: 485,
          column: 16
        },
        end: {
          line: 485,
          column: 39
        }
      },
      "69": {
        start: {
          line: 486,
          column: 16
        },
        end: {
          line: 486,
          column: 44
        }
      },
      "70": {
        start: {
          line: 486,
          column: 37
        },
        end: {
          line: 486,
          column: 42
        }
      },
      "71": {
        start: {
          line: 489,
          column: 8
        },
        end: {
          line: 489,
          column: 58
        }
      },
      "72": {
        start: {
          line: 490,
          column: 8
        },
        end: {
          line: 490,
          column: 72
        }
      },
      "73": {
        start: {
          line: 490,
          column: 19
        },
        end: {
          line: 490,
          column: 71
        }
      },
      "74": {
        start: {
          line: 492,
          column: 4
        },
        end: {
          line: 497,
          column: 6
        }
      },
      "75": {
        start: {
          line: 494,
          column: 20
        },
        end: {
          line: 494,
          column: 47
        }
      },
      "76": {
        start: {
          line: 494,
          column: 41
        },
        end: {
          line: 494,
          column: 46
        }
      },
      "77": {
        start: {
          line: 495,
          column: 18
        },
        end: {
          line: 495,
          column: 36
        }
      },
      "78": {
        start: {
          line: 496,
          column: 18
        },
        end: {
          line: 496,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 37
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 40
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "QueryPerformanceDashboard",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 34
          }
        },
        loc: {
          start: {
            line: 26,
            column: 59
          },
          end: {
            line: 477,
            column: 1
          }
        },
        line: 26
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 32,
            column: 48
          },
          end: {
            line: 32,
            column: 49
          }
        },
        loc: {
          start: {
            line: 32,
            column: 52
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 32
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 56
          },
          end: {
            line: 33,
            column: 57
          }
        },
        loc: {
          start: {
            line: 33,
            column: 66
          },
          end: {
            line: 46,
            column: 13
          }
        },
        line: 33
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 51,
            column: 45
          },
          end: {
            line: 51,
            column: 46
          }
        },
        loc: {
          start: {
            line: 51,
            column: 49
          },
          end: {
            line: 68,
            column: 5
          }
        },
        line: 51
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 54,
            column: 39
          },
          end: {
            line: 54,
            column: 40
          }
        },
        loc: {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 117
          }
        },
        line: 54
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 56,
            column: 29
          },
          end: {
            line: 56,
            column: 30
          }
        },
        loc: {
          start: {
            line: 56,
            column: 37
          },
          end: {
            line: 67,
            column: 9
          }
        },
        line: 56
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 74,
            column: 44
          },
          end: {
            line: 74,
            column: 45
          }
        },
        loc: {
          start: {
            line: 74,
            column: 48
          },
          end: {
            line: 101,
            column: 5
          }
        },
        line: 74
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 76,
            column: 32
          },
          end: {
            line: 76,
            column: 33
          }
        },
        loc: {
          start: {
            line: 76,
            column: 41
          },
          end: {
            line: 92,
            column: 9
          }
        },
        line: 76
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 94,
            column: 35
          },
          end: {
            line: 94,
            column: 36
          }
        },
        loc: {
          start: {
            line: 94,
            column: 45
          },
          end: {
            line: 99,
            column: 9
          }
        },
        line: 94
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 105,
            column: 27
          }
        },
        loc: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 112,
            column: 5
          }
        },
        line: 105
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 107,
            column: 37
          },
          end: {
            line: 107,
            column: 38
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 110,
            column: 9
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 111,
            column: 15
          },
          end: {
            line: 111,
            column: 16
          }
        },
        loc: {
          start: {
            line: 111,
            column: 19
          },
          end: {
            line: 111,
            column: 42
          }
        },
        line: 111
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 166,
            column: 54
          },
          end: {
            line: 166,
            column: 55
          }
        },
        loc: {
          start: {
            line: 166,
            column: 59
          },
          end: {
            line: 166,
            column: 101
          }
        },
        line: 166
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 231,
            column: 70
          },
          end: {
            line: 231,
            column: 71
          }
        },
        loc: {
          start: {
            line: 231,
            column: 103
          },
          end: {
            line: 279,
            column: 42
          }
        },
        line: 231
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 232,
            column: 45
          },
          end: {
            line: 232,
            column: 46
          }
        },
        loc: {
          start: {
            line: 232,
            column: 49
          },
          end: {
            line: 232,
            column: 109
          }
        },
        line: 232
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 298,
            column: 46
          },
          end: {
            line: 298,
            column: 47
          }
        },
        loc: {
          start: {
            line: 298,
            column: 51
          },
          end: {
            line: 298,
            column: 76
          }
        },
        line: 298
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 329,
            column: 45
          },
          end: {
            line: 329,
            column: 46
          }
        },
        loc: {
          start: {
            line: 329,
            column: 49
          },
          end: {
            line: 329,
            column: 68
          }
        },
        line: 329
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 341,
            column: 45
          },
          end: {
            line: 341,
            column: 46
          }
        },
        loc: {
          start: {
            line: 341,
            column: 49
          },
          end: {
            line: 341,
            column: 80
          }
        },
        line: 341
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 353,
            column: 45
          },
          end: {
            line: 353,
            column: 46
          }
        },
        loc: {
          start: {
            line: 353,
            column: 49
          },
          end: {
            line: 353,
            column: 77
          }
        },
        line: 353
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 422,
            column: 55
          },
          end: {
            line: 422,
            column: 56
          }
        },
        loc: {
          start: {
            line: 422,
            column: 85
          },
          end: {
            line: 470,
            column: 41
          }
        },
        line: 422
      },
      "23": {
        name: "useQueryPerformanceDashboard",
        decl: {
          start: {
            line: 478,
            column: 9
          },
          end: {
            line: 478,
            column: 37
          }
        },
        loc: {
          start: {
            line: 478,
            column: 40
          },
          end: {
            line: 498,
            column: 1
          }
        },
        line: 478
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 481,
            column: 26
          },
          end: {
            line: 481,
            column: 27
          }
        },
        loc: {
          start: {
            line: 481,
            column: 30
          },
          end: {
            line: 491,
            column: 5
          }
        },
        line: 481
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 482,
            column: 30
          },
          end: {
            line: 482,
            column: 31
          }
        },
        loc: {
          start: {
            line: 482,
            column: 39
          },
          end: {
            line: 488,
            column: 9
          }
        },
        line: 482
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 486,
            column: 29
          },
          end: {
            line: 486,
            column: 30
          }
        },
        loc: {
          start: {
            line: 486,
            column: 37
          },
          end: {
            line: 486,
            column: 42
          }
        },
        line: 486
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 490,
            column: 15
          },
          end: {
            line: 490,
            column: 16
          }
        },
        loc: {
          start: {
            line: 490,
            column: 19
          },
          end: {
            line: 490,
            column: 71
          }
        },
        line: 490
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 494,
            column: 16
          },
          end: {
            line: 494,
            column: 17
          }
        },
        loc: {
          start: {
            line: 494,
            column: 20
          },
          end: {
            line: 494,
            column: 47
          }
        },
        line: 494
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 494,
            column: 33
          },
          end: {
            line: 494,
            column: 34
          }
        },
        loc: {
          start: {
            line: 494,
            column: 41
          },
          end: {
            line: 494,
            column: 46
          }
        },
        line: 494
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 495,
            column: 14
          },
          end: {
            line: 495,
            column: 15
          }
        },
        loc: {
          start: {
            line: 495,
            column: 18
          },
          end: {
            line: 495,
            column: 36
          }
        },
        line: 495
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 496,
            column: 14
          },
          end: {
            line: 496,
            column: 15
          }
        },
        loc: {
          start: {
            line: 496,
            column: 18
          },
          end: {
            line: 496,
            column: 37
          }
        },
        line: 496
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 8
          },
          end: {
            line: 55,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "1": {
        loc: {
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 117
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 48
          },
          end: {
            line: 54,
            column: 77
          }
        }, {
          start: {
            line: 54,
            column: 81
          },
          end: {
            line: 54,
            column: 117
          }
        }],
        line: 54
      },
      "2": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 66,
            column: 13
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 58,
            column: 16
          },
          end: {
            line: 59,
            column: 65
          }
        }, {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 61,
            column: 63
          }
        }, {
          start: {
            line: 62,
            column: 16
          },
          end: {
            line: 63,
            column: 67
          }
        }, {
          start: {
            line: 64,
            column: 16
          },
          end: {
            line: 65,
            column: 29
          }
        }],
        line: 57
      },
      "3": {
        loc: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 39
          }
        }, {
          start: {
            line: 63,
            column: 43
          },
          end: {
            line: 63,
            column: 44
          }
        }],
        line: 63
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 49
          },
          end: {
            line: 63,
            column: 60
          }
        }, {
          start: {
            line: 63,
            column: 64
          },
          end: {
            line: 63,
            column: 65
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 77,
            column: 27
          },
          end: {
            line: 77,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 59
          },
          end: {
            line: 77,
            column: 76
          }
        }, {
          start: {
            line: 77,
            column: 79
          },
          end: {
            line: 77,
            column: 88
          }
        }],
        line: 77
      },
      "6": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 78
      },
      "7": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 88,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "8": {
        loc: {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 89,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "9": {
        loc: {
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 12
          },
          end: {
            line: 90,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 98,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 16
          },
          end: {
            line: 96,
            column: 26
          }
        }, {
          start: {
            line: 96,
            column: 30
          },
          end: {
            line: 96,
            column: 50
          }
        }],
        line: 96
      },
      "12": {
        loc: {
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 56
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 8
          },
          end: {
            line: 106,
            column: 56
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "13": {
        loc: {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 47
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 106,
            column: 22
          }
        }, {
          start: {
            line: 106,
            column: 26
          },
          end: {
            line: 106,
            column: 47
          }
        }],
        line: 106
      },
      "14": {
        loc: {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 32
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 32
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 117
      },
      "15": {
        loc: {
          start: {
            line: 232,
            column: 67
          },
          end: {
            line: 232,
            column: 108
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 232,
            column: 95
          },
          end: {
            line: 232,
            column: 99
          }
        }, {
          start: {
            line: 232,
            column: 102
          },
          end: {
            line: 232,
            column: 108
          }
        }],
        line: 232
      },
      "16": {
        loc: {
          start: {
            line: 234,
            column: 52
          },
          end: {
            line: 234,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 234,
            column: 80
          },
          end: {
            line: 234,
            column: 86
          }
        }, {
          start: {
            line: 234,
            column: 89
          },
          end: {
            line: 234,
            column: 95
          }
        }],
        line: 234
      },
      "17": {
        loc: {
          start: {
            line: 238,
            column: 48
          },
          end: {
            line: 238,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 76
          },
          end: {
            line: 238,
            column: 92
          }
        }, {
          start: {
            line: 238,
            column: 95
          },
          end: {
            line: 238,
            column: 111
          }
        }],
        line: 238
      },
      "18": {
        loc: {
          start: {
            line: 378,
            column: 32
          },
          end: {
            line: 378,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 378,
            column: 32
          },
          end: {
            line: 378,
            column: 46
          }
        }, {
          start: {
            line: 378,
            column: 50
          },
          end: {
            line: 378,
            column: 72
          }
        }],
        line: 378
      },
      "19": {
        loc: {
          start: {
            line: 429,
            column: 52
          },
          end: {
            line: 429,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 429,
            column: 70
          },
          end: {
            line: 429,
            column: 76
          }
        }, {
          start: {
            line: 429,
            column: 79
          },
          end: {
            line: 429,
            column: 85
          }
        }],
        line: 429
      },
      "20": {
        loc: {
          start: {
            line: 444,
            column: 55
          },
          end: {
            line: 444,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 82
          },
          end: {
            line: 444,
            column: 91
          }
        }, {
          start: {
            line: 444,
            column: 94
          },
          end: {
            line: 444,
            column: 183
          }
        }],
        line: 444
      },
      "21": {
        loc: {
          start: {
            line: 444,
            column: 94
          },
          end: {
            line: 444,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 123
          },
          end: {
            line: 444,
            column: 132
          }
        }, {
          start: {
            line: 444,
            column: 135
          },
          end: {
            line: 444,
            column: 183
          }
        }],
        line: 444
      },
      "22": {
        loc: {
          start: {
            line: 444,
            column: 135
          },
          end: {
            line: 444,
            column: 183
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 164
          },
          end: {
            line: 444,
            column: 173
          }
        }, {
          start: {
            line: 444,
            column: 176
          },
          end: {
            line: 444,
            column: 183
          }
        }],
        line: 444
      },
      "23": {
        loc: {
          start: {
            line: 453,
            column: 55
          },
          end: {
            line: 453,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 453,
            column: 84
          },
          end: {
            line: 453,
            column: 93
          }
        }, {
          start: {
            line: 453,
            column: 96
          },
          end: {
            line: 453,
            column: 102
          }
        }],
        line: 453
      },
      "24": {
        loc: {
          start: {
            line: 462,
            column: 55
          },
          end: {
            line: 462,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 462,
            column: 71
          },
          end: {
            line: 462,
            column: 80
          }
        }, {
          start: {
            line: 462,
            column: 83
          },
          end: {
            line: 462,
            column: 89
          }
        }],
        line: 462
      },
      "25": {
        loc: {
          start: {
            line: 464,
            column: 54
          },
          end: {
            line: 464,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 464,
            column: 70
          },
          end: {
            line: 464,
            column: 75
          }
        }, {
          start: {
            line: 464,
            column: 78
          },
          end: {
            line: 464,
            column: 82
          }
        }],
        line: 464
      },
      "26": {
        loc: {
          start: {
            line: 467,
            column: 54
          },
          end: {
            line: 467,
            column: 140
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 467,
            column: 80
          },
          end: {
            line: 467,
            column: 130
          }
        }, {
          start: {
            line: 467,
            column: 133
          },
          end: {
            line: 467,
            column: 140
          }
        }],
        line: 467
      },
      "27": {
        loc: {
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 484,
            column: 12
          },
          end: {
            line: 487,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 484
      },
      "28": {
        loc: {
          start: {
            line: 484,
            column: 16
          },
          end: {
            line: 484,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 484,
            column: 17
          },
          end: {
            line: 484,
            column: 30
          }
        }, {
          start: {
            line: 484,
            column: 34
          },
          end: {
            line: 484,
            column: 47
          }
        }, {
          start: {
            line: 484,
            column: 52
          },
          end: {
            line: 484,
            column: 66
          }
        }, {
          start: {
            line: 484,
            column: 70
          },
          end: {
            line: 484,
            column: 87
          }
        }],
        line: 484
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools-dashboard.tsx"],
      sourcesContent: ["/**\n * Advanced Query Performance Dashboard\n * Comprehensive development tools for TanStack Query optimization\n */\n\n'use client';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useEffect, useState, useMemo } from 'react';\n\n\ninterface QueryPerformanceData {\n  queryKey: readonly unknown[];\n  status: 'pending' | 'error' | 'success';\n  fetchStatus: 'fetching' | 'paused' | 'idle';\n  isStale: boolean;\n  dataUpdateCount: number;\n  errorUpdateCount: number;\n  observersCount: number;\n  dataUpdatedAt: number;\n  lastFetchTime?: number;\n  cacheTime?: number;\n  staleTime?: number;\n}\n\ninterface DashboardProps {\n  isVisible: boolean;\n  onClose: () => void;\n}\n\nexport function QueryPerformanceDashboard({ isVisible, onClose }: DashboardProps): React.ReactElement | null {\n  const queryClient = useQueryClient();\n  const [refreshInterval, setRefreshInterval] = useState(1000);\n  const [selectedDomain, setSelectedDomain] = useState<string | null>(null);\n  const [sortBy, setSortBy] = useState<'updateCount' | 'observers' | 'staleTime'>('updateCount');\n\n  // Performance data collection\n  const performanceData = useMemo((): QueryPerformanceData[] => {\n    return queryClient.getQueryCache().getAll().map(query => ({\n      queryKey: query.queryKey,\n      status: query.state.status,\n      fetchStatus: query.state.fetchStatus,\n      isStale: query.isStale(),\n      dataUpdateCount: query.state.dataUpdateCount,\n      errorUpdateCount: query.state.errorUpdateCount,\n      observersCount: query.getObserversCount(),\n      dataUpdatedAt: query.state.dataUpdatedAt,\n      lastFetchTime: query.state.dataUpdatedAt,\n      // Note: These are internal and may not be available\n      cacheTime: (query as unknown as Record<string, unknown>).cacheTime as number,\n      staleTime: (query as unknown as Record<string, unknown>).staleTime as number,\n    }));\n  }, [queryClient]);\n\n  // Filtered and sorted data\n  const filteredData = useMemo(() => {\n    let filtered = performanceData;\n    \n    if (selectedDomain) {\n      filtered = filtered.filter(query => \n        Array.isArray(query.queryKey) && query.queryKey[0] === selectedDomain\n      );\n    }\n\n    return filtered.sort((a, b) => {\n      switch (sortBy) {\n        case 'updateCount':\n          return b.dataUpdateCount - a.dataUpdateCount;\n        case 'observers':\n          return b.observersCount - a.observersCount;\n        case 'staleTime':\n          return (b.staleTime || 0) - (a.staleTime || 0);\n        default:\n          return 0;\n      }\n    });\n  }, [performanceData, selectedDomain, sortBy]);\n\n  // Domain statistics\n  const domainStats = useMemo(() => {\n    const stats: Record<string, {\n      total: number;\n      stale: number;\n      errors: number;\n      loading: number;\n      avgUpdateCount: number;\n    }> = {};\n\n    performanceData.forEach(query => {\n      const domain = Array.isArray(query.queryKey) ? query.queryKey[0] as string : 'unknown';\n      \n      if (!stats[domain]) {\n        stats[domain] = {\n          total: 0,\n          stale: 0,\n          errors: 0,\n          loading: 0,\n          avgUpdateCount: 0,\n        };\n      }\n\n      stats[domain].total++;\n      if (query.isStale) stats[domain].stale++;\n      if (query.status === 'error') stats[domain].errors++;\n      if (query.status === 'pending') stats[domain].loading++;\n      stats[domain].avgUpdateCount += query.dataUpdateCount;\n    });\n\n    // Calculate averages\n    Object.keys(stats).forEach(domain => {\n      const domainStat = stats[domain];\n      if (domainStat && domainStat.total > 0) {\n        domainStat.avgUpdateCount /= domainStat.total;\n      }\n    });\n\n    return stats;\n  }, [performanceData]);\n\n  // Auto-refresh logic\n  useEffect(() => {\n    if (!isVisible || refreshInterval === 0) return;\n\n    const interval = setInterval((): void => {\n      // Force re-render by accessing cache\n      queryClient.getQueryCache().getAll();\n    }, refreshInterval);\n\n    return (): void => clearInterval(interval);\n  }, [isVisible, refreshInterval, queryClient]);\n\n  if (!isVisible) return null;\n\n  return (\n    <div style={{\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      background: 'rgba(0, 0, 0, 0.95)',\n      color: 'white',\n      zIndex: 10000,\n      overflow: 'auto',\n      fontFamily: 'monospace',\n      fontSize: '12px',\n    }}>\n      <div style={{ padding: '20px' }}>\n        {/* Header */}\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center',\n          marginBottom: '20px',\n          borderBottom: '1px solid #333',\n          paddingBottom: '10px',\n        }}>\n          <h2 style={{ margin: 0, fontSize: '18px' }}>\n            \uD83D\uDE80 Query Performance Dashboard\n          </h2>\n          <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n            <label>\n              Refresh:\n              <select \n                value={refreshInterval}\n                onChange={(e) => setRefreshInterval(Number(e.target.value))}\n                style={{ marginLeft: '5px', background: '#333', color: 'white', border: 'none' }}\n              >\n                <option value={0}>Off</option>\n                <option value={500}>500ms</option>\n                <option value={1000}>1s</option>\n                <option value={2000}>2s</option>\n                <option value={5000}>5s</option>\n              </select>\n            </label>\n            <button\n              onClick={onClose}\n              style={{\n                background: '#666',\n                color: 'white',\n                border: 'none',\n                padding: '8px 16px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n\n        {/* Domain Overview */}\n        <div style={{ marginBottom: '20px' }}>\n          <h3 style={{ margin: '0 0 10px 0' }}>Domain Overview</h3>\n          <div style={{ \n            display: 'grid', \n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: '10px',\n          }}>\n            {Object.entries(domainStats).map(([domain, stats]) => (\n              <div \n                key={domain}\n                onClick={() => setSelectedDomain(selectedDomain === domain ? null : domain)}\n                style={{\n                  background: selectedDomain === domain ? '#444' : '#222',\n                  padding: '10px',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                  border: selectedDomain === domain ? '2px solid #666' : '1px solid #333',\n                }}\n              >\n                <div style={{ fontWeight: 'bold', marginBottom: '5px' }}>{domain}</div>\n                <div>Total: {stats.total}</div>\n                <div>Stale: {stats.stale}</div>\n                <div>Errors: {stats.errors}</div>\n                <div>Loading: {stats.loading}</div>\n                <div>Avg Updates: {stats.avgUpdateCount.toFixed(1)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Controls */}\n        <div style={{ \n          display: 'flex', \n          gap: '20px', \n          marginBottom: '20px',\n          padding: '10px',\n          background: '#222',\n          borderRadius: '4px',\n        }}>\n          <label>\n            Sort by:\n            <select \n              value={sortBy}\n              onChange={(e) => setSortBy(e.target.value as typeof sortBy)}\n              style={{ marginLeft: '5px', background: '#333', color: 'white', border: 'none' }}\n            >\n              <option value=\"updateCount\">Update Count</option>\n              <option value=\"observers\">Observers</option>\n              <option value=\"staleTime\">Stale Time</option>\n            </select>\n          </label>\n          \n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={() => queryClient.clear()}\n              style={{\n                background: '#d32f2f',\n                color: 'white',\n                border: 'none',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Clear All\n            </button>\n            <button\n              onClick={() => queryClient.invalidateQueries()}\n              style={{\n                background: '#f57c00',\n                color: 'white',\n                border: 'none',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Invalidate All\n            </button>\n            <button\n              onClick={() => queryClient.refetchQueries()}\n              style={{\n                background: '#388e3c',\n                color: 'white',\n                border: 'none',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Refetch All\n            </button>\n          </div>\n        </div>\n\n        {/* Query List */}\n        <div>\n          <h3 style={{ margin: '0 0 10px 0' }}>\n            Query Details ({filteredData.length} queries)\n            {selectedDomain && ` - ${selectedDomain}`}\n          </h3>\n          <div style={{\n            display: 'grid',\n            gridTemplateColumns: '1fr 100px 80px 60px 60px 80px 120px',\n            gap: '10px',\n            alignItems: 'center',\n            padding: '10px',\n            background: '#333',\n            borderRadius: '4px',\n            marginBottom: '5px',\n            fontWeight: 'bold',\n          }}>\n            <div>Query Key</div>\n            <div>Status</div>\n            <div>Updates</div>\n            <div>Errors</div>\n            <div>Obs</div>\n            <div>Stale</div>\n            <div>Last Updated</div>\n          </div>\n          \n          <div style={{ maxHeight: '400px', overflow: 'auto' }}>\n            {filteredData.map((query, index) => (\n              <div \n                key={index}\n                style={{\n                  display: 'grid',\n                  gridTemplateColumns: '1fr 100px 80px 60px 60px 80px 120px',\n                  gap: '10px',\n                  alignItems: 'center',\n                  padding: '8px 10px',\n                  background: index % 2 === 0 ? '#222' : '#111',\n                  borderRadius: '2px',\n                  fontSize: '11px',\n                }}\n              >\n                <div style={{ \n                  overflow: 'hidden', \n                  textOverflow: 'ellipsis',\n                  fontFamily: 'monospace',\n                }}>\n                  {JSON.stringify(query.queryKey)}\n                </div>\n                <div style={{\n                  color: query.status === 'error' ? '#f44336' :\n                        query.status === 'pending' ? '#ff9800' :\n                        query.status === 'success' ? '#4caf50' : 'white'\n                }}>\n                  {query.status}\n                </div>\n                <div>{query.dataUpdateCount}</div>\n                <div style={{ color: query.errorUpdateCount > 0 ? '#f44336' : '#666' }}>\n                  {query.errorUpdateCount}\n                </div>\n                <div>{query.observersCount}</div>\n                <div style={{ color: query.isStale ? '#ff9800' : '#666' }}>\n                  {query.isStale ? 'Yes' : 'No'}\n                </div>\n                <div>\n                  {query.dataUpdatedAt > 0 \n                    ? new Date(query.dataUpdatedAt).toLocaleTimeString()\n                    : 'Never'\n                  }\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Hook to control dashboard visibility\nexport function useQueryPerformanceDashboard(): {\n  isVisible: boolean;\n  toggle: () => void;\n  show: () => void;\n  hide: () => void;\n} {\n  const [isVisible, setIsVisible] = useState(false);\n\n  // Keyboard shortcut to toggle dashboard\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent): void => {\n      // Ctrl/Cmd + Shift + P to toggle performance dashboard\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'P') {\n        event.preventDefault();\n        setIsVisible(prev => !prev);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return (): void => window.removeEventListener('keydown', handleKeyDown);\n  }, []);\n\n  return {\n    isVisible,\n    toggle: () => setIsVisible(prev => !prev),\n    show: () => setIsVisible(true),\n    hide: () => setIsVisible(false),\n  };\n}"],
      names: ["QueryPerformanceDashboard", "useQueryPerformanceDashboard", "isVisible", "onClose", "queryClient", "useQueryClient", "refreshInterval", "setRefreshInterval", "useState", "selectedDomain", "setSelectedDomain", "sortBy", "setSortBy", "performanceData", "useMemo", "getQueryCache", "getAll", "map", "query", "queryKey", "status", "state", "fetchStatus", "isStale", "dataUpdateCount", "errorUpdateCount", "observersCount", "getObserversCount", "dataUpdatedAt", "lastFetchTime", "cacheTime", "staleTime", "filteredData", "filtered", "filter", "Array", "isArray", "sort", "a", "b", "domainStats", "stats", "forEach", "domain", "total", "stale", "errors", "loading", "avgUpdateCount", "Object", "keys", "domainStat", "useEffect", "interval", "setInterval", "clearInterval", "div", "style", "position", "top", "left", "right", "bottom", "background", "color", "zIndex", "overflow", "fontFamily", "fontSize", "padding", "display", "justifyContent", "alignItems", "marginBottom", "borderBottom", "paddingBottom", "h2", "margin", "gap", "label", "select", "value", "onChange", "e", "Number", "target", "marginLeft", "border", "option", "button", "onClick", "borderRadius", "cursor", "h3", "gridTemplateColumns", "entries", "fontWeight", "toFixed", "clear", "invalidateQueries", "refetchQueries", "length", "maxHeight", "index", "textOverflow", "JSON", "stringify", "Date", "toLocaleTimeString", "setIsVisible", "handleKeyDown", "event", "ctrlKey", "metaKey", "shiftKey", "key", "preventDefault", "prev", "window", "addEventListener", "removeEventListener", "toggle", "show", "hide"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "41f7669bfac2573f39e746b939c2391d1a953a6e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_13uwrfo6ka = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_13uwrfo6ka();
cov_13uwrfo6ka().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_13uwrfo6ka().f[0]++;
  cov_13uwrfo6ka().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_13uwrfo6ka().s[3]++;
_export(exports, {
  get QueryPerformanceDashboard() {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[1]++;
    cov_13uwrfo6ka().s[4]++;
    return QueryPerformanceDashboard;
  },
  get useQueryPerformanceDashboard() {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[2]++;
    cov_13uwrfo6ka().s[5]++;
    return useQueryPerformanceDashboard;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_13uwrfo6ka().s[6]++, require("react/jsx-runtime"));
const _reactquery =
/* istanbul ignore next */
(cov_13uwrfo6ka().s[7]++, require("@tanstack/react-query"));
const _react =
/* istanbul ignore next */
(cov_13uwrfo6ka().s[8]++, require("react"));
function QueryPerformanceDashboard({
  isVisible,
  onClose
}) {
  /* istanbul ignore next */
  cov_13uwrfo6ka().f[3]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[9]++, (0, _reactquery.useQueryClient)());
  const [refreshInterval, setRefreshInterval] =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[10]++, (0, _react.useState)(1000));
  const [selectedDomain, setSelectedDomain] =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[11]++, (0, _react.useState)(null));
  const [sortBy, setSortBy] =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[12]++, (0, _react.useState)('updateCount'));
  // Performance data collection
  const performanceData =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[13]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[4]++;
    cov_13uwrfo6ka().s[14]++;
    return queryClient.getQueryCache().getAll().map(query => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[5]++;
      cov_13uwrfo6ka().s[15]++;
      return {
        queryKey: query.queryKey,
        status: query.state.status,
        fetchStatus: query.state.fetchStatus,
        isStale: query.isStale(),
        dataUpdateCount: query.state.dataUpdateCount,
        errorUpdateCount: query.state.errorUpdateCount,
        observersCount: query.getObserversCount(),
        dataUpdatedAt: query.state.dataUpdatedAt,
        lastFetchTime: query.state.dataUpdatedAt,
        // Note: These are internal and may not be available
        cacheTime: query.cacheTime,
        staleTime: query.staleTime
      };
    });
  }, [queryClient]));
  // Filtered and sorted data
  const filteredData =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[16]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[6]++;
    let filtered =
    /* istanbul ignore next */
    (cov_13uwrfo6ka().s[17]++, performanceData);
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[18]++;
    if (selectedDomain) {
      /* istanbul ignore next */
      cov_13uwrfo6ka().b[0][0]++;
      cov_13uwrfo6ka().s[19]++;
      filtered = filtered.filter(query => {
        /* istanbul ignore next */
        cov_13uwrfo6ka().f[7]++;
        cov_13uwrfo6ka().s[20]++;
        return /* istanbul ignore next */(cov_13uwrfo6ka().b[1][0]++, Array.isArray(query.queryKey)) &&
        /* istanbul ignore next */
        (cov_13uwrfo6ka().b[1][1]++, query.queryKey[0] === selectedDomain);
      });
    } else
    /* istanbul ignore next */
    {
      cov_13uwrfo6ka().b[0][1]++;
    }
    cov_13uwrfo6ka().s[21]++;
    return filtered.sort((a, b) => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[8]++;
      cov_13uwrfo6ka().s[22]++;
      switch (sortBy) {
        case 'updateCount':
          /* istanbul ignore next */
          cov_13uwrfo6ka().b[2][0]++;
          cov_13uwrfo6ka().s[23]++;
          return b.dataUpdateCount - a.dataUpdateCount;
        case 'observers':
          /* istanbul ignore next */
          cov_13uwrfo6ka().b[2][1]++;
          cov_13uwrfo6ka().s[24]++;
          return b.observersCount - a.observersCount;
        case 'staleTime':
          /* istanbul ignore next */
          cov_13uwrfo6ka().b[2][2]++;
          cov_13uwrfo6ka().s[25]++;
          return (
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[3][0]++, b.staleTime) ||
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[3][1]++, 0)) - (
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[4][0]++, a.staleTime) ||
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[4][1]++, 0));
        default:
          /* istanbul ignore next */
          cov_13uwrfo6ka().b[2][3]++;
          cov_13uwrfo6ka().s[26]++;
          return 0;
      }
    });
  }, [performanceData, selectedDomain, sortBy]));
  // Domain statistics
  const domainStats =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[27]++, (0, _react.useMemo)(() => {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[9]++;
    const stats =
    /* istanbul ignore next */
    (cov_13uwrfo6ka().s[28]++, {});
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[29]++;
    performanceData.forEach(query => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[10]++;
      const domain =
      /* istanbul ignore next */
      (cov_13uwrfo6ka().s[30]++, Array.isArray(query.queryKey) ?
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[5][0]++, query.queryKey[0]) :
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[5][1]++, 'unknown'));
      /* istanbul ignore next */
      cov_13uwrfo6ka().s[31]++;
      if (!stats[domain]) {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[6][0]++;
        cov_13uwrfo6ka().s[32]++;
        stats[domain] = {
          total: 0,
          stale: 0,
          errors: 0,
          loading: 0,
          avgUpdateCount: 0
        };
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[6][1]++;
      }
      cov_13uwrfo6ka().s[33]++;
      stats[domain].total++;
      /* istanbul ignore next */
      cov_13uwrfo6ka().s[34]++;
      if (query.isStale) {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[7][0]++;
        cov_13uwrfo6ka().s[35]++;
        stats[domain].stale++;
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[7][1]++;
      }
      cov_13uwrfo6ka().s[36]++;
      if (query.status === 'error') {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[8][0]++;
        cov_13uwrfo6ka().s[37]++;
        stats[domain].errors++;
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[8][1]++;
      }
      cov_13uwrfo6ka().s[38]++;
      if (query.status === 'pending') {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[9][0]++;
        cov_13uwrfo6ka().s[39]++;
        stats[domain].loading++;
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[9][1]++;
      }
      cov_13uwrfo6ka().s[40]++;
      stats[domain].avgUpdateCount += query.dataUpdateCount;
    });
    // Calculate averages
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[41]++;
    Object.keys(stats).forEach(domain => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[11]++;
      const domainStat =
      /* istanbul ignore next */
      (cov_13uwrfo6ka().s[42]++, stats[domain]);
      /* istanbul ignore next */
      cov_13uwrfo6ka().s[43]++;
      if (
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[11][0]++, domainStat) &&
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[11][1]++, domainStat.total > 0)) {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[10][0]++;
        cov_13uwrfo6ka().s[44]++;
        domainStat.avgUpdateCount /= domainStat.total;
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[10][1]++;
      }
    });
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[45]++;
    return stats;
  }, [performanceData]));
  // Auto-refresh logic
  /* istanbul ignore next */
  cov_13uwrfo6ka().s[46]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[12]++;
    cov_13uwrfo6ka().s[47]++;
    if (
    /* istanbul ignore next */
    (cov_13uwrfo6ka().b[13][0]++, !isVisible) ||
    /* istanbul ignore next */
    (cov_13uwrfo6ka().b[13][1]++, refreshInterval === 0)) {
      /* istanbul ignore next */
      cov_13uwrfo6ka().b[12][0]++;
      cov_13uwrfo6ka().s[48]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_13uwrfo6ka().b[12][1]++;
    }
    const interval =
    /* istanbul ignore next */
    (cov_13uwrfo6ka().s[49]++, setInterval(() => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[13]++;
      cov_13uwrfo6ka().s[50]++;
      // Force re-render by accessing cache
      queryClient.getQueryCache().getAll();
    }, refreshInterval));
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[51]++;
    return () => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[14]++;
      cov_13uwrfo6ka().s[52]++;
      return clearInterval(interval);
    };
  }, [isVisible, refreshInterval, queryClient]);
  /* istanbul ignore next */
  cov_13uwrfo6ka().s[53]++;
  if (!isVisible) {
    /* istanbul ignore next */
    cov_13uwrfo6ka().b[14][0]++;
    cov_13uwrfo6ka().s[54]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_13uwrfo6ka().b[14][1]++;
  }
  cov_13uwrfo6ka().s[55]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    style: {
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      background: 'rgba(0, 0, 0, 0.95)',
      color: 'white',
      zIndex: 10000,
      overflow: 'auto',
      fontFamily: 'monospace',
      fontSize: '12px'
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      style: {
        padding: '20px'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        style: {
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '20px',
          borderBottom: '1px solid #333',
          paddingBottom: '10px'
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h2", {
          style: {
            margin: 0,
            fontSize: '18px'
          },
          children: "\uD83D\uDE80 Query Performance Dashboard"
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          style: {
            display: 'flex',
            gap: '10px',
            alignItems: 'center'
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
            children: ["Refresh:", /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
              value: refreshInterval,
              onChange: e => {
                /* istanbul ignore next */
                cov_13uwrfo6ka().f[15]++;
                cov_13uwrfo6ka().s[56]++;
                return setRefreshInterval(Number(e.target.value));
              },
              style: {
                marginLeft: '5px',
                background: '#333',
                color: 'white',
                border: 'none'
              },
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: 0,
                children: "Off"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: 500,
                children: "500ms"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: 1000,
                children: "1s"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: 2000,
                children: "2s"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
                value: 5000,
                children: "5s"
              })]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: onClose,
            style: {
              background: '#666',
              color: 'white',
              border: 'none',
              padding: '8px 16px',
              borderRadius: '4px',
              cursor: 'pointer'
            },
            children: "Close"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        style: {
          marginBottom: '20px'
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          style: {
            margin: '0 0 10px 0'
          },
          children: "Domain Overview"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          style: {
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
            gap: '10px'
          },
          children: Object.entries(domainStats).map(([domain, stats]) => {
            /* istanbul ignore next */
            cov_13uwrfo6ka().f[16]++;
            cov_13uwrfo6ka().s[57]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              onClick: () => {
                /* istanbul ignore next */
                cov_13uwrfo6ka().f[17]++;
                cov_13uwrfo6ka().s[58]++;
                return setSelectedDomain(selectedDomain === domain ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[15][0]++, null) :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[15][1]++, domain));
              },
              style: {
                background: selectedDomain === domain ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[16][0]++, '#444') :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[16][1]++, '#222'),
                padding: '10px',
                borderRadius: '4px',
                cursor: 'pointer',
                border: selectedDomain === domain ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[17][0]++, '2px solid #666') :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[17][1]++, '1px solid #333')
              },
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                style: {
                  fontWeight: 'bold',
                  marginBottom: '5px'
                },
                children: domain
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: ["Total: ", stats.total]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: ["Stale: ", stats.stale]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: ["Errors: ", stats.errors]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: ["Loading: ", stats.loading]
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                children: ["Avg Updates: ", stats.avgUpdateCount.toFixed(1)]
              })]
            }, domain);
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        style: {
          display: 'flex',
          gap: '20px',
          marginBottom: '20px',
          padding: '10px',
          background: '#222',
          borderRadius: '4px'
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
          children: ["Sort by:", /*#__PURE__*/(0, _jsxruntime.jsxs)("select", {
            value: sortBy,
            onChange: e => {
              /* istanbul ignore next */
              cov_13uwrfo6ka().f[18]++;
              cov_13uwrfo6ka().s[59]++;
              return setSortBy(e.target.value);
            },
            style: {
              marginLeft: '5px',
              background: '#333',
              color: 'white',
              border: 'none'
            },
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("option", {
              value: "updateCount",
              children: "Update Count"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
              value: "observers",
              children: "Observers"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("option", {
              value: "staleTime",
              children: "Stale Time"
            })]
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          style: {
            display: 'flex',
            gap: '10px'
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_13uwrfo6ka().f[19]++;
              cov_13uwrfo6ka().s[60]++;
              return queryClient.clear();
            },
            style: {
              background: '#d32f2f',
              color: 'white',
              border: 'none',
              padding: '4px 8px',
              borderRadius: '4px',
              cursor: 'pointer'
            },
            children: "Clear All"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_13uwrfo6ka().f[20]++;
              cov_13uwrfo6ka().s[61]++;
              return queryClient.invalidateQueries();
            },
            style: {
              background: '#f57c00',
              color: 'white',
              border: 'none',
              padding: '4px 8px',
              borderRadius: '4px',
              cursor: 'pointer'
            },
            children: "Invalidate All"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            onClick: () => {
              /* istanbul ignore next */
              cov_13uwrfo6ka().f[21]++;
              cov_13uwrfo6ka().s[62]++;
              return queryClient.refetchQueries();
            },
            style: {
              background: '#388e3c',
              color: 'white',
              border: 'none',
              padding: '4px 8px',
              borderRadius: '4px',
              cursor: 'pointer'
            },
            children: "Refetch All"
          })]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h3", {
          style: {
            margin: '0 0 10px 0'
          },
          children: ["Query Details (", filteredData.length, " queries)",
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[18][0]++, selectedDomain) &&
          /* istanbul ignore next */
          (cov_13uwrfo6ka().b[18][1]++, ` - ${selectedDomain}`)]
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          style: {
            display: 'grid',
            gridTemplateColumns: '1fr 100px 80px 60px 60px 80px 120px',
            gap: '10px',
            alignItems: 'center',
            padding: '10px',
            background: '#333',
            borderRadius: '4px',
            marginBottom: '5px',
            fontWeight: 'bold'
          },
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Query Key"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Status"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Updates"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Errors"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Obs"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Stale"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            children: "Last Updated"
          })]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          style: {
            maxHeight: '400px',
            overflow: 'auto'
          },
          children: filteredData.map((query, index) => {
            /* istanbul ignore next */
            cov_13uwrfo6ka().f[22]++;
            cov_13uwrfo6ka().s[63]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              style: {
                display: 'grid',
                gridTemplateColumns: '1fr 100px 80px 60px 60px 80px 120px',
                gap: '10px',
                alignItems: 'center',
                padding: '8px 10px',
                background: index % 2 === 0 ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[19][0]++, '#222') :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[19][1]++, '#111'),
                borderRadius: '2px',
                fontSize: '11px'
              },
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                style: {
                  overflow: 'hidden',
                  textOverflow: 'ellipsis',
                  fontFamily: 'monospace'
                },
                children: JSON.stringify(query.queryKey)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                style: {
                  color: query.status === 'error' ?
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[20][0]++, '#f44336') :
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[20][1]++, query.status === 'pending' ?
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[21][0]++, '#ff9800') :
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[21][1]++, query.status === 'success' ?
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[22][0]++, '#4caf50') :
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[22][1]++, 'white')))
                },
                children: query.status
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: query.dataUpdateCount
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                style: {
                  color: query.errorUpdateCount > 0 ?
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[23][0]++, '#f44336') :
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[23][1]++, '#666')
                },
                children: query.errorUpdateCount
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: query.observersCount
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                style: {
                  color: query.isStale ?
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[24][0]++, '#ff9800') :
                  /* istanbul ignore next */
                  (cov_13uwrfo6ka().b[24][1]++, '#666')
                },
                children: query.isStale ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[25][0]++, 'Yes') :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[25][1]++, 'No')
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                children: query.dataUpdatedAt > 0 ?
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[26][0]++, new Date(query.dataUpdatedAt).toLocaleTimeString()) :
                /* istanbul ignore next */
                (cov_13uwrfo6ka().b[26][1]++, 'Never')
              })]
            }, index);
          })
        })]
      })]
    })
  });
}
function useQueryPerformanceDashboard() {
  /* istanbul ignore next */
  cov_13uwrfo6ka().f[23]++;
  const [isVisible, setIsVisible] =
  /* istanbul ignore next */
  (cov_13uwrfo6ka().s[64]++, (0, _react.useState)(false));
  // Keyboard shortcut to toggle dashboard
  /* istanbul ignore next */
  cov_13uwrfo6ka().s[65]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_13uwrfo6ka().f[24]++;
    cov_13uwrfo6ka().s[66]++;
    const handleKeyDown = event => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[25]++;
      cov_13uwrfo6ka().s[67]++;
      // Ctrl/Cmd + Shift + P to toggle performance dashboard
      if ((
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[28][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[28][1]++, event.metaKey)) &&
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[28][2]++, event.shiftKey) &&
      /* istanbul ignore next */
      (cov_13uwrfo6ka().b[28][3]++, event.key === 'P')) {
        /* istanbul ignore next */
        cov_13uwrfo6ka().b[27][0]++;
        cov_13uwrfo6ka().s[68]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_13uwrfo6ka().s[69]++;
        setIsVisible(prev => {
          /* istanbul ignore next */
          cov_13uwrfo6ka().f[26]++;
          cov_13uwrfo6ka().s[70]++;
          return !prev;
        });
      } else
      /* istanbul ignore next */
      {
        cov_13uwrfo6ka().b[27][1]++;
      }
    };
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[71]++;
    window.addEventListener('keydown', handleKeyDown);
    /* istanbul ignore next */
    cov_13uwrfo6ka().s[72]++;
    return () => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[27]++;
      cov_13uwrfo6ka().s[73]++;
      return window.removeEventListener('keydown', handleKeyDown);
    };
  }, []);
  /* istanbul ignore next */
  cov_13uwrfo6ka().s[74]++;
  return {
    isVisible,
    toggle: () => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[28]++;
      cov_13uwrfo6ka().s[75]++;
      return setIsVisible(prev => {
        /* istanbul ignore next */
        cov_13uwrfo6ka().f[29]++;
        cov_13uwrfo6ka().s[76]++;
        return !prev;
      });
    },
    show: () => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[30]++;
      cov_13uwrfo6ka().s[77]++;
      return setIsVisible(true);
    },
    hide: () => {
      /* istanbul ignore next */
      cov_13uwrfo6ka().f[31]++;
      cov_13uwrfo6ka().s[78]++;
      return setIsVisible(false);
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,