{"version":3,"names":["cov_nygf0cny9","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","chartBackgroundColors","chartBorderColors","chartColors","chartColorsByUse","createDataset","createMultipleDatasets","default","_default","defaultChartConfig","extendedChartColors","successColor","map","color","_tokens","designTokens","colors","semantic","success","plugins","legend","labels","text","primary","font","family","typography","fontFamily","body","size","weight","padding","usePointStyle","pointStyle","tooltip","backgroundColor","surface","titleColor","bodyColor","secondary","borderColor","border","borderWidth","cornerRadius","displayColors","titleFont","bodyFont","scales","x","grid","borderDash","ticks","tertiary","y","elements","point","radius","hoverRadius","tension","bar","borderRadius","borderSkipped","responsive","maintainAspectRatio","interaction","mode","intersect","label","data","colorIndex","length","slice","pointBackgroundColor","pointBorderColor","pointBorderWidth","fill","datasets","dataset","index","performance","good","warning","danger","comparison","channels","timeSeries","current","previous","trend","colorConfig"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/lib/design/chartColors.ts"],"sourcesContent":["/**\n * DATEN-SEE Chart.js Color Integration\n * Standard chart color palette following design system hierarchy\n */\n\nimport { designTokens } from './tokens';\n\n// Standard Chart Color Palette (dunkel → hell, wie im Design System)\nexport const chartColors = [\n  '#2F4F73', // Primary Blue - Hauptfarbe\n  '#365C83', // Blue Shade 1 - Sekundäre Aktionen\n  '#3D6992', // Blue Shade 2 - Tertiäre Elemente  \n  '#4375A2', // Blue Shade 3 - Akzente\n  '#4A82B1', // Blue Shade 4 - Hellste Variante\n] as const;\n\n// Chart Colors mit 50% Opacity für Backgrounds\nexport const chartBackgroundColors = chartColors.map(color => color + '80');\n\n// Chart Colors mit 80% Opacity für Borders\nexport const chartBorderColors = chartColors.map(color => color + 'CC');\n\n// Success Green für positive Werte\nexport const successColor = designTokens.colors.semantic.success; // #457345\n\n// Extended Chart Palette (für mehr als 5 Datensätze)\nexport const extendedChartColors = [\n  ...chartColors,\n  successColor,     // Grün für zusätzliche positive Daten\n  '#f59e0b',       // Warning orange\n  '#6b7280',       // Neutral gray\n  '#8b5cf6',       // Purple\n  '#ec4899',       // Pink\n] as const;\n\n/**\n * Chart.js Default Configuration\n * Applies DATEN-SEE design system to Chart.js instances\n */\nexport const defaultChartConfig = {\n  plugins: {\n    legend: {\n      labels: {\n        color: designTokens.colors.text.primary, // #3d3d3d - Text Dark\n        font: {\n          family: designTokens.typography.fontFamily.body[0], // Poppins\n          size: 14,\n          weight: '400',\n        },\n        padding: 16,\n        usePointStyle: true,\n        pointStyle: 'circle',\n      },\n    },\n    tooltip: {\n      backgroundColor: designTokens.colors.surface.primary,\n      titleColor: designTokens.colors.text.primary,\n      bodyColor: designTokens.colors.text.secondary,\n      borderColor: designTokens.colors.border.primary,\n      borderWidth: 1,\n      cornerRadius: 8,\n      displayColors: true,\n      titleFont: {\n        family: designTokens.typography.fontFamily.body[0],\n        size: 14,\n        weight: '600', // Poppins SemiBold\n      },\n      bodyFont: {\n        family: designTokens.typography.fontFamily.body[0],\n        size: 13,\n        weight: '400',\n      },\n    },\n  },\n  scales: {\n    x: {\n      grid: {\n        color: designTokens.colors.border.primary,\n        borderDash: [2, 4],\n      },\n      ticks: {\n        color: designTokens.colors.text.tertiary,\n        font: {\n          family: designTokens.typography.fontFamily.body[0],\n          size: 12,\n        },\n      },\n    },\n    y: {\n      grid: {\n        color: designTokens.colors.border.primary,\n        borderDash: [2, 4],\n      },\n      ticks: {\n        color: designTokens.colors.text.tertiary,\n        font: {\n          family: designTokens.typography.fontFamily.body[0],\n          size: 12,\n        },\n      },\n    },\n  },\n  elements: {\n    point: {\n      radius: 4,\n      hoverRadius: 6,\n      borderWidth: 2,\n    },\n    line: {\n      borderWidth: 2,\n      tension: 0.1, // Slight curve for smoother lines\n    },\n    bar: {\n      borderRadius: 4,\n      borderSkipped: false,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  interaction: {\n    mode: 'index' as const,\n    intersect: false,\n  },\n} as const;\n\n/**\n * Utility Functions for Chart Configuration\n */\n\n// Generate dataset with DATEN-SEE colors\nexport function createDataset(\n  label: string, \n  data: number[], \n  colorIndex: number = 0,\n  type: 'line' | 'bar' | 'doughnut' = 'line'\n): {\n  label: string;\n  data: number[];\n  backgroundColor: string | string[];\n  borderColor: string;\n  borderWidth: number;\n  pointBackgroundColor: string;\n  pointBorderColor: string;\n  pointBorderWidth: number;\n  fill: boolean;\n} {\n  const color = chartColors[colorIndex % chartColors.length] || chartColors[0];\n  const backgroundColor = type === 'doughnut' \n    ? chartColors.slice(0, data.length)\n    : color + '20'; // 12.5% opacity for areas\n  \n  return {\n    label,\n    data,\n    backgroundColor,\n    borderColor: color,\n    borderWidth: 2,\n    pointBackgroundColor: color,\n    pointBorderColor: designTokens.colors.surface.primary,\n    pointBorderWidth: 2,\n    fill: type === 'line' ? false : true,\n  };\n}\n\n// Create multiple datasets with automatic color assignment\nexport function createMultipleDatasets(\n  datasets: Array<{ label: string; data: number[] }>,\n  type: 'line' | 'bar' | 'doughnut' = 'line'\n): Array<{\n  label: string;\n  data: number[];\n  backgroundColor: string | string[];\n  borderColor: string;\n  borderWidth: number;\n  pointBackgroundColor: string;\n  pointBorderColor: string;\n  pointBorderWidth: number;\n  fill: boolean;\n}> {\n  return datasets.map((dataset, index) => \n    createDataset(dataset.label, dataset.data, index, type)\n  );\n}\n\n// Chart colors for specific use cases\nexport const chartColorsByUse = {\n  // Für Performance Metrics (Grün = gut, Rot = schlecht)\n  performance: {\n    good: successColor,\n    warning: '#f59e0b',\n    danger: '#ef4444',\n  },\n  \n  // Für A/B Testing (Primäre Blautöne)\n  comparison: [\n    chartColors[0], // Primary Blue\n    chartColors[2], // Blue Shade 2  \n  ],\n  \n  // Für Multi-Channel Analytics\n  channels: chartColors,\n  \n  // Für Zeitreihen mit Trend\n  timeSeries: {\n    current: chartColors[0],     // Primary Blue\n    previous: chartColors[3],    // Blue Shade 3 (lighter)\n    trend: successColor,         // Green für Trend-Linie\n  },\n} as const;\n\nconst colorConfig = {\n  chartColors,\n  chartBackgroundColors,\n  chartBorderColors,\n  extendedChartColors,\n  defaultChartConfig,\n  createDataset,\n  createMultipleDatasets,\n  chartColorsByUse,\n};\n\nexport default colorConfig;"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}