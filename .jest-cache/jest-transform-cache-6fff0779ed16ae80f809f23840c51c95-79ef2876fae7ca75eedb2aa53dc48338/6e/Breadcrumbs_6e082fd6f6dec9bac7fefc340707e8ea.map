{"version":3,"names":["cov_1a6wh15j8m","actualCoverage","s","Breadcrumbs","f","CompactBreadcrumbs","className","b","showHome","breadcrumbs","_NavigationContext","useNavigation","length","_jsxruntime","jsx","map","breadcrumb","index","isLast","isHome","href","jsxs","_lucidereact","ChevronRight","Home","label","_link","default","compactBreadcrumbs","slice"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/navigation/Breadcrumbs.tsx"],"sourcesContent":["'use client';\n\nimport { ChevronRight, Home } from 'lucide-react';\nimport type { Route } from 'next';\nimport Link from 'next/link';\n\nimport { useNavigation } from '@/contexts/NavigationContext';\n\ninterface BreadcrumbsProps {\n  className?: string;\n  showHome?: boolean;\n}\n\n/**\n * Breadcrumbs Component\n * Uses NavigationContext for state (no Zustand)\n */\nexport function Breadcrumbs({ \n  className = '', \n  showHome = true \n}: BreadcrumbsProps): React.ReactElement {\n  const { breadcrumbs } = useNavigation();\n\n  if (breadcrumbs.length === 0) {\n    return <div className={className}></div>;\n  }\n\n  return (\n    <nav className={`flex items-center space-x-2 text-sm ${className}`} aria-label=\"Breadcrumb\">\n      <ol className=\"flex items-center space-x-2\">\n        {breadcrumbs.map((breadcrumb, index) => {\n          const isLast = index === breadcrumbs.length - 1;\n          const isHome = breadcrumb.href === '/';\n\n          return (\n            <li key={breadcrumb.href} className=\"flex items-center\">\n              {/* Separator (not for first item) */}\n              {index > 0 && (\n                <ChevronRight className=\"h-4 w-4 text-[#5d5d5d] mx-2\" />\n              )}\n\n              {/* Breadcrumb Link */}\n              {isLast ? (\n                // Active/current page - no link\n                <span \n                  className=\"font-medium text-[#3d3d3d] flex items-center\"\n                  aria-current=\"page\"\n                >\n                  {isHome && showHome && <Home className=\"h-4 w-4 mr-1\" />}\n                  {breadcrumb.label}\n                </span>\n              ) : (\n                // Clickable breadcrumb\n                <Link\n                  href={breadcrumb.href as Route}\n                  className=\"text-[#5d5d5d] hover:text-[#3d3d3d] transition-colors flex items-center\"\n                >\n                  {isHome && showHome && <Home className=\"h-4 w-4 mr-1\" />}\n                  {breadcrumb.label}\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}\n\n/**\n * Compact Breadcrumbs - shows only last 2 levels\n */\nexport function CompactBreadcrumbs({ className = '' }: { className?: string }): React.ReactElement {\n  const { breadcrumbs } = useNavigation();\n\n  // Show only last 2 breadcrumbs\n  const compactBreadcrumbs = breadcrumbs.slice(-2);\n\n  if (compactBreadcrumbs.length === 0) {\n    return <div className={className}></div>;\n  }\n\n  return (\n    <nav className={`flex items-center space-x-2 text-sm ${className}`} aria-label=\"Breadcrumb\">\n      <ol className=\"flex items-center space-x-2\">\n        {/* Show ellipsis if we're truncating */}\n        {breadcrumbs.length > 2 && (\n          <li className=\"text-[#5d5d5d]\">\n            <span>...</span>\n            <ChevronRight className=\"h-4 w-4 text-[#5d5d5d] mx-2 inline\" />\n          </li>\n        )}\n\n        {compactBreadcrumbs.map((breadcrumb, index) => {\n          const isLast = index === compactBreadcrumbs.length - 1;\n\n          return (\n            <li key={breadcrumb.href} className=\"flex items-center\">\n              {/* Separator (not for first item) */}\n              {index > 0 && (\n                <ChevronRight className=\"h-4 w-4 text-[#5d5d5d] mx-2\" />\n              )}\n\n              {/* Breadcrumb Link */}\n              {isLast ? (\n                <span \n                  className=\"font-medium text-[#3d3d3d]\"\n                  aria-current=\"page\"\n                >\n                  {breadcrumb.label}\n                </span>\n              ) : (\n                <Link\n                  href={breadcrumb.href as Route}\n                  className=\"text-[#5d5d5d] hover:text-[#3d3d3d] transition-colors\"\n                >\n                  {breadcrumb.label}\n                </Link>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </nav>\n  );\n}"],"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","ignoreList":[]}