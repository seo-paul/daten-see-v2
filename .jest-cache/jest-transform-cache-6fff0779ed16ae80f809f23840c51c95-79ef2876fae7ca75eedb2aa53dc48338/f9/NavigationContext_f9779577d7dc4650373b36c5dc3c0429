63b826e9b8f32d8db1ed7c8861051f15
'use client';
"use strict";

/* istanbul ignore next */
function cov_wmfnegt1q() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/contexts/NavigationContext.tsx";
  var hash = "13d53401ec5b42a6d3440a626d35d33f2e4e569e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/contexts/NavigationContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 33
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 34
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 29
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 33
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "9": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 46
        }
      },
      "10": {
        start: {
          line: 28,
          column: 15
        },
        end: {
          line: 28,
          column: 31
        }
      },
      "11": {
        start: {
          line: 29,
          column: 22
        },
        end: {
          line: 29,
          column: 64
        }
      },
      "12": {
        start: {
          line: 31,
          column: 40
        },
        end: {
          line: 31,
          column: 76
        }
      },
      "13": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 42,
          column: 1
        }
      },
      "14": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 44,
          column: 51
        }
      },
      "15": {
        start: {
          line: 45,
          column: 50
        },
        end: {
          line: 50,
          column: 6
        }
      },
      "16": {
        start: {
          line: 52,
          column: 32
        },
        end: {
          line: 76,
          column: 5
        }
      },
      "17": {
        start: {
          line: 53,
          column: 25
        },
        end: {
          line: 53,
          column: 56
        }
      },
      "18": {
        start: {
          line: 54,
          column: 28
        },
        end: {
          line: 54,
          column: 30
        }
      },
      "19": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "20": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 15
        }
      },
      "21": {
        start: {
          line: 64,
          column: 26
        },
        end: {
          line: 64,
          column: 28
        }
      },
      "22": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 74,
          column: 11
        }
      },
      "23": {
        start: {
          line: 66,
          column: 12
        },
        end: {
          line: 66,
          column: 41
        }
      },
      "24": {
        start: {
          line: 67,
          column: 27
        },
        end: {
          line: 67,
          column: 56
        }
      },
      "25": {
        start: {
          line: 68,
          column: 26
        },
        end: {
          line: 68,
          column: 105
        }
      },
      "26": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 73,
          column: 15
        }
      },
      "27": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 27
        }
      },
      "28": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 96,
          column: 7
        }
      },
      "29": {
        start: {
          line: 79,
          column: 31
        },
        end: {
          line: 79,
          column: 60
        }
      },
      "30": {
        start: {
          line: 80,
          column: 25
        },
        end: {
          line: 80,
          column: 88
        }
      },
      "31": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 86,
          column: 16
        }
      },
      "32": {
        start: {
          line: 81,
          column: 36
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "33": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 92,
          column: 11
        }
      },
      "34": {
        start: {
          line: 90,
          column: 49
        },
        end: {
          line: 90,
          column: 56
        }
      },
      "35": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "36": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 102,
          column: 16
        }
      },
      "37": {
        start: {
          line: 99,
          column: 36
        },
        end: {
          line: 102,
          column: 13
        }
      },
      "38": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "39": {
        start: {
          line: 104,
          column: 46
        },
        end: {
          line: 104,
          column: 53
        }
      },
      "40": {
        start: {
          line: 108,
          column: 25
        },
        end: {
          line: 120,
          column: 5
        }
      },
      "41": {
        start: {
          line: 109,
          column: 8
        },
        end: {
          line: 112,
          column: 16
        }
      },
      "42": {
        start: {
          line: 109,
          column: 36
        },
        end: {
          line: 112,
          column: 13
        }
      },
      "43": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "44": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 52
        }
      },
      "45": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 119,
          column: 11
        }
      },
      "46": {
        start: {
          line: 122,
          column: 19
        },
        end: {
          line: 134,
          column: 5
        }
      },
      "47": {
        start: {
          line: 123,
          column: 8
        },
        end: {
          line: 133,
          column: 9
        }
      },
      "48": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 34
        }
      },
      "49": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 128,
          column: 15
        }
      },
      "50": {
        start: {
          line: 131,
          column: 12
        },
        end: {
          line: 131,
          column: 49
        }
      },
      "51": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 132,
          column: 82
        }
      },
      "52": {
        start: {
          line: 136,
          column: 25
        },
        end: {
          line: 144,
          column: 5
        }
      },
      "53": {
        start: {
          line: 145,
          column: 4
        },
        end: {
          line: 148,
          column: 7
        }
      },
      "54": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 151,
          column: 61
        }
      },
      "55": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "56": {
        start: {
          line: 153,
          column: 8
        },
        end: {
          line: 153,
          column: 82
        }
      },
      "57": {
        start: {
          line: 155,
          column: 4
        },
        end: {
          line: 155,
          column: 19
        }
      },
      "58": {
        start: {
          line: 158,
          column: 45
        },
        end: {
          line: 158,
          column: 60
        }
      },
      "59": {
        start: {
          line: 159,
          column: 4
        },
        end: {
          line: 171,
          column: 7
        }
      },
      "60": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 162,
          column: 9
        }
      },
      "61": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 40
        }
      },
      "62": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 165,
          column: 9
        }
      },
      "63": {
        start: {
          line: 164,
          column: 12
        },
        end: {
          line: 164,
          column: 48
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 29
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 30
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 25
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "NavigationProvider",
        decl: {
          start: {
            line: 43,
            column: 9
          },
          end: {
            line: 43,
            column: 27
          }
        },
        loc: {
          start: {
            line: 43,
            column: 42
          },
          end: {
            line: 149,
            column: 1
          }
        },
        line: 43
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 52,
            column: 32
          },
          end: {
            line: 52,
            column: 33
          }
        },
        loc: {
          start: {
            line: 52,
            column: 40
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 52
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 25
          },
          end: {
            line: 65,
            column: 26
          }
        },
        loc: {
          start: {
            line: 65,
            column: 43
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 26
          },
          end: {
            line: 78,
            column: 27
          }
        },
        loc: {
          start: {
            line: 78,
            column: 30
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 81,
            column: 27
          },
          end: {
            line: 81,
            column: 28
          }
        },
        loc: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 86,
            column: 13
          }
        },
        line: 81
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 90,
            column: 44
          },
          end: {
            line: 90,
            column: 45
          }
        },
        loc: {
          start: {
            line: 90,
            column: 49
          },
          end: {
            line: 90,
            column: 56
          }
        },
        line: 90
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 28
          }
        },
        loc: {
          start: {
            line: 98,
            column: 42
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 98
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 27
          },
          end: {
            line: 99,
            column: 28
          }
        },
        loc: {
          start: {
            line: 99,
            column: 36
          },
          end: {
            line: 102,
            column: 13
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 104,
            column: 41
          },
          end: {
            line: 104,
            column: 42
          }
        },
        loc: {
          start: {
            line: 104,
            column: 46
          },
          end: {
            line: 104,
            column: 53
          }
        },
        line: 104
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 108,
            column: 25
          },
          end: {
            line: 108,
            column: 26
          }
        },
        loc: {
          start: {
            line: 108,
            column: 34
          },
          end: {
            line: 120,
            column: 5
          }
        },
        line: 108
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 109,
            column: 27
          },
          end: {
            line: 109,
            column: 28
          }
        },
        loc: {
          start: {
            line: 109,
            column: 36
          },
          end: {
            line: 112,
            column: 13
          }
        },
        line: 109
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 122,
            column: 20
          }
        },
        loc: {
          start: {
            line: 122,
            column: 23
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 122
      },
      "17": {
        name: "useNavigation",
        decl: {
          start: {
            line: 150,
            column: 9
          },
          end: {
            line: 150,
            column: 22
          }
        },
        loc: {
          start: {
            line: 150,
            column: 25
          },
          end: {
            line: 156,
            column: 1
          }
        },
        line: 150
      },
      "18": {
        name: "usePageNavigation",
        decl: {
          start: {
            line: 157,
            column: 9
          },
          end: {
            line: 157,
            column: 26
          }
        },
        loc: {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 157
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 159,
            column: 26
          },
          end: {
            line: 159,
            column: 27
          }
        },
        loc: {
          start: {
            line: 159,
            column: 30
          },
          end: {
            line: 166,
            column: 5
          }
        },
        line: 159
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 56,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 56
      },
      "1": {
        loc: {
          start: {
            line: 68,
            column: 26
          },
          end: {
            line: 68,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 26
          },
          end: {
            line: 68,
            column: 51
          }
        }, {
          start: {
            line: 68,
            column: 55
          },
          end: {
            line: 68,
            column: 105
          }
        }],
        line: 68
      },
      "2": {
        loc: {
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 25
          },
          end: {
            line: 80,
            column: 73
          }
        }, {
          start: {
            line: 80,
            column: 77
          },
          end: {
            line: 80,
            column: 88
          }
        }],
        line: 80
      },
      "3": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "4": {
        loc: {
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 8
          },
          end: {
            line: 133,
            column: 9
          }
        }, {
          start: {
            line: 129,
            column: 15
          },
          end: {
            line: 133,
            column: 9
          }
        }],
        line: 123
      },
      "5": {
        loc: {
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 152,
            column: 4
          },
          end: {
            line: 154,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 152
      },
      "6": {
        loc: {
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 160,
            column: 8
          },
          end: {
            line: 162,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 160
      },
      "7": {
        loc: {
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 8
          },
          end: {
            line: 165,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/contexts/NavigationContext.tsx"],
      sourcesContent: ["'use client';\n\nimport { usePathname } from 'next/navigation';\nimport { createContext, useContext, useEffect, useState, ReactNode } from 'react';\n\nimport { appLogger } from '@/lib/monitoring/logger.config';\n\n// Breadcrumb interface\nexport interface Breadcrumb {\n  label: string;\n  href: string;\n  isActive?: boolean;\n}\n\n// Navigation state interface\nexport interface NavigationState {\n  currentPath: string;\n  previousPath: string | null;\n  breadcrumbs: Breadcrumb[];\n  pageTitle: string;\n}\n\n// Navigation context interface\nexport interface NavigationContextType extends NavigationState {\n  // Navigation actions\n  setBreadcrumbs: (breadcrumbs: Breadcrumb[]) => void;\n  setPageTitle: (title: string) => void;\n  \n  // Navigation utilities\n  generateBreadcrumbs: (pathname: string) => Breadcrumb[];\n  goBack: () => void;\n}\n\n// Create context\nconst NavigationContext = createContext<NavigationContextType | undefined>(undefined);\n\n// Props interface\ninterface NavigationProviderProps {\n  children: ReactNode;\n}\n\n// Route to label mapping\nconst ROUTE_LABELS: Record<string, string> = {\n  '/': 'Home',\n  '/dashboards': 'Dashboards',\n  '/dashboard': 'Dashboard',\n  '/settings': 'Settings',\n  '/profile': 'Profile',\n  '/auth-demo': 'Auth Demo',\n  '/login': 'Login',\n  '/unauthorized': 'Unauthorized',\n};\n\n/**\n * Navigation Context Provider\n * Manages navigation state without persistence\n * Uses React Context + Next.js App Router (no Zustand)\n */\nexport function NavigationProvider({ children }: NavigationProviderProps): React.ReactElement {\n  const pathname = usePathname();\n  \n  const [navigationState, setNavigationState] = useState<NavigationState>({\n    currentPath: pathname,\n    previousPath: null,\n    breadcrumbs: [],\n    pageTitle: '',\n  });\n\n  // Generate breadcrumbs from pathname\n  const generateBreadcrumbs = (path: string): Breadcrumb[] => {\n    const segments = path.split('/').filter(Boolean);\n    const breadcrumbs: Breadcrumb[] = [];\n\n    // Always add home\n    if (path !== '/') {\n      breadcrumbs.push({\n        label: 'Home',\n        href: '/',\n        isActive: false,\n      });\n    }\n\n    // Build breadcrumbs from path segments\n    let currentPath = '';\n    segments.forEach((segment, index) => {\n      currentPath += `/${segment}`;\n      \n      const isLast = index === segments.length - 1;\n      const label = ROUTE_LABELS[currentPath] || \n                   segment.charAt(0).toUpperCase() + segment.slice(1);\n\n      breadcrumbs.push({\n        label,\n        href: currentPath,\n        isActive: isLast,\n      });\n    });\n\n    return breadcrumbs;\n  };\n\n  // Update navigation state when pathname changes\n  useEffect(() => {\n    const newBreadcrumbs = generateBreadcrumbs(pathname);\n    const newTitle = newBreadcrumbs[newBreadcrumbs.length - 1]?.label || 'Dashboard';\n\n    setNavigationState(prev => ({\n      currentPath: pathname,\n      previousPath: prev.currentPath,\n      breadcrumbs: newBreadcrumbs,\n      pageTitle: newTitle,\n    }));\n\n    appLogger.debug('Navigation updated', {\n      currentPath: pathname,\n      previousPath: navigationState.currentPath,\n      breadcrumbs: newBreadcrumbs.map(b => b.label),\n      pageTitle: newTitle,\n    });\n  }, [pathname, navigationState.currentPath]);\n\n  // Set custom breadcrumbs\n  const setBreadcrumbs = (breadcrumbs: Breadcrumb[]): void => {\n    setNavigationState(prev => ({\n      ...prev,\n      breadcrumbs,\n    }));\n\n    appLogger.debug('Custom breadcrumbs set', {\n      breadcrumbs: breadcrumbs.map(b => b.label),\n    });\n  };\n\n  // Set custom page title\n  const setPageTitle = (title: string): void => {\n    setNavigationState(prev => ({\n      ...prev,\n      pageTitle: title,\n    }));\n\n    // Update document title\n    if (typeof document !== 'undefined') {\n      document.title = `${title} - Daten See`;\n    }\n\n    appLogger.debug('Page title updated', { title });\n  };\n\n  // Go back to previous page\n  const goBack = (): void => {\n    if (navigationState.previousPath) {\n      window.history.back();\n      appLogger.debug('Navigate back', {\n        from: navigationState.currentPath,\n        to: navigationState.previousPath,\n      });\n    } else {\n      // Fallback to dashboard if no previous path\n      window.location.href = '/dashboards';\n      appLogger.debug('Navigate back fallback to dashboards');\n    }\n  };\n\n  // Context value\n  const contextValue: NavigationContextType = {\n    // State\n    ...navigationState,\n    \n    // Actions\n    setBreadcrumbs,\n    setPageTitle,\n    generateBreadcrumbs,\n    goBack,\n  };\n\n  return (\n    <NavigationContext.Provider value={contextValue}>\n      {children}\n    </NavigationContext.Provider>\n  );\n}\n\n/**\n * Hook to use navigation context\n */\nexport function useNavigation(): NavigationContextType {\n  const context = useContext(NavigationContext);\n  \n  if (context === undefined) {\n    throw new Error('useNavigation must be used within a NavigationProvider');\n  }\n  \n  return context;\n}\n\n/**\n * Hook for page-specific navigation setup\n */\nexport function usePageNavigation(options: {\n  title?: string;\n  breadcrumbs?: Breadcrumb[];\n}): void {\n  const { setPageTitle, setBreadcrumbs } = useNavigation();\n  \n  useEffect(() => {\n    if (options.title) {\n      setPageTitle(options.title);\n    }\n    \n    if (options.breadcrumbs) {\n      setBreadcrumbs(options.breadcrumbs);\n    }\n  }, [options.title, options.breadcrumbs, setPageTitle, setBreadcrumbs]);\n}\n\n// Export types\nexport { NavigationContext };"],
      names: ["NavigationContext", "NavigationProvider", "useNavigation", "usePageNavigation", "createContext", "undefined", "ROUTE_LABELS", "children", "pathname", "usePathname", "navigationState", "setNavigationState", "useState", "currentPath", "previousPath", "breadcrumbs", "pageTitle", "generateBreadcrumbs", "path", "segments", "split", "filter", "Boolean", "push", "label", "href", "isActive", "forEach", "segment", "index", "isLast", "length", "charAt", "toUpperCase", "slice", "useEffect", "newBreadcrumbs", "newTitle", "prev", "appLogger", "debug", "map", "b", "setBreadcrumbs", "setPageTitle", "title", "document", "goBack", "window", "history", "back", "from", "to", "location", "contextValue", "Provider", "value", "context", "useContext", "Error", "options"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "13d53401ec5b42a6d3440a626d35d33f2e4e569e"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wmfnegt1q = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_wmfnegt1q();
cov_wmfnegt1q().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_wmfnegt1q().f[0]++;
  cov_wmfnegt1q().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_wmfnegt1q().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_wmfnegt1q().s[3]++;
_export(exports, {
  get NavigationContext() {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[1]++;
    cov_wmfnegt1q().s[4]++;
    return NavigationContext;
  },
  get NavigationProvider() {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[2]++;
    cov_wmfnegt1q().s[5]++;
    return NavigationProvider;
  },
  get useNavigation() {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[3]++;
    cov_wmfnegt1q().s[6]++;
    return useNavigation;
  },
  get usePageNavigation() {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[4]++;
    cov_wmfnegt1q().s[7]++;
    return usePageNavigation;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_wmfnegt1q().s[8]++, require("react/jsx-runtime"));
const _navigation =
/* istanbul ignore next */
(cov_wmfnegt1q().s[9]++, require("next/navigation"));
const _react =
/* istanbul ignore next */
(cov_wmfnegt1q().s[10]++, require("react"));
const _loggerconfig =
/* istanbul ignore next */
(cov_wmfnegt1q().s[11]++, require("../lib/monitoring/logger.config"));
// Create context
const NavigationContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_wmfnegt1q().s[12]++, (0, _react.createContext)(undefined));
// Route to label mapping
const ROUTE_LABELS =
/* istanbul ignore next */
(cov_wmfnegt1q().s[13]++, {
  '/': 'Home',
  '/dashboards': 'Dashboards',
  '/dashboard': 'Dashboard',
  '/settings': 'Settings',
  '/profile': 'Profile',
  '/auth-demo': 'Auth Demo',
  '/login': 'Login',
  '/unauthorized': 'Unauthorized'
});
function NavigationProvider({
  children
}) {
  /* istanbul ignore next */
  cov_wmfnegt1q().f[5]++;
  const pathname =
  /* istanbul ignore next */
  (cov_wmfnegt1q().s[14]++, (0, _navigation.usePathname)());
  const [navigationState, setNavigationState] =
  /* istanbul ignore next */
  (cov_wmfnegt1q().s[15]++, (0, _react.useState)({
    currentPath: pathname,
    previousPath: null,
    breadcrumbs: [],
    pageTitle: ''
  }));
  // Generate breadcrumbs from pathname
  /* istanbul ignore next */
  cov_wmfnegt1q().s[16]++;
  const generateBreadcrumbs = path => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[6]++;
    const segments =
    /* istanbul ignore next */
    (cov_wmfnegt1q().s[17]++, path.split('/').filter(Boolean));
    const breadcrumbs =
    /* istanbul ignore next */
    (cov_wmfnegt1q().s[18]++, []);
    // Always add home
    /* istanbul ignore next */
    cov_wmfnegt1q().s[19]++;
    if (path !== '/') {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[0][0]++;
      cov_wmfnegt1q().s[20]++;
      breadcrumbs.push({
        label: 'Home',
        href: '/',
        isActive: false
      });
    } else
    /* istanbul ignore next */
    {
      cov_wmfnegt1q().b[0][1]++;
    }
    // Build breadcrumbs from path segments
    let currentPath =
    /* istanbul ignore next */
    (cov_wmfnegt1q().s[21]++, '');
    /* istanbul ignore next */
    cov_wmfnegt1q().s[22]++;
    segments.forEach((segment, index) => {
      /* istanbul ignore next */
      cov_wmfnegt1q().f[7]++;
      cov_wmfnegt1q().s[23]++;
      currentPath += `/${segment}`;
      const isLast =
      /* istanbul ignore next */
      (cov_wmfnegt1q().s[24]++, index === segments.length - 1);
      const label =
      /* istanbul ignore next */
      (cov_wmfnegt1q().s[25]++,
      /* istanbul ignore next */
      (cov_wmfnegt1q().b[1][0]++, ROUTE_LABELS[currentPath]) ||
      /* istanbul ignore next */
      (cov_wmfnegt1q().b[1][1]++, segment.charAt(0).toUpperCase() + segment.slice(1)));
      /* istanbul ignore next */
      cov_wmfnegt1q().s[26]++;
      breadcrumbs.push({
        label,
        href: currentPath,
        isActive: isLast
      });
    });
    /* istanbul ignore next */
    cov_wmfnegt1q().s[27]++;
    return breadcrumbs;
  };
  // Update navigation state when pathname changes
  /* istanbul ignore next */
  cov_wmfnegt1q().s[28]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[8]++;
    const newBreadcrumbs =
    /* istanbul ignore next */
    (cov_wmfnegt1q().s[29]++, generateBreadcrumbs(pathname));
    const newTitle =
    /* istanbul ignore next */
    (cov_wmfnegt1q().s[30]++,
    /* istanbul ignore next */
    (cov_wmfnegt1q().b[2][0]++, newBreadcrumbs[newBreadcrumbs.length - 1]?.label) ||
    /* istanbul ignore next */
    (cov_wmfnegt1q().b[2][1]++, 'Dashboard'));
    /* istanbul ignore next */
    cov_wmfnegt1q().s[31]++;
    setNavigationState(prev => {
      /* istanbul ignore next */
      cov_wmfnegt1q().f[9]++;
      cov_wmfnegt1q().s[32]++;
      return {
        currentPath: pathname,
        previousPath: prev.currentPath,
        breadcrumbs: newBreadcrumbs,
        pageTitle: newTitle
      };
    });
    /* istanbul ignore next */
    cov_wmfnegt1q().s[33]++;
    _loggerconfig.appLogger.debug('Navigation updated', {
      currentPath: pathname,
      previousPath: navigationState.currentPath,
      breadcrumbs: newBreadcrumbs.map(b => {
        /* istanbul ignore next */
        cov_wmfnegt1q().f[10]++;
        cov_wmfnegt1q().s[34]++;
        return b.label;
      }),
      pageTitle: newTitle
    });
  }, [pathname, navigationState.currentPath]);
  // Set custom breadcrumbs
  /* istanbul ignore next */
  cov_wmfnegt1q().s[35]++;
  const setBreadcrumbs = breadcrumbs => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[11]++;
    cov_wmfnegt1q().s[36]++;
    setNavigationState(prev => {
      /* istanbul ignore next */
      cov_wmfnegt1q().f[12]++;
      cov_wmfnegt1q().s[37]++;
      return {
        ...prev,
        breadcrumbs
      };
    });
    /* istanbul ignore next */
    cov_wmfnegt1q().s[38]++;
    _loggerconfig.appLogger.debug('Custom breadcrumbs set', {
      breadcrumbs: breadcrumbs.map(b => {
        /* istanbul ignore next */
        cov_wmfnegt1q().f[13]++;
        cov_wmfnegt1q().s[39]++;
        return b.label;
      })
    });
  };
  // Set custom page title
  /* istanbul ignore next */
  cov_wmfnegt1q().s[40]++;
  const setPageTitle = title => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[14]++;
    cov_wmfnegt1q().s[41]++;
    setNavigationState(prev => {
      /* istanbul ignore next */
      cov_wmfnegt1q().f[15]++;
      cov_wmfnegt1q().s[42]++;
      return {
        ...prev,
        pageTitle: title
      };
    });
    // Update document title
    /* istanbul ignore next */
    cov_wmfnegt1q().s[43]++;
    if (typeof document !== 'undefined') {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[3][0]++;
      cov_wmfnegt1q().s[44]++;
      document.title = `${title} - Daten See`;
    } else
    /* istanbul ignore next */
    {
      cov_wmfnegt1q().b[3][1]++;
    }
    cov_wmfnegt1q().s[45]++;
    _loggerconfig.appLogger.debug('Page title updated', {
      title
    });
  };
  // Go back to previous page
  /* istanbul ignore next */
  cov_wmfnegt1q().s[46]++;
  const goBack = () => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[16]++;
    cov_wmfnegt1q().s[47]++;
    if (navigationState.previousPath) {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[4][0]++;
      cov_wmfnegt1q().s[48]++;
      window.history.back();
      /* istanbul ignore next */
      cov_wmfnegt1q().s[49]++;
      _loggerconfig.appLogger.debug('Navigate back', {
        from: navigationState.currentPath,
        to: navigationState.previousPath
      });
    } else {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[4][1]++;
      cov_wmfnegt1q().s[50]++;
      // Fallback to dashboard if no previous path
      window.location.href = '/dashboards';
      /* istanbul ignore next */
      cov_wmfnegt1q().s[51]++;
      _loggerconfig.appLogger.debug('Navigate back fallback to dashboards');
    }
  };
  // Context value
  const contextValue =
  /* istanbul ignore next */
  (cov_wmfnegt1q().s[52]++, {
    // State
    ...navigationState,
    // Actions
    setBreadcrumbs,
    setPageTitle,
    generateBreadcrumbs,
    goBack
  });
  /* istanbul ignore next */
  cov_wmfnegt1q().s[53]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(NavigationContext.Provider, {
    value: contextValue,
    children: children
  });
}
function useNavigation() {
  /* istanbul ignore next */
  cov_wmfnegt1q().f[17]++;
  const context =
  /* istanbul ignore next */
  (cov_wmfnegt1q().s[54]++, (0, _react.useContext)(NavigationContext));
  /* istanbul ignore next */
  cov_wmfnegt1q().s[55]++;
  if (context === undefined) {
    /* istanbul ignore next */
    cov_wmfnegt1q().b[5][0]++;
    cov_wmfnegt1q().s[56]++;
    throw new Error('useNavigation must be used within a NavigationProvider');
  } else
  /* istanbul ignore next */
  {
    cov_wmfnegt1q().b[5][1]++;
  }
  cov_wmfnegt1q().s[57]++;
  return context;
}
function usePageNavigation(options) {
  /* istanbul ignore next */
  cov_wmfnegt1q().f[18]++;
  const {
    setPageTitle,
    setBreadcrumbs
  } =
  /* istanbul ignore next */
  (cov_wmfnegt1q().s[58]++, useNavigation());
  /* istanbul ignore next */
  cov_wmfnegt1q().s[59]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_wmfnegt1q().f[19]++;
    cov_wmfnegt1q().s[60]++;
    if (options.title) {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[6][0]++;
      cov_wmfnegt1q().s[61]++;
      setPageTitle(options.title);
    } else
    /* istanbul ignore next */
    {
      cov_wmfnegt1q().b[6][1]++;
    }
    cov_wmfnegt1q().s[62]++;
    if (options.breadcrumbs) {
      /* istanbul ignore next */
      cov_wmfnegt1q().b[7][0]++;
      cov_wmfnegt1q().s[63]++;
      setBreadcrumbs(options.breadcrumbs);
    } else
    /* istanbul ignore next */
    {
      cov_wmfnegt1q().b[7][1]++;
    }
  }, [options.title, options.breadcrumbs, setPageTitle, setBreadcrumbs]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,