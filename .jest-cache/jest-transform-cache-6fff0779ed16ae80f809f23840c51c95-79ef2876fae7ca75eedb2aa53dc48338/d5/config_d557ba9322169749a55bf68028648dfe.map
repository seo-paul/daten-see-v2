{"version":3,"names":["cov_16egbcqm28","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","QUERY_CONFIG","createDevQueryClient","createOptimizedQueryClient","createQueryOptions","getNetworkOptimizedConfig","queryKeys","REALTIME","staleTime","gcTime","refetchOnWindowFocus","refetchInterval","DYNAMIC","STATIC","CRITICAL","refetchOnMount","BACKGROUND","_reactquery","QueryClient","defaultOptions","queries","refetchOnReconnect","retry","failureCount","error","status","retryDelay","attemptIndex","Math","min","placeholderData","previousData","mutations","auth","authUser","dashboards","dashboardsList","dashboard","id","analytics","settings","userSettings","userId","queryKey","connection","navigator","isSlowNetwork","effectiveType","client","process","env","NODE_ENV","setMutationDefaults","onSuccess","onError"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/config.ts"],"sourcesContent":["/**\n * TanStack Query Configuration\n * Optimized stale-while-revalidate settings for performance\n */\n\nimport { QueryClient } from '@tanstack/react-query';\n\n/**\n * Optimized query configurations for different data types\n */\nexport const QUERY_CONFIG = {\n  // Fast-changing data (user interactions, real-time data)\n  REALTIME: {\n    staleTime: 0, // Always considered stale\n    gcTime: 5 * 60 * 1000, // 5 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchInterval: 30 * 1000, // 30 seconds\n  },\n\n  // Medium-changing data (dashboard lists, user profiles)\n  DYNAMIC: {\n    staleTime: 2 * 60 * 1000, // 2 minutes fresh\n    gcTime: 10 * 60 * 1000, // 10 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchInterval: false,\n  },\n\n  // Slow-changing data (settings, configurations)\n  STATIC: {\n    staleTime: 15 * 60 * 1000, // 15 minutes fresh\n    gcTime: 60 * 60 * 1000, // 1 hour in cache\n    refetchOnWindowFocus: false,\n    refetchInterval: false,\n  },\n\n  // Critical data (authentication, permissions)\n  CRITICAL: {\n    staleTime: 30 * 1000, // 30 seconds fresh\n    gcTime: 5 * 60 * 1000, // 5 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchOnMount: true,\n    refetchInterval: 60 * 1000, // 1 minute\n  },\n\n  // Background data (analytics, logs)\n  BACKGROUND: {\n    staleTime: 5 * 60 * 1000, // 5 minutes fresh\n    gcTime: 30 * 60 * 1000, // 30 minutes in cache\n    refetchOnWindowFocus: false,\n    refetchInterval: 5 * 60 * 1000, // 5 minutes\n  },\n} as const;\n\n/**\n * Create production-optimized QueryClient\n */\nexport function createOptimizedQueryClient(): QueryClient {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        // Default to DYNAMIC config for most use cases\n        staleTime: QUERY_CONFIG.DYNAMIC.staleTime,\n        gcTime: QUERY_CONFIG.DYNAMIC.gcTime,\n        \n        // Network optimization\n        refetchOnWindowFocus: true,\n        refetchOnReconnect: true,\n        refetchOnMount: true,\n        \n        // Error handling\n        retry: (failureCount: number, error: Error): boolean => {\n          // Don't retry on 404s or authentication errors\n          if ((error as { status?: number })?.status === 404 || (error as { status?: number })?.status === 401) {\n            return false;\n          }\n          // Retry up to 3 times for other errors\n          return failureCount < 3;\n        },\n        retryDelay: (attemptIndex: number): number => Math.min(1000 * 2 ** attemptIndex, 30000),\n        \n        // Performance optimization - keep previous data while fetching new data\n        placeholderData: (previousData: unknown) => previousData,\n        \n        // Additional stale-while-revalidate behavior\n        // Note: staleTime and gcTime already set above\n      },\n      mutations: {\n        retry: 1, // Only retry mutations once\n        retryDelay: 1000,\n      },\n    },\n  });\n}\n\n/**\n * Query key factory for consistent naming\n */\nexport const queryKeys = {\n  // Authentication\n  auth: ['auth'] as const,\n  authUser: () => [...queryKeys.auth, 'user'] as const,\n  \n  // Dashboards\n  dashboards: ['dashboards'] as const,\n  dashboardsList: () => [...queryKeys.dashboards, 'list'] as const,\n  dashboard: (id: string) => [...queryKeys.dashboards, 'detail', id] as const,\n  \n  // Analytics (future)\n  analytics: ['analytics'] as const,\n  \n  // Settings\n  settings: ['settings'] as const,\n  userSettings: (userId: string) => [...queryKeys.settings, 'user', userId] as const,\n} as const;\n\n/**\n * Specialized query options for different data types\n */\nexport const createQueryOptions = {\n  /**\n   * For dashboard data - medium update frequency\n   */\n  dashboard: (id?: string): Record<string, unknown> => ({\n    ...QUERY_CONFIG.DYNAMIC,\n    queryKey: id ? queryKeys.dashboard(id) : queryKeys.dashboardsList(),\n  }),\n\n  /**\n   * For authentication data - high security, frequent checks\n   */\n  auth: (): Record<string, unknown> => ({\n    ...QUERY_CONFIG.CRITICAL,\n    queryKey: queryKeys.authUser(),\n  }),\n\n  /**\n   * For settings data - infrequent updates\n   */\n  settings: (userId?: string): Record<string, unknown> => ({\n    ...QUERY_CONFIG.STATIC,\n    queryKey: userId ? queryKeys.userSettings(userId) : queryKeys.settings,\n  }),\n\n  /**\n   * For real-time analytics - frequent updates\n   */\n  analytics: (): Record<string, unknown> => ({\n    ...QUERY_CONFIG.REALTIME,\n    queryKey: queryKeys.analytics,\n  }),\n};\n\n/**\n * Network status detection for adaptive behavior\n */\nexport function getNetworkOptimizedConfig(): Record<string, unknown> {\n  // Check if we're in a slow network environment\n  const connection = (navigator as unknown as Record<string, unknown>)?.connection as Record<string, string> | undefined;\n  const isSlowNetwork = connection?.effectiveType === '2g' || connection?.effectiveType === 'slow-2g';\n  \n  if (isSlowNetwork) {\n    return {\n      staleTime: 5 * 60 * 1000, // Keep data fresh longer on slow networks\n      gcTime: 30 * 60 * 1000, // Cache longer\n      refetchOnWindowFocus: false, // Reduce network requests\n    };\n  }\n  \n  return QUERY_CONFIG.DYNAMIC;\n}\n\n/**\n * Development-specific query client with debugging\n */\nexport function createDevQueryClient(): QueryClient {\n  const client = createOptimizedQueryClient();\n  \n  if (process.env.NODE_ENV === 'development') {\n    // Enable React Query DevTools logging\n    client.setMutationDefaults(['debug'], {\n      onSuccess: () => {\n        if (process.env.NODE_ENV === 'development') {\n          // Mutation success\n        }\n      },\n      onError: () => {\n        if (process.env.NODE_ENV === 'development') {\n          // Mutation error\n        }\n      },\n    });\n  }\n  \n  return client;\n}"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}