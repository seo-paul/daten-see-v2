94efe6819ded28d57ad710f8128d4314
/**
 * TanStack Query Configuration
 * Optimized stale-while-revalidate settings for performance
 */"use strict";

/* istanbul ignore next */
function cov_16egbcqm28() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/config.ts";
  var hash = "d74bd814bd670a692abe584e6e7e1f02bf2d5027";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/config.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 33,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 36
        }
      },
      "6": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 42
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 34
        }
      },
      "8": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 25
        }
      },
      "10": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 34,
          column: 52
        }
      },
      "11": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "12": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 102,
          column: 7
        }
      },
      "13": {
        start: {
          line: 87,
          column: 20
        },
        end: {
          line: 89,
          column: 21
        }
      },
      "14": {
        start: {
          line: 88,
          column: 24
        },
        end: {
          line: 88,
          column: 37
        }
      },
      "15": {
        start: {
          line: 91,
          column: 20
        },
        end: {
          line: 91,
          column: 44
        }
      },
      "16": {
        start: {
          line: 93,
          column: 44
        },
        end: {
          line: 93,
          column: 85
        }
      },
      "17": {
        start: {
          line: 95,
          column: 49
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "18": {
        start: {
          line: 104,
          column: 18
        },
        end: {
          line: 139,
          column: 1
        }
      },
      "19": {
        start: {
          line: 109,
          column: 18
        },
        end: {
          line: 112,
          column: 9
        }
      },
      "20": {
        start: {
          line: 117,
          column: 24
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "21": {
        start: {
          line: 121,
          column: 21
        },
        end: {
          line: 125,
          column: 9
        }
      },
      "22": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "23": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 165,
          column: 1
        }
      },
      "24": {
        start: {
          line: 143,
          column: 24
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "25": {
        start: {
          line: 149,
          column: 17
        },
        end: {
          line: 152,
          column: 9
        }
      },
      "26": {
        start: {
          line: 155,
          column: 27
        },
        end: {
          line: 158,
          column: 9
        }
      },
      "27": {
        start: {
          line: 161,
          column: 22
        },
        end: {
          line: 164,
          column: 9
        }
      },
      "28": {
        start: {
          line: 168,
          column: 23
        },
        end: {
          line: 168,
          column: 44
        }
      },
      "29": {
        start: {
          line: 169,
          column: 26
        },
        end: {
          line: 169,
          column: 103
        }
      },
      "30": {
        start: {
          line: 170,
          column: 4
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "31": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 175,
          column: 10
        }
      },
      "32": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 32
        }
      },
      "33": {
        start: {
          line: 180,
          column: 19
        },
        end: {
          line: 180,
          column: 47
        }
      },
      "34": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 197,
          column: 5
        }
      },
      "35": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 196,
          column: 11
        }
      },
      "36": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 189,
          column: 17
        }
      },
      "37": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 194,
          column: 17
        }
      },
      "38": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 198,
          column: 18
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 32
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 38
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 30
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 37
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 21
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "7": {
        name: "createOptimizedQueryClient",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 35
          }
        },
        loc: {
          start: {
            line: 73,
            column: 38
          },
          end: {
            line: 103,
            column: 1
          }
        },
        line: 73
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 85,
            column: 23
          },
          end: {
            line: 85,
            column: 24
          }
        },
        loc: {
          start: {
            line: 85,
            column: 46
          },
          end: {
            line: 92,
            column: 17
          }
        },
        line: 85
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 93,
            column: 28
          },
          end: {
            line: 93,
            column: 29
          }
        },
        loc: {
          start: {
            line: 93,
            column: 44
          },
          end: {
            line: 93,
            column: 85
          }
        },
        line: 93
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 95,
            column: 33
          },
          end: {
            line: 95,
            column: 34
          }
        },
        loc: {
          start: {
            line: 95,
            column: 49
          },
          end: {
            line: 95,
            column: 61
          }
        },
        line: 95
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 109,
            column: 14
          },
          end: {
            line: 109,
            column: 15
          }
        },
        loc: {
          start: {
            line: 109,
            column: 18
          },
          end: {
            line: 112,
            column: 9
          }
        },
        line: 109
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 117,
            column: 20
          },
          end: {
            line: 117,
            column: 21
          }
        },
        loc: {
          start: {
            line: 117,
            column: 24
          },
          end: {
            line: 120,
            column: 9
          }
        },
        line: 117
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 121,
            column: 15
          },
          end: {
            line: 121,
            column: 16
          }
        },
        loc: {
          start: {
            line: 121,
            column: 21
          },
          end: {
            line: 125,
            column: 9
          }
        },
        line: 121
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 134,
            column: 18
          },
          end: {
            line: 134,
            column: 19
          }
        },
        loc: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 138,
            column: 9
          }
        },
        line: 134
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 143,
            column: 17
          },
          end: {
            line: 143,
            column: 18
          }
        },
        loc: {
          start: {
            line: 143,
            column: 24
          },
          end: {
            line: 146,
            column: 9
          }
        },
        line: 143
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 149,
            column: 12
          },
          end: {
            line: 149,
            column: 13
          }
        },
        loc: {
          start: {
            line: 149,
            column: 17
          },
          end: {
            line: 152,
            column: 9
          }
        },
        line: 149
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 155,
            column: 16
          },
          end: {
            line: 155,
            column: 17
          }
        },
        loc: {
          start: {
            line: 155,
            column: 27
          },
          end: {
            line: 158,
            column: 9
          }
        },
        line: 155
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 161,
            column: 17
          },
          end: {
            line: 161,
            column: 18
          }
        },
        loc: {
          start: {
            line: 161,
            column: 22
          },
          end: {
            line: 164,
            column: 9
          }
        },
        line: 161
      },
      "19": {
        name: "getNetworkOptimizedConfig",
        decl: {
          start: {
            line: 166,
            column: 9
          },
          end: {
            line: 166,
            column: 34
          }
        },
        loc: {
          start: {
            line: 166,
            column: 37
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 166
      },
      "20": {
        name: "createDevQueryClient",
        decl: {
          start: {
            line: 179,
            column: 9
          },
          end: {
            line: 179,
            column: 29
          }
        },
        loc: {
          start: {
            line: 179,
            column: 32
          },
          end: {
            line: 199,
            column: 1
          }
        },
        line: 179
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 186,
            column: 23
          },
          end: {
            line: 186,
            column: 24
          }
        },
        loc: {
          start: {
            line: 186,
            column: 27
          },
          end: {
            line: 190,
            column: 13
          }
        },
        line: 186
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 191,
            column: 21
          },
          end: {
            line: 191,
            column: 22
          }
        },
        loc: {
          start: {
            line: 191,
            column: 25
          },
          end: {
            line: 195,
            column: 13
          }
        },
        line: 191
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 20
          },
          end: {
            line: 89,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "1": {
        loc: {
          start: {
            line: 87,
            column: 24
          },
          end: {
            line: 87,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 87,
            column: 24
          },
          end: {
            line: 87,
            column: 45
          }
        }, {
          start: {
            line: 87,
            column: 49
          },
          end: {
            line: 87,
            column: 70
          }
        }],
        line: 87
      },
      "2": {
        loc: {
          start: {
            line: 145,
            column: 22
          },
          end: {
            line: 145,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 145,
            column: 27
          },
          end: {
            line: 145,
            column: 50
          }
        }, {
          start: {
            line: 145,
            column: 53
          },
          end: {
            line: 145,
            column: 79
          }
        }],
        line: 145
      },
      "3": {
        loc: {
          start: {
            line: 157,
            column: 22
          },
          end: {
            line: 157,
            column: 82
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 31
          },
          end: {
            line: 157,
            column: 61
          }
        }, {
          start: {
            line: 157,
            column: 64
          },
          end: {
            line: 157,
            column: 82
          }
        }],
        line: 157
      },
      "4": {
        loc: {
          start: {
            line: 169,
            column: 26
          },
          end: {
            line: 169,
            column: 103
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 169,
            column: 26
          },
          end: {
            line: 169,
            column: 60
          }
        }, {
          start: {
            line: 169,
            column: 64
          },
          end: {
            line: 169,
            column: 103
          }
        }],
        line: 169
      },
      "5": {
        loc: {
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 4
          },
          end: {
            line: 176,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "6": {
        loc: {
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 181,
            column: 4
          },
          end: {
            line: 197,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 181
      },
      "7": {
        loc: {
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 16
          },
          end: {
            line: 189,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "8": {
        loc: {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 194,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/config.ts"],
      sourcesContent: ["/**\n * TanStack Query Configuration\n * Optimized stale-while-revalidate settings for performance\n */\n\nimport { QueryClient } from '@tanstack/react-query';\n\n/**\n * Optimized query configurations for different data types\n */\nexport const QUERY_CONFIG = {\n  // Fast-changing data (user interactions, real-time data)\n  REALTIME: {\n    staleTime: 0, // Always considered stale\n    gcTime: 5 * 60 * 1000, // 5 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchInterval: 30 * 1000, // 30 seconds\n  },\n\n  // Medium-changing data (dashboard lists, user profiles)\n  DYNAMIC: {\n    staleTime: 2 * 60 * 1000, // 2 minutes fresh\n    gcTime: 10 * 60 * 1000, // 10 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchInterval: false,\n  },\n\n  // Slow-changing data (settings, configurations)\n  STATIC: {\n    staleTime: 15 * 60 * 1000, // 15 minutes fresh\n    gcTime: 60 * 60 * 1000, // 1 hour in cache\n    refetchOnWindowFocus: false,\n    refetchInterval: false,\n  },\n\n  // Critical data (authentication, permissions)\n  CRITICAL: {\n    staleTime: 30 * 1000, // 30 seconds fresh\n    gcTime: 5 * 60 * 1000, // 5 minutes in cache\n    refetchOnWindowFocus: true,\n    refetchOnMount: true,\n    refetchInterval: 60 * 1000, // 1 minute\n  },\n\n  // Background data (analytics, logs)\n  BACKGROUND: {\n    staleTime: 5 * 60 * 1000, // 5 minutes fresh\n    gcTime: 30 * 60 * 1000, // 30 minutes in cache\n    refetchOnWindowFocus: false,\n    refetchInterval: 5 * 60 * 1000, // 5 minutes\n  },\n} as const;\n\n/**\n * Create production-optimized QueryClient\n */\nexport function createOptimizedQueryClient(): QueryClient {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        // Default to DYNAMIC config for most use cases\n        staleTime: QUERY_CONFIG.DYNAMIC.staleTime,\n        gcTime: QUERY_CONFIG.DYNAMIC.gcTime,\n        \n        // Network optimization\n        refetchOnWindowFocus: true,\n        refetchOnReconnect: true,\n        refetchOnMount: true,\n        \n        // Error handling\n        retry: (failureCount: number, error: Error): boolean => {\n          // Don't retry on 404s or authentication errors\n          if ((error as { status?: number })?.status === 404 || (error as { status?: number })?.status === 401) {\n            return false;\n          }\n          // Retry up to 3 times for other errors\n          return failureCount < 3;\n        },\n        retryDelay: (attemptIndex: number): number => Math.min(1000 * 2 ** attemptIndex, 30000),\n        \n        // Performance optimization - keep previous data while fetching new data\n        placeholderData: (previousData: unknown) => previousData,\n        \n        // Additional stale-while-revalidate behavior\n        // Note: staleTime and gcTime already set above\n      },\n      mutations: {\n        retry: 1, // Only retry mutations once\n        retryDelay: 1000,\n      },\n    },\n  });\n}\n\n/**\n * Query key factory for consistent naming\n */\nexport const queryKeys = {\n  // Authentication\n  auth: ['auth'] as const,\n  authUser: () => [...queryKeys.auth, 'user'] as const,\n  \n  // Dashboards\n  dashboards: ['dashboards'] as const,\n  dashboardsList: () => [...queryKeys.dashboards, 'list'] as const,\n  dashboard: (id: string) => [...queryKeys.dashboards, 'detail', id] as const,\n  \n  // Analytics (future)\n  analytics: ['analytics'] as const,\n  \n  // Settings\n  settings: ['settings'] as const,\n  userSettings: (userId: string) => [...queryKeys.settings, 'user', userId] as const,\n} as const;\n\n/**\n * Specialized query options for different data types\n */\nexport const createQueryOptions = {\n  /**\n   * For dashboard data - medium update frequency\n   */\n  dashboard: (id?: string): Record<string, unknown> => ({\n    ...QUERY_CONFIG.DYNAMIC,\n    queryKey: id ? queryKeys.dashboard(id) : queryKeys.dashboardsList(),\n  }),\n\n  /**\n   * For authentication data - high security, frequent checks\n   */\n  auth: (): Record<string, unknown> => ({\n    ...QUERY_CONFIG.CRITICAL,\n    queryKey: queryKeys.authUser(),\n  }),\n\n  /**\n   * For settings data - infrequent updates\n   */\n  settings: (userId?: string): Record<string, unknown> => ({\n    ...QUERY_CONFIG.STATIC,\n    queryKey: userId ? queryKeys.userSettings(userId) : queryKeys.settings,\n  }),\n\n  /**\n   * For real-time analytics - frequent updates\n   */\n  analytics: (): Record<string, unknown> => ({\n    ...QUERY_CONFIG.REALTIME,\n    queryKey: queryKeys.analytics,\n  }),\n};\n\n/**\n * Network status detection for adaptive behavior\n */\nexport function getNetworkOptimizedConfig(): Record<string, unknown> {\n  // Check if we're in a slow network environment\n  const connection = (navigator as unknown as Record<string, unknown>)?.connection as Record<string, string> | undefined;\n  const isSlowNetwork = connection?.effectiveType === '2g' || connection?.effectiveType === 'slow-2g';\n  \n  if (isSlowNetwork) {\n    return {\n      staleTime: 5 * 60 * 1000, // Keep data fresh longer on slow networks\n      gcTime: 30 * 60 * 1000, // Cache longer\n      refetchOnWindowFocus: false, // Reduce network requests\n    };\n  }\n  \n  return QUERY_CONFIG.DYNAMIC;\n}\n\n/**\n * Development-specific query client with debugging\n */\nexport function createDevQueryClient(): QueryClient {\n  const client = createOptimizedQueryClient();\n  \n  if (process.env.NODE_ENV === 'development') {\n    // Enable React Query DevTools logging\n    client.setMutationDefaults(['debug'], {\n      onSuccess: () => {\n        if (process.env.NODE_ENV === 'development') {\n          // Mutation success\n        }\n      },\n      onError: () => {\n        if (process.env.NODE_ENV === 'development') {\n          // Mutation error\n        }\n      },\n    });\n  }\n  \n  return client;\n}"],
      names: ["QUERY_CONFIG", "createDevQueryClient", "createOptimizedQueryClient", "createQueryOptions", "getNetworkOptimizedConfig", "queryKeys", "REALTIME", "staleTime", "gcTime", "refetchOnWindowFocus", "refetchInterval", "DYNAMIC", "STATIC", "CRITICAL", "refetchOnMount", "BACKGROUND", "QueryClient", "defaultOptions", "queries", "refetchOnReconnect", "retry", "failureCount", "error", "status", "retryDelay", "attemptIndex", "Math", "min", "placeholderData", "previousData", "mutations", "auth", "authUser", "dashboards", "dashboardsList", "dashboard", "id", "analytics", "settings", "userSettings", "userId", "queryKey", "connection", "navigator", "isSlowNetwork", "effectiveType", "client", "process", "env", "NODE_ENV", "setMutationDefaults", "onSuccess", "onError"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d74bd814bd670a692abe584e6e7e1f02bf2d5027"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_16egbcqm28 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_16egbcqm28();
cov_16egbcqm28().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_16egbcqm28().f[0]++;
  cov_16egbcqm28().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_16egbcqm28().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_16egbcqm28().s[3]++;
_export(exports, {
  get QUERY_CONFIG() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[1]++;
    cov_16egbcqm28().s[4]++;
    return QUERY_CONFIG;
  },
  get createDevQueryClient() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[2]++;
    cov_16egbcqm28().s[5]++;
    return createDevQueryClient;
  },
  get createOptimizedQueryClient() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[3]++;
    cov_16egbcqm28().s[6]++;
    return createOptimizedQueryClient;
  },
  get createQueryOptions() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[4]++;
    cov_16egbcqm28().s[7]++;
    return createQueryOptions;
  },
  get getNetworkOptimizedConfig() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[5]++;
    cov_16egbcqm28().s[8]++;
    return getNetworkOptimizedConfig;
  },
  get queryKeys() {
    /* istanbul ignore next */
    cov_16egbcqm28().f[6]++;
    cov_16egbcqm28().s[9]++;
    return queryKeys;
  }
});
const _reactquery =
/* istanbul ignore next */
(cov_16egbcqm28().s[10]++, require("@tanstack/react-query"));
const QUERY_CONFIG =
/* istanbul ignore next */
(cov_16egbcqm28().s[11]++, {
  // Fast-changing data (user interactions, real-time data)
  REALTIME: {
    staleTime: 0,
    gcTime: 5 * 60 * 1000,
    refetchOnWindowFocus: true,
    refetchInterval: 30 * 1000
  },
  // Medium-changing data (dashboard lists, user profiles)
  DYNAMIC: {
    staleTime: 2 * 60 * 1000,
    gcTime: 10 * 60 * 1000,
    refetchOnWindowFocus: true,
    refetchInterval: false
  },
  // Slow-changing data (settings, configurations)
  STATIC: {
    staleTime: 15 * 60 * 1000,
    gcTime: 60 * 60 * 1000,
    refetchOnWindowFocus: false,
    refetchInterval: false
  },
  // Critical data (authentication, permissions)
  CRITICAL: {
    staleTime: 30 * 1000,
    gcTime: 5 * 60 * 1000,
    refetchOnWindowFocus: true,
    refetchOnMount: true,
    refetchInterval: 60 * 1000
  },
  // Background data (analytics, logs)
  BACKGROUND: {
    staleTime: 5 * 60 * 1000,
    gcTime: 30 * 60 * 1000,
    refetchOnWindowFocus: false,
    refetchInterval: 5 * 60 * 1000
  }
});
function createOptimizedQueryClient() {
  /* istanbul ignore next */
  cov_16egbcqm28().f[7]++;
  cov_16egbcqm28().s[12]++;
  return new _reactquery.QueryClient({
    defaultOptions: {
      queries: {
        // Default to DYNAMIC config for most use cases
        staleTime: QUERY_CONFIG.DYNAMIC.staleTime,
        gcTime: QUERY_CONFIG.DYNAMIC.gcTime,
        // Network optimization
        refetchOnWindowFocus: true,
        refetchOnReconnect: true,
        refetchOnMount: true,
        // Error handling
        retry: (failureCount, error) => {
          /* istanbul ignore next */
          cov_16egbcqm28().f[8]++;
          cov_16egbcqm28().s[13]++;
          // Don't retry on 404s or authentication errors
          if (
          /* istanbul ignore next */
          (cov_16egbcqm28().b[1][0]++, error?.status === 404) ||
          /* istanbul ignore next */
          (cov_16egbcqm28().b[1][1]++, error?.status === 401)) {
            /* istanbul ignore next */
            cov_16egbcqm28().b[0][0]++;
            cov_16egbcqm28().s[14]++;
            return false;
          } else
          /* istanbul ignore next */
          {
            cov_16egbcqm28().b[0][1]++;
          }
          // Retry up to 3 times for other errors
          cov_16egbcqm28().s[15]++;
          return failureCount < 3;
        },
        retryDelay: attemptIndex => {
          /* istanbul ignore next */
          cov_16egbcqm28().f[9]++;
          cov_16egbcqm28().s[16]++;
          return Math.min(1000 * 2 ** attemptIndex, 30000);
        },
        // Performance optimization - keep previous data while fetching new data
        placeholderData: previousData => {
          /* istanbul ignore next */
          cov_16egbcqm28().f[10]++;
          cov_16egbcqm28().s[17]++;
          return previousData;
        }
      },
      mutations: {
        retry: 1,
        retryDelay: 1000
      }
    }
  });
}
const queryKeys =
/* istanbul ignore next */
(cov_16egbcqm28().s[18]++, {
  // Authentication
  auth: ['auth'],
  authUser: () => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[11]++;
    cov_16egbcqm28().s[19]++;
    return [...queryKeys.auth, 'user'];
  },
  // Dashboards
  dashboards: ['dashboards'],
  dashboardsList: () => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[12]++;
    cov_16egbcqm28().s[20]++;
    return [...queryKeys.dashboards, 'list'];
  },
  dashboard: id => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[13]++;
    cov_16egbcqm28().s[21]++;
    return [...queryKeys.dashboards, 'detail', id];
  },
  // Analytics (future)
  analytics: ['analytics'],
  // Settings
  settings: ['settings'],
  userSettings: userId => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[14]++;
    cov_16egbcqm28().s[22]++;
    return [...queryKeys.settings, 'user', userId];
  }
});
const createQueryOptions =
/* istanbul ignore next */
(cov_16egbcqm28().s[23]++, {
  /**
  * For dashboard data - medium update frequency
  */
  dashboard: id => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[15]++;
    cov_16egbcqm28().s[24]++;
    return {
      ...QUERY_CONFIG.DYNAMIC,
      queryKey: id ?
      /* istanbul ignore next */
      (cov_16egbcqm28().b[2][0]++, queryKeys.dashboard(id)) :
      /* istanbul ignore next */
      (cov_16egbcqm28().b[2][1]++, queryKeys.dashboardsList())
    };
  },
  /**
  * For authentication data - high security, frequent checks
  */
  auth: () => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[16]++;
    cov_16egbcqm28().s[25]++;
    return {
      ...QUERY_CONFIG.CRITICAL,
      queryKey: queryKeys.authUser()
    };
  },
  /**
  * For settings data - infrequent updates
  */
  settings: userId => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[17]++;
    cov_16egbcqm28().s[26]++;
    return {
      ...QUERY_CONFIG.STATIC,
      queryKey: userId ?
      /* istanbul ignore next */
      (cov_16egbcqm28().b[3][0]++, queryKeys.userSettings(userId)) :
      /* istanbul ignore next */
      (cov_16egbcqm28().b[3][1]++, queryKeys.settings)
    };
  },
  /**
  * For real-time analytics - frequent updates
  */
  analytics: () => {
    /* istanbul ignore next */
    cov_16egbcqm28().f[18]++;
    cov_16egbcqm28().s[27]++;
    return {
      ...QUERY_CONFIG.REALTIME,
      queryKey: queryKeys.analytics
    };
  }
});
function getNetworkOptimizedConfig() {
  /* istanbul ignore next */
  cov_16egbcqm28().f[19]++;
  // Check if we're in a slow network environment
  const connection =
  /* istanbul ignore next */
  (cov_16egbcqm28().s[28]++, navigator?.connection);
  const isSlowNetwork =
  /* istanbul ignore next */
  (cov_16egbcqm28().s[29]++,
  /* istanbul ignore next */
  (cov_16egbcqm28().b[4][0]++, connection?.effectiveType === '2g') ||
  /* istanbul ignore next */
  (cov_16egbcqm28().b[4][1]++, connection?.effectiveType === 'slow-2g'));
  /* istanbul ignore next */
  cov_16egbcqm28().s[30]++;
  if (isSlowNetwork) {
    /* istanbul ignore next */
    cov_16egbcqm28().b[5][0]++;
    cov_16egbcqm28().s[31]++;
    return {
      staleTime: 5 * 60 * 1000,
      gcTime: 30 * 60 * 1000,
      refetchOnWindowFocus: false
    };
  } else
  /* istanbul ignore next */
  {
    cov_16egbcqm28().b[5][1]++;
  }
  cov_16egbcqm28().s[32]++;
  return QUERY_CONFIG.DYNAMIC;
}
function createDevQueryClient() {
  /* istanbul ignore next */
  cov_16egbcqm28().f[20]++;
  const client =
  /* istanbul ignore next */
  (cov_16egbcqm28().s[33]++, createOptimizedQueryClient());
  /* istanbul ignore next */
  cov_16egbcqm28().s[34]++;
  if (process.env.NODE_ENV === 'development') {
    /* istanbul ignore next */
    cov_16egbcqm28().b[6][0]++;
    cov_16egbcqm28().s[35]++;
    // Enable React Query DevTools logging
    client.setMutationDefaults(['debug'], {
      onSuccess: () => {
        /* istanbul ignore next */
        cov_16egbcqm28().f[21]++;
        cov_16egbcqm28().s[36]++;
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_16egbcqm28().b[7][0]++;
        } // Mutation success
        else
        /* istanbul ignore next */
        {
          cov_16egbcqm28().b[7][1]++;
        }
      },
      onError: () => {
        /* istanbul ignore next */
        cov_16egbcqm28().f[22]++;
        cov_16egbcqm28().s[37]++;
        if (process.env.NODE_ENV === 'development') {
          /* istanbul ignore next */
          cov_16egbcqm28().b[8][0]++;
        } // Mutation error
        else
        /* istanbul ignore next */
        {
          cov_16egbcqm28().b[8][1]++;
        }
      }
    });
  } else
  /* istanbul ignore next */
  {
    cov_16egbcqm28().b[6][1]++;
  }
  cov_16egbcqm28().s[38]++;
  return client;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,