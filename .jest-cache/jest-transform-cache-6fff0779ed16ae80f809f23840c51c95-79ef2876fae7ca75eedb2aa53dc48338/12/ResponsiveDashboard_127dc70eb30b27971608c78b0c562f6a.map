{"version":3,"names":["cov_vw7bz6qhv","actualCoverage","s","EMPTY_LAYOUTS","f","ResponsiveDashboard","generateDefaultLayouts","mergeLayouts","removeWidgetFromLayouts","updateWidgetInLayouts","ResponsiveGridLayout","_reactgridlayout","WidthProvider","Responsive","widgets","layouts","initialLayouts","onLayoutChange","isEditMode","b","onEditWidget","onDeleteWidget","onDuplicateWidget","className","setLayouts","_react","useState","handleLayoutChange","useCallback","currentLayout","allLayouts","gridProps","breakpoints","lg","md","sm","xs","xxs","cols","rowHeight","isDraggable","isResizable","compactType","preventCollision","_jsxruntime","jsx","map","widget","_WidgetRenderer","WidgetRenderer","onEdit","id","undefined","onDelete","onDuplicate","widgetId","type","defaultSizes","line","w","h","bar","pie","kpi","text","size","i","x","y","Math","min","existingLayouts","newLayouts","merged","forEach","bp","updated","Object","entries","breakpoint","layout","filter","item","updates"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/ResponsiveDashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useCallback, useMemo } from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport type { Layout, Layouts } from 'react-grid-layout';\n\nimport { DashboardWidget } from './DashboardCanvas';\nimport { WidgetRenderer } from './WidgetRenderer';\n\n// Import grid layout styles\nimport '@/styles/react-grid-layout.css';\n\n// Create responsive grid layout component\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\n/**\n * Responsive Dashboard Props\n */\ninterface ResponsiveDashboardProps {\n  widgets: DashboardWidget[];\n  layouts: Layouts;\n  onLayoutChange?: (currentLayout: Layout[], allLayouts: Layouts) => void;\n  isEditMode?: boolean;\n  onEditWidget?: (widgetId: string) => void;\n  onDeleteWidget?: (widgetId: string) => void;\n  onDuplicateWidget?: (widgetId: string) => void;\n  className?: string;\n}\n\n/**\n * Responsive Dashboard Component\n * Automatically adjusts layout for different screen sizes\n */\nexport function ResponsiveDashboard({\n  widgets,\n  layouts: initialLayouts,\n  onLayoutChange,\n  isEditMode = false,\n  onEditWidget,\n  onDeleteWidget,\n  onDuplicateWidget,\n  className = '',\n}: ResponsiveDashboardProps) {\n  const [layouts, setLayouts] = useState<Layouts>(initialLayouts);\n\n  // Handle layout changes across all breakpoints\n  const handleLayoutChange = useCallback((currentLayout: Layout[], allLayouts: Layouts) => {\n    setLayouts(allLayouts);\n    onLayoutChange?.(currentLayout, allLayouts);\n  }, [onLayoutChange]);\n\n  // Grid configuration\n  const gridProps = {\n    className: `react-grid-layout ${isEditMode ? 'dashboard-edit-mode' : ''} ${className}`,\n    layouts: layouts,\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n    rowHeight: 80,\n    isDraggable: isEditMode,\n    isResizable: isEditMode,\n    compactType: 'vertical' as const,\n    preventCollision: false,\n    onLayoutChange: handleLayoutChange,\n  };\n\n  return (\n    <div className=\"dashboard-grid-container\">\n      <ResponsiveGridLayout {...gridProps}>\n        {widgets.map((widget) => (\n          <div key={widget.id} className=\"widget-content\">\n            <WidgetRenderer\n              widget={widget}\n              isEditMode={isEditMode}\n              onEdit={onEditWidget ? () => onEditWidget(widget.id) : undefined}\n              onDelete={onDeleteWidget ? () => onDeleteWidget(widget.id) : undefined}\n              onDuplicate={onDuplicateWidget ? () => onDuplicateWidget(widget.id) : undefined}\n            />\n          </div>\n        ))}\n      </ResponsiveGridLayout>\n    </div>\n  );\n}\n\n/**\n * Generate default layouts for a widget\n */\nexport function generateDefaultLayouts(widgetId: string, type: DashboardWidget['type']): Layouts {\n  // Default sizes based on widget type\n  const defaultSizes = {\n    line: { w: 6, h: 4 },\n    bar: { w: 6, h: 4 },\n    pie: { w: 4, h: 4 },\n    kpi: { w: 3, h: 2 },\n    text: { w: 4, h: 3 },\n  };\n\n  const size = defaultSizes[type];\n\n  return {\n    lg: [{ i: widgetId, x: 0, y: 0, ...size }],\n    md: [{ i: widgetId, x: 0, y: 0, w: Math.min(size.w, 10), h: size.h }],\n    sm: [{ i: widgetId, x: 0, y: 0, w: Math.min(size.w, 6), h: size.h }],\n    xs: [{ i: widgetId, x: 0, y: 0, w: 4, h: size.h }],\n    xxs: [{ i: widgetId, x: 0, y: 0, w: 2, h: size.h }],\n  };\n}\n\n/**\n * Merge layouts for multiple widgets\n */\nexport function mergeLayouts(existingLayouts: Layouts, newLayouts: Layouts): Layouts {\n  const merged: Layouts = {};\n  const breakpoints = ['lg', 'md', 'sm', 'xs', 'xxs'];\n\n  breakpoints.forEach((bp) => {\n    merged[bp] = [\n      ...(existingLayouts[bp] || []),\n      ...(newLayouts[bp] || []),\n    ];\n  });\n\n  return merged;\n}\n\n/**\n * Remove widget from all layout breakpoints\n */\nexport function removeWidgetFromLayouts(layouts: Layouts, widgetId: string): Layouts {\n  const updated: Layouts = {};\n  \n  Object.entries(layouts).forEach(([breakpoint, layout]) => {\n    updated[breakpoint] = layout.filter(item => item.i !== widgetId);\n  });\n\n  return updated;\n}\n\n/**\n * Update widget position in layouts\n */\nexport function updateWidgetInLayouts(\n  layouts: Layouts, \n  widgetId: string, \n  updates: Partial<Layout>\n): Layouts {\n  const updated: Layouts = {};\n  \n  Object.entries(layouts).forEach(([breakpoint, layout]) => {\n    updated[breakpoint] = layout.map(item => \n      item.i === widgetId ? { ...item, ...updates } : item\n    );\n  });\n\n  return updated;\n}\n\n/**\n * Default empty dashboard layouts\n */\nexport const EMPTY_LAYOUTS: Layouts = {\n  lg: [],\n  md: [],\n  sm: [],\n  xs: [],\n  xxs: [],\n};"],"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","ignoreList":[]}