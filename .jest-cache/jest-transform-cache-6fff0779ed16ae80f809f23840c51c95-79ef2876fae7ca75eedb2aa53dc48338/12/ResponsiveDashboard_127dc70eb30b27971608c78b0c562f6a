ea7b37c03b70b82c8f3257d2397eec9b
'use client';
"use strict";

/* istanbul ignore next */
function cov_vw7bz6qhv() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/ResponsiveDashboard.tsx";
  var hash = "32586f9ce5f1e7247a00b96a28d50ca7838e9391";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/ResponsiveDashboard.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 31,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 29
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 38
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 28
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 39
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 37
        }
      },
      "10": {
        start: {
          line: 32,
          column: 20
        },
        end: {
          line: 32,
          column: 48
        }
      },
      "11": {
        start: {
          line: 33,
          column: 15
        },
        end: {
          line: 33,
          column: 31
        }
      },
      "12": {
        start: {
          line: 34,
          column: 25
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "13": {
        start: {
          line: 35,
          column: 24
        },
        end: {
          line: 35,
          column: 51
        }
      },
      "14": {
        start: {
          line: 36,
          column: 0
        },
        end: {
          line: 36,
          column: 46
        }
      },
      "15": {
        start: {
          line: 38,
          column: 29
        },
        end: {
          line: 38,
          column: 93
        }
      },
      "16": {
        start: {
          line: 40,
          column: 34
        },
        end: {
          line: 40,
          column: 70
        }
      },
      "17": {
        start: {
          line: 42,
          column: 31
        },
        end: {
          line: 47,
          column: 6
        }
      },
      "18": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 31
        }
      },
      "19": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 52
        }
      },
      "20": {
        start: {
          line: 49,
          column: 22
        },
        end: {
          line: 72,
          column: 5
        }
      },
      "21": {
        start: {
          line: 73,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "22": {
        start: {
          line: 77,
          column: 58
        },
        end: {
          line: 86,
          column: 29
        }
      },
      "23": {
        start: {
          line: 82,
          column: 51
        },
        end: {
          line: 82,
          column: 74
        }
      },
      "24": {
        start: {
          line: 83,
          column: 55
        },
        end: {
          line: 83,
          column: 80
        }
      },
      "25": {
        start: {
          line: 84,
          column: 61
        },
        end: {
          line: 84,
          column: 89
        }
      },
      "26": {
        start: {
          line: 92,
          column: 25
        },
        end: {
          line: 113,
          column: 5
        }
      },
      "27": {
        start: {
          line: 114,
          column: 17
        },
        end: {
          line: 114,
          column: 35
        }
      },
      "28": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 160,
          column: 6
        }
      },
      "29": {
        start: {
          line: 163,
          column: 19
        },
        end: {
          line: 163,
          column: 21
        }
      },
      "30": {
        start: {
          line: 164,
          column: 24
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "31": {
        start: {
          line: 171,
          column: 4
        },
        end: {
          line: 176,
          column: 7
        }
      },
      "32": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 175,
          column: 10
        }
      },
      "33": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 177,
          column: 18
        }
      },
      "34": {
        start: {
          line: 180,
          column: 20
        },
        end: {
          line: 180,
          column: 22
        }
      },
      "35": {
        start: {
          line: 181,
          column: 4
        },
        end: {
          line: 183,
          column: 7
        }
      },
      "36": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 73
        }
      },
      "37": {
        start: {
          line: 182,
          column: 52
        },
        end: {
          line: 182,
          column: 71
        }
      },
      "38": {
        start: {
          line: 184,
          column: 4
        },
        end: {
          line: 184,
          column: 19
        }
      },
      "39": {
        start: {
          line: 187,
          column: 20
        },
        end: {
          line: 187,
          column: 22
        }
      },
      "40": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "41": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 192,
          column: 22
        }
      },
      "42": {
        start: {
          line: 189,
          column: 49
        },
        end: {
          line: 192,
          column: 20
        }
      },
      "43": {
        start: {
          line: 194,
          column: 4
        },
        end: {
          line: 194,
          column: 19
        }
      },
      "44": {
        start: {
          line: 196,
          column: 22
        },
        end: {
          line: 202,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 25
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 31
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 34
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 24
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 35
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "ResponsiveDashboard",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 28
          }
        },
        loc: {
          start: {
            line: 39,
            column: 168
          },
          end: {
            line: 89,
            column: 1
          }
        },
        line: 39
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 42,
            column: 55
          },
          end: {
            line: 42,
            column: 56
          }
        },
        loc: {
          start: {
            line: 42,
            column: 84
          },
          end: {
            line: 45,
            column: 5
          }
        },
        line: 42
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 77,
            column: 35
          }
        },
        loc: {
          start: {
            line: 77,
            column: 58
          },
          end: {
            line: 86,
            column: 29
          }
        },
        line: 77
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 82,
            column: 48
          }
        },
        loc: {
          start: {
            line: 82,
            column: 51
          },
          end: {
            line: 82,
            column: 74
          }
        },
        line: 82
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 52
          }
        },
        loc: {
          start: {
            line: 83,
            column: 55
          },
          end: {
            line: 83,
            column: 80
          }
        },
        line: 83
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 84,
            column: 58
          }
        },
        loc: {
          start: {
            line: 84,
            column: 61
          },
          end: {
            line: 84,
            column: 89
          }
        },
        line: 84
      },
      "13": {
        name: "generateDefaultLayouts",
        decl: {
          start: {
            line: 90,
            column: 9
          },
          end: {
            line: 90,
            column: 31
          }
        },
        loc: {
          start: {
            line: 90,
            column: 48
          },
          end: {
            line: 161,
            column: 1
          }
        },
        line: 90
      },
      "14": {
        name: "mergeLayouts",
        decl: {
          start: {
            line: 162,
            column: 9
          },
          end: {
            line: 162,
            column: 21
          }
        },
        loc: {
          start: {
            line: 162,
            column: 51
          },
          end: {
            line: 178,
            column: 1
          }
        },
        line: 162
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 171,
            column: 24
          },
          end: {
            line: 171,
            column: 25
          }
        },
        loc: {
          start: {
            line: 171,
            column: 30
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 171
      },
      "16": {
        name: "removeWidgetFromLayouts",
        decl: {
          start: {
            line: 179,
            column: 9
          },
          end: {
            line: 179,
            column: 32
          }
        },
        loc: {
          start: {
            line: 179,
            column: 52
          },
          end: {
            line: 185,
            column: 1
          }
        },
        line: 179
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 181,
            column: 37
          }
        },
        loc: {
          start: {
            line: 181,
            column: 60
          },
          end: {
            line: 183,
            column: 5
          }
        },
        line: 181
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 182,
            column: 44
          },
          end: {
            line: 182,
            column: 45
          }
        },
        loc: {
          start: {
            line: 182,
            column: 52
          },
          end: {
            line: 182,
            column: 71
          }
        },
        line: 182
      },
      "19": {
        name: "updateWidgetInLayouts",
        decl: {
          start: {
            line: 186,
            column: 9
          },
          end: {
            line: 186,
            column: 30
          }
        },
        loc: {
          start: {
            line: 186,
            column: 59
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 186
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 188,
            column: 36
          },
          end: {
            line: 188,
            column: 37
          }
        },
        loc: {
          start: {
            line: 188,
            column: 60
          },
          end: {
            line: 193,
            column: 5
          }
        },
        line: 188
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 189,
            column: 41
          },
          end: {
            line: 189,
            column: 42
          }
        },
        loc: {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 192,
            column: 20
          }
        },
        line: 189
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 39,
            column: 81
          },
          end: {
            line: 39,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 94
          },
          end: {
            line: 39,
            column: 99
          }
        }],
        line: 39
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 150
          },
          end: {
            line: 39,
            column: 164
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 162
          },
          end: {
            line: 39,
            column: 164
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 50,
            column: 40
          },
          end: {
            line: 50,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 50,
            column: 74
          }
        }, {
          start: {
            line: 50,
            column: 77
          },
          end: {
            line: 50,
            column: 79
          }
        }],
        line: 50
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 32
          },
          end: {
            line: 82,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 47
          },
          end: {
            line: 82,
            column: 74
          }
        }, {
          start: {
            line: 82,
            column: 77
          },
          end: {
            line: 82,
            column: 86
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 51
          },
          end: {
            line: 83,
            column: 80
          }
        }, {
          start: {
            line: 83,
            column: 83
          },
          end: {
            line: 83,
            column: 92
          }
        }],
        line: 83
      },
      "5": {
        loc: {
          start: {
            line: 84,
            column: 37
          },
          end: {
            line: 84,
            column: 101
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 57
          },
          end: {
            line: 84,
            column: 89
          }
        }, {
          start: {
            line: 84,
            column: 92
          },
          end: {
            line: 84,
            column: 101
          }
        }],
        line: 84
      },
      "6": {
        loc: {
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 40
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 173,
            column: 15
          },
          end: {
            line: 173,
            column: 34
          }
        }, {
          start: {
            line: 173,
            column: 38
          },
          end: {
            line: 173,
            column: 40
          }
        }],
        line: 173
      },
      "7": {
        loc: {
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 174,
            column: 15
          },
          end: {
            line: 174,
            column: 29
          }
        }, {
          start: {
            line: 174,
            column: 33
          },
          end: {
            line: 174,
            column: 35
          }
        }],
        line: 174
      },
      "8": {
        loc: {
          start: {
            line: 189,
            column: 49
          },
          end: {
            line: 192,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 71
          },
          end: {
            line: 192,
            column: 13
          }
        }, {
          start: {
            line: 192,
            column: 16
          },
          end: {
            line: 192,
            column: 20
          }
        }],
        line: 189
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/ResponsiveDashboard.tsx"],
      sourcesContent: ["'use client';\n\nimport { useState, useCallback, useMemo } from 'react';\nimport { Responsive, WidthProvider } from 'react-grid-layout';\nimport type { Layout, Layouts } from 'react-grid-layout';\n\nimport { DashboardWidget } from './DashboardCanvas';\nimport { WidgetRenderer } from './WidgetRenderer';\n\n// Import grid layout styles\nimport '@/styles/react-grid-layout.css';\n\n// Create responsive grid layout component\nconst ResponsiveGridLayout = WidthProvider(Responsive);\n\n/**\n * Responsive Dashboard Props\n */\ninterface ResponsiveDashboardProps {\n  widgets: DashboardWidget[];\n  layouts: Layouts;\n  onLayoutChange?: (currentLayout: Layout[], allLayouts: Layouts) => void;\n  isEditMode?: boolean;\n  onEditWidget?: (widgetId: string) => void;\n  onDeleteWidget?: (widgetId: string) => void;\n  onDuplicateWidget?: (widgetId: string) => void;\n  className?: string;\n}\n\n/**\n * Responsive Dashboard Component\n * Automatically adjusts layout for different screen sizes\n */\nexport function ResponsiveDashboard({\n  widgets,\n  layouts: initialLayouts,\n  onLayoutChange,\n  isEditMode = false,\n  onEditWidget,\n  onDeleteWidget,\n  onDuplicateWidget,\n  className = '',\n}: ResponsiveDashboardProps) {\n  const [layouts, setLayouts] = useState<Layouts>(initialLayouts);\n\n  // Handle layout changes across all breakpoints\n  const handleLayoutChange = useCallback((currentLayout: Layout[], allLayouts: Layouts) => {\n    setLayouts(allLayouts);\n    onLayoutChange?.(currentLayout, allLayouts);\n  }, [onLayoutChange]);\n\n  // Grid configuration\n  const gridProps = {\n    className: `react-grid-layout ${isEditMode ? 'dashboard-edit-mode' : ''} ${className}`,\n    layouts: layouts,\n    breakpoints: { lg: 1200, md: 996, sm: 768, xs: 480, xxs: 0 },\n    cols: { lg: 12, md: 10, sm: 6, xs: 4, xxs: 2 },\n    rowHeight: 80,\n    isDraggable: isEditMode,\n    isResizable: isEditMode,\n    compactType: 'vertical' as const,\n    preventCollision: false,\n    onLayoutChange: handleLayoutChange,\n  };\n\n  return (\n    <div className=\"dashboard-grid-container\">\n      <ResponsiveGridLayout {...gridProps}>\n        {widgets.map((widget) => (\n          <div key={widget.id} className=\"widget-content\">\n            <WidgetRenderer\n              widget={widget}\n              isEditMode={isEditMode}\n              onEdit={onEditWidget ? () => onEditWidget(widget.id) : undefined}\n              onDelete={onDeleteWidget ? () => onDeleteWidget(widget.id) : undefined}\n              onDuplicate={onDuplicateWidget ? () => onDuplicateWidget(widget.id) : undefined}\n            />\n          </div>\n        ))}\n      </ResponsiveGridLayout>\n    </div>\n  );\n}\n\n/**\n * Generate default layouts for a widget\n */\nexport function generateDefaultLayouts(widgetId: string, type: DashboardWidget['type']): Layouts {\n  // Default sizes based on widget type\n  const defaultSizes = {\n    line: { w: 6, h: 4 },\n    bar: { w: 6, h: 4 },\n    pie: { w: 4, h: 4 },\n    kpi: { w: 3, h: 2 },\n    text: { w: 4, h: 3 },\n  };\n\n  const size = defaultSizes[type];\n\n  return {\n    lg: [{ i: widgetId, x: 0, y: 0, ...size }],\n    md: [{ i: widgetId, x: 0, y: 0, w: Math.min(size.w, 10), h: size.h }],\n    sm: [{ i: widgetId, x: 0, y: 0, w: Math.min(size.w, 6), h: size.h }],\n    xs: [{ i: widgetId, x: 0, y: 0, w: 4, h: size.h }],\n    xxs: [{ i: widgetId, x: 0, y: 0, w: 2, h: size.h }],\n  };\n}\n\n/**\n * Merge layouts for multiple widgets\n */\nexport function mergeLayouts(existingLayouts: Layouts, newLayouts: Layouts): Layouts {\n  const merged: Layouts = {};\n  const breakpoints = ['lg', 'md', 'sm', 'xs', 'xxs'];\n\n  breakpoints.forEach((bp) => {\n    merged[bp] = [\n      ...(existingLayouts[bp] || []),\n      ...(newLayouts[bp] || []),\n    ];\n  });\n\n  return merged;\n}\n\n/**\n * Remove widget from all layout breakpoints\n */\nexport function removeWidgetFromLayouts(layouts: Layouts, widgetId: string): Layouts {\n  const updated: Layouts = {};\n  \n  Object.entries(layouts).forEach(([breakpoint, layout]) => {\n    updated[breakpoint] = layout.filter(item => item.i !== widgetId);\n  });\n\n  return updated;\n}\n\n/**\n * Update widget position in layouts\n */\nexport function updateWidgetInLayouts(\n  layouts: Layouts, \n  widgetId: string, \n  updates: Partial<Layout>\n): Layouts {\n  const updated: Layouts = {};\n  \n  Object.entries(layouts).forEach(([breakpoint, layout]) => {\n    updated[breakpoint] = layout.map(item => \n      item.i === widgetId ? { ...item, ...updates } : item\n    );\n  });\n\n  return updated;\n}\n\n/**\n * Default empty dashboard layouts\n */\nexport const EMPTY_LAYOUTS: Layouts = {\n  lg: [],\n  md: [],\n  sm: [],\n  xs: [],\n  xxs: [],\n};"],
      names: ["EMPTY_LAYOUTS", "ResponsiveDashboard", "generateDefaultLayouts", "mergeLayouts", "removeWidgetFromLayouts", "updateWidgetInLayouts", "ResponsiveGridLayout", "WidthProvider", "Responsive", "widgets", "layouts", "initialLayouts", "onLayoutChange", "isEditMode", "onEditWidget", "onDeleteWidget", "onDuplicateWidget", "className", "setLayouts", "useState", "handleLayoutChange", "useCallback", "currentLayout", "allLayouts", "gridProps", "breakpoints", "lg", "md", "sm", "xs", "xxs", "cols", "rowHeight", "isDraggable", "isResizable", "compactType", "preventCollision", "div", "map", "widget", "WidgetRenderer", "onEdit", "id", "undefined", "onDelete", "onDuplicate", "widgetId", "type", "defaultSizes", "line", "w", "h", "bar", "pie", "kpi", "text", "size", "i", "x", "y", "Math", "min", "existingLayouts", "newLayouts", "merged", "forEach", "bp", "updated", "Object", "entries", "breakpoint", "layout", "filter", "item", "updates"],
      mappings: "AAAA;;;;;;;;;;;;QAgKaA;eAAAA;;QA/HGC;eAAAA;;QAsDAC;eAAAA;;QAwBAC;eAAAA;;QAiBAC;eAAAA;;QAaAC;eAAAA;;;;uBA3I+B;iCACL;gCAIX;QAGxB;AAEP,0CAA0C;AAC1C,MAAMC,uBAAuBC,IAAAA,8BAAa,EAACC,2BAAU;AAoB9C,SAASP,oBAAoB,EAClCQ,OAAO,EACPC,SAASC,cAAc,EACvBC,cAAc,EACdC,aAAa,KAAK,EAClBC,YAAY,EACZC,cAAc,EACdC,iBAAiB,EACjBC,YAAY,EAAE,EACW;IACzB,MAAM,CAACP,SAASQ,WAAW,GAAGC,IAAAA,eAAQ,EAAUR;IAEhD,+CAA+C;IAC/C,MAAMS,qBAAqBC,IAAAA,kBAAW,EAAC,CAACC,eAAyBC;QAC/DL,WAAWK;QACXX,iBAAiBU,eAAeC;IAClC,GAAG;QAACX;KAAe;IAEnB,qBAAqB;IACrB,MAAMY,YAAY;QAChBP,WAAW,CAAC,kBAAkB,EAAEJ,aAAa,wBAAwB,GAAG,CAAC,EAAEI,WAAW;QACtFP,SAASA;QACTe,aAAa;YAAEC,IAAI;YAAMC,IAAI;YAAKC,IAAI;YAAKC,IAAI;YAAKC,KAAK;QAAE;QAC3DC,MAAM;YAAEL,IAAI;YAAIC,IAAI;YAAIC,IAAI;YAAGC,IAAI;YAAGC,KAAK;QAAE;QAC7CE,WAAW;QACXC,aAAapB;QACbqB,aAAarB;QACbsB,aAAa;QACbC,kBAAkB;QAClBxB,gBAAgBQ;IAClB;IAEA,qBACE,qBAACiB;QAAIpB,WAAU;kBACb,cAAA,qBAACX;YAAsB,GAAGkB,SAAS;sBAChCf,QAAQ6B,GAAG,CAAC,CAACC,uBACZ,qBAACF;oBAAoBpB,WAAU;8BAC7B,cAAA,qBAACuB,8BAAc;wBACbD,QAAQA;wBACR1B,YAAYA;wBACZ4B,QAAQ3B,eAAe,IAAMA,aAAayB,OAAOG,EAAE,IAAIC;wBACvDC,UAAU7B,iBAAiB,IAAMA,eAAewB,OAAOG,EAAE,IAAIC;wBAC7DE,aAAa7B,oBAAoB,IAAMA,kBAAkBuB,OAAOG,EAAE,IAAIC;;mBANhEJ,OAAOG,EAAE;;;AAa7B;AAKO,SAASxC,uBAAuB4C,QAAgB,EAAEC,IAA6B;IACpF,qCAAqC;IACrC,MAAMC,eAAe;QACnBC,MAAM;YAAEC,GAAG;YAAGC,GAAG;QAAE;QACnBC,KAAK;YAAEF,GAAG;YAAGC,GAAG;QAAE;QAClBE,KAAK;YAAEH,GAAG;YAAGC,GAAG;QAAE;QAClBG,KAAK;YAAEJ,GAAG;YAAGC,GAAG;QAAE;QAClBI,MAAM;YAAEL,GAAG;YAAGC,GAAG;QAAE;IACrB;IAEA,MAAMK,OAAOR,YAAY,CAACD,KAAK;IAE/B,OAAO;QACLrB,IAAI;YAAC;gBAAE+B,GAAGX;gBAAUY,GAAG;gBAAGC,GAAG;gBAAG,GAAGH,IAAI;YAAC;SAAE;QAC1C7B,IAAI;YAAC;gBAAE8B,GAAGX;gBAAUY,GAAG;gBAAGC,GAAG;gBAAGT,GAAGU,KAAKC,GAAG,CAACL,KAAKN,CAAC,EAAE;gBAAKC,GAAGK,KAAKL,CAAC;YAAC;SAAE;QACrEvB,IAAI;YAAC;gBAAE6B,GAAGX;gBAAUY,GAAG;gBAAGC,GAAG;gBAAGT,GAAGU,KAAKC,GAAG,CAACL,KAAKN,CAAC,EAAE;gBAAIC,GAAGK,KAAKL,CAAC;YAAC;SAAE;QACpEtB,IAAI;YAAC;gBAAE4B,GAAGX;gBAAUY,GAAG;gBAAGC,GAAG;gBAAGT,GAAG;gBAAGC,GAAGK,KAAKL,CAAC;YAAC;SAAE;QAClDrB,KAAK;YAAC;gBAAE2B,GAAGX;gBAAUY,GAAG;gBAAGC,GAAG;gBAAGT,GAAG;gBAAGC,GAAGK,KAAKL,CAAC;YAAC;SAAE;IACrD;AACF;AAKO,SAAShD,aAAa2D,eAAwB,EAAEC,UAAmB;IACxE,MAAMC,SAAkB,CAAC;IACzB,MAAMvC,cAAc;QAAC;QAAM;QAAM;QAAM;QAAM;KAAM;IAEnDA,YAAYwC,OAAO,CAAC,CAACC;QACnBF,MAAM,CAACE,GAAG,GAAG;eACPJ,eAAe,CAACI,GAAG,IAAI,EAAE;eACzBH,UAAU,CAACG,GAAG,IAAI,EAAE;SACzB;IACH;IAEA,OAAOF;AACT;AAKO,SAAS5D,wBAAwBM,OAAgB,EAAEoC,QAAgB;IACxE,MAAMqB,UAAmB,CAAC;IAE1BC,OAAOC,OAAO,CAAC3D,SAASuD,OAAO,CAAC,CAAC,CAACK,YAAYC,OAAO;QACnDJ,OAAO,CAACG,WAAW,GAAGC,OAAOC,MAAM,CAACC,CAAAA,OAAQA,KAAKhB,CAAC,KAAKX;IACzD;IAEA,OAAOqB;AACT;AAKO,SAAS9D,sBACdK,OAAgB,EAChBoC,QAAgB,EAChB4B,OAAwB;IAExB,MAAMP,UAAmB,CAAC;IAE1BC,OAAOC,OAAO,CAAC3D,SAASuD,OAAO,CAAC,CAAC,CAACK,YAAYC,OAAO;QACnDJ,OAAO,CAACG,WAAW,GAAGC,OAAOjC,GAAG,CAACmC,CAAAA,OAC/BA,KAAKhB,CAAC,KAAKX,WAAW;gBAAE,GAAG2B,IAAI;gBAAE,GAAGC,OAAO;YAAC,IAAID;IAEpD;IAEA,OAAON;AACT;AAKO,MAAMnE,gBAAyB;IACpC0B,IAAI,EAAE;IACNC,IAAI,EAAE;IACNC,IAAI,EAAE;IACNC,IAAI,EAAE;IACNC,KAAK,EAAE;AACT"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "32586f9ce5f1e7247a00b96a28d50ca7838e9391"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_vw7bz6qhv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_vw7bz6qhv();
cov_vw7bz6qhv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[0]++;
  cov_vw7bz6qhv().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_vw7bz6qhv().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_vw7bz6qhv().s[3]++;
_export(exports, {
  get EMPTY_LAYOUTS() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[1]++;
    cov_vw7bz6qhv().s[4]++;
    return EMPTY_LAYOUTS;
  },
  get ResponsiveDashboard() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[2]++;
    cov_vw7bz6qhv().s[5]++;
    return ResponsiveDashboard;
  },
  get generateDefaultLayouts() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[3]++;
    cov_vw7bz6qhv().s[6]++;
    return generateDefaultLayouts;
  },
  get mergeLayouts() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[4]++;
    cov_vw7bz6qhv().s[7]++;
    return mergeLayouts;
  },
  get removeWidgetFromLayouts() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[5]++;
    cov_vw7bz6qhv().s[8]++;
    return removeWidgetFromLayouts;
  },
  get updateWidgetInLayouts() {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[6]++;
    cov_vw7bz6qhv().s[9]++;
    return updateWidgetInLayouts;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[10]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[11]++, require("react"));
const _reactgridlayout =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[12]++, require("react-grid-layout"));
const _WidgetRenderer =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[13]++, require("./WidgetRenderer"));
/* istanbul ignore next */
cov_vw7bz6qhv().s[14]++;
require("../../styles/react-grid-layout.css");
// Create responsive grid layout component
const ResponsiveGridLayout =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[15]++, (0, _reactgridlayout.WidthProvider)(_reactgridlayout.Responsive));
function ResponsiveDashboard({
  widgets,
  layouts: initialLayouts,
  onLayoutChange,
  isEditMode =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().b[0][0]++, false),
  onEditWidget,
  onDeleteWidget,
  onDuplicateWidget,
  className =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().b[1][0]++, '')
}) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[7]++;
  const [layouts, setLayouts] =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[16]++, (0, _react.useState)(initialLayouts));
  // Handle layout changes across all breakpoints
  const handleLayoutChange =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[17]++, (0, _react.useCallback)((currentLayout, allLayouts) => {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[8]++;
    cov_vw7bz6qhv().s[18]++;
    setLayouts(allLayouts);
    /* istanbul ignore next */
    cov_vw7bz6qhv().s[19]++;
    onLayoutChange?.(currentLayout, allLayouts);
  }, [onLayoutChange]));
  // Grid configuration
  const gridProps =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[20]++, {
    className: `react-grid-layout ${isEditMode ?
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[2][0]++, 'dashboard-edit-mode') :
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[2][1]++, '')} ${className}`,
    layouts: layouts,
    breakpoints: {
      lg: 1200,
      md: 996,
      sm: 768,
      xs: 480,
      xxs: 0
    },
    cols: {
      lg: 12,
      md: 10,
      sm: 6,
      xs: 4,
      xxs: 2
    },
    rowHeight: 80,
    isDraggable: isEditMode,
    isResizable: isEditMode,
    compactType: 'vertical',
    preventCollision: false,
    onLayoutChange: handleLayoutChange
  });
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[21]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: "dashboard-grid-container",
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(ResponsiveGridLayout, {
      ...gridProps,
      children: widgets.map(widget => {
        /* istanbul ignore next */
        cov_vw7bz6qhv().f[9]++;
        cov_vw7bz6qhv().s[22]++;
        return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "widget-content",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_WidgetRenderer.WidgetRenderer, {
            widget: widget,
            isEditMode: isEditMode,
            onEdit: onEditWidget ?
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[3][0]++, () => {
              /* istanbul ignore next */
              cov_vw7bz6qhv().f[10]++;
              cov_vw7bz6qhv().s[23]++;
              return onEditWidget(widget.id);
            }) :
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[3][1]++, undefined),
            onDelete: onDeleteWidget ?
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[4][0]++, () => {
              /* istanbul ignore next */
              cov_vw7bz6qhv().f[11]++;
              cov_vw7bz6qhv().s[24]++;
              return onDeleteWidget(widget.id);
            }) :
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[4][1]++, undefined),
            onDuplicate: onDuplicateWidget ?
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[5][0]++, () => {
              /* istanbul ignore next */
              cov_vw7bz6qhv().f[12]++;
              cov_vw7bz6qhv().s[25]++;
              return onDuplicateWidget(widget.id);
            }) :
            /* istanbul ignore next */
            (cov_vw7bz6qhv().b[5][1]++, undefined)
          })
        }, widget.id);
      })
    })
  });
}
function generateDefaultLayouts(widgetId, type) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[13]++;
  // Default sizes based on widget type
  const defaultSizes =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[26]++, {
    line: {
      w: 6,
      h: 4
    },
    bar: {
      w: 6,
      h: 4
    },
    pie: {
      w: 4,
      h: 4
    },
    kpi: {
      w: 3,
      h: 2
    },
    text: {
      w: 4,
      h: 3
    }
  });
  const size =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[27]++, defaultSizes[type]);
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[28]++;
  return {
    lg: [{
      i: widgetId,
      x: 0,
      y: 0,
      ...size
    }],
    md: [{
      i: widgetId,
      x: 0,
      y: 0,
      w: Math.min(size.w, 10),
      h: size.h
    }],
    sm: [{
      i: widgetId,
      x: 0,
      y: 0,
      w: Math.min(size.w, 6),
      h: size.h
    }],
    xs: [{
      i: widgetId,
      x: 0,
      y: 0,
      w: 4,
      h: size.h
    }],
    xxs: [{
      i: widgetId,
      x: 0,
      y: 0,
      w: 2,
      h: size.h
    }]
  };
}
function mergeLayouts(existingLayouts, newLayouts) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[14]++;
  const merged =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[29]++, {});
  const breakpoints =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[30]++, ['lg', 'md', 'sm', 'xs', 'xxs']);
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[31]++;
  breakpoints.forEach(bp => {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[15]++;
    cov_vw7bz6qhv().s[32]++;
    merged[bp] = [...(
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[6][0]++, existingLayouts[bp]) ||
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[6][1]++, [])), ...(
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[7][0]++, newLayouts[bp]) ||
    /* istanbul ignore next */
    (cov_vw7bz6qhv().b[7][1]++, []))];
  });
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[33]++;
  return merged;
}
function removeWidgetFromLayouts(layouts, widgetId) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[16]++;
  const updated =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[34]++, {});
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[35]++;
  Object.entries(layouts).forEach(([breakpoint, layout]) => {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[17]++;
    cov_vw7bz6qhv().s[36]++;
    updated[breakpoint] = layout.filter(item => {
      /* istanbul ignore next */
      cov_vw7bz6qhv().f[18]++;
      cov_vw7bz6qhv().s[37]++;
      return item.i !== widgetId;
    });
  });
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[38]++;
  return updated;
}
function updateWidgetInLayouts(layouts, widgetId, updates) {
  /* istanbul ignore next */
  cov_vw7bz6qhv().f[19]++;
  const updated =
  /* istanbul ignore next */
  (cov_vw7bz6qhv().s[39]++, {});
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[40]++;
  Object.entries(layouts).forEach(([breakpoint, layout]) => {
    /* istanbul ignore next */
    cov_vw7bz6qhv().f[20]++;
    cov_vw7bz6qhv().s[41]++;
    updated[breakpoint] = layout.map(item => {
      /* istanbul ignore next */
      cov_vw7bz6qhv().f[21]++;
      cov_vw7bz6qhv().s[42]++;
      return item.i === widgetId ?
      /* istanbul ignore next */
      (cov_vw7bz6qhv().b[8][0]++, {
        ...item,
        ...updates
      }) :
      /* istanbul ignore next */
      (cov_vw7bz6qhv().b[8][1]++, item);
    });
  });
  /* istanbul ignore next */
  cov_vw7bz6qhv().s[43]++;
  return updated;
}
const EMPTY_LAYOUTS =
/* istanbul ignore next */
(cov_vw7bz6qhv().s[44]++, {
  lg: [],
  md: [],
  sm: [],
  xs: [],
  xxs: []
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,