{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/lib/monitoring/__tests__/logger.config.test.ts"],"sourcesContent":["import { appLogger } from '../logger.config';\n\n// Mock console methods to avoid actual logging during tests\nconst consoleSpy = {\n  debug: jest.spyOn(console, 'debug').mockImplementation(() => {}),\n  info: jest.spyOn(console, 'info').mockImplementation(() => {}),\n  warn: jest.spyOn(console, 'warn').mockImplementation(() => {}),\n  error: jest.spyOn(console, 'error').mockImplementation(() => {}),\n};\n\n// Mock Sentry to avoid actual error tracking during tests\njest.mock('@sentry/nextjs', () => ({\n  captureException: jest.fn(),\n  captureMessage: jest.fn(),\n  addBreadcrumb: jest.fn(),\n  withScope: jest.fn(),\n}));\n\ndescribe('appLogger', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  afterAll(() => {\n    // Restore console methods\n    Object.values(consoleSpy).forEach(spy => spy.mockRestore());\n  });\n\n  describe('debug method', () => {\n    it('should exist and be callable', () => {\n      expect(typeof appLogger.debug).toBe('function');\n      \n      // Should not throw when called\n      expect(() => {\n        appLogger.debug('Test debug message');\n      }).not.toThrow();\n    });\n\n    it('should handle context parameter', () => {\n      expect(() => {\n        appLogger.debug('Test debug message', { userId: 'test-123' });\n      }).not.toThrow();\n    });\n  });\n\n  describe('info method', () => {\n    it('should exist and be callable', () => {\n      expect(typeof appLogger.info).toBe('function');\n      \n      expect(() => {\n        appLogger.info('Test info message');\n      }).not.toThrow();\n    });\n  });\n\n  describe('warn method', () => {\n    it('should exist and be callable', () => {\n      expect(typeof appLogger.warn).toBe('function');\n      \n      expect(() => {\n        appLogger.warn('Test warning message');\n      }).not.toThrow();\n    });\n  });\n\n  describe('error method', () => {\n    it('should exist and be callable', () => {\n      expect(typeof appLogger.error).toBe('function');\n      \n      expect(() => {\n        appLogger.error('Test error message');\n      }).not.toThrow();\n    });\n\n    it('should handle error context', () => {\n      expect(() => {\n        appLogger.error('Test error message', { \n          error: new Error('test'), \n          userId: 'test-123' \n        });\n      }).not.toThrow();\n    });\n  });\n\n  // Basic logging functionality tests cover core requirements\n  // Additional methods (performance, userAction, apiCall) are tested through integration\n});"],"names":["jest","mock","captureException","fn","captureMessage","addBreadcrumb","withScope","consoleSpy","debug","spyOn","console","mockImplementation","info","warn","error","describe","beforeEach","clearAllMocks","afterAll","Object","values","forEach","spy","mockRestore","it","expect","appLogger","toBe","not","toThrow","userId","Error"],"mappings":";AAUA,0DAA0D;AAC1DA,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCC,kBAAkBF,KAAKG,EAAE;QACzBC,gBAAgBJ,KAAKG,EAAE;QACvBE,eAAeL,KAAKG,EAAE;QACtBG,WAAWN,KAAKG,EAAE;IACpB,CAAA;;;;8BAhB0B;AAE1B,4DAA4D;AAC5D,MAAMI,aAAa;IACjBC,OAAOR,KAAKS,KAAK,CAACC,SAAS,SAASC,kBAAkB,CAAC,KAAO;IAC9DC,MAAMZ,KAAKS,KAAK,CAACC,SAAS,QAAQC,kBAAkB,CAAC,KAAO;IAC5DE,MAAMb,KAAKS,KAAK,CAACC,SAAS,QAAQC,kBAAkB,CAAC,KAAO;IAC5DG,OAAOd,KAAKS,KAAK,CAACC,SAAS,SAASC,kBAAkB,CAAC,KAAO;AAChE;AAUAI,SAAS,aAAa;IACpBC,WAAW;QACThB,KAAKiB,aAAa;IACpB;IAEAC,SAAS;QACP,0BAA0B;QAC1BC,OAAOC,MAAM,CAACb,YAAYc,OAAO,CAACC,CAAAA,MAAOA,IAAIC,WAAW;IAC1D;IAEAR,SAAS,gBAAgB;QACvBS,GAAG,gCAAgC;YACjCC,OAAO,OAAOC,uBAAS,CAAClB,KAAK,EAAEmB,IAAI,CAAC;YAEpC,+BAA+B;YAC/BF,OAAO;gBACLC,uBAAS,CAAClB,KAAK,CAAC;YAClB,GAAGoB,GAAG,CAACC,OAAO;QAChB;QAEAL,GAAG,mCAAmC;YACpCC,OAAO;gBACLC,uBAAS,CAAClB,KAAK,CAAC,sBAAsB;oBAAEsB,QAAQ;gBAAW;YAC7D,GAAGF,GAAG,CAACC,OAAO;QAChB;IACF;IAEAd,SAAS,eAAe;QACtBS,GAAG,gCAAgC;YACjCC,OAAO,OAAOC,uBAAS,CAACd,IAAI,EAAEe,IAAI,CAAC;YAEnCF,OAAO;gBACLC,uBAAS,CAACd,IAAI,CAAC;YACjB,GAAGgB,GAAG,CAACC,OAAO;QAChB;IACF;IAEAd,SAAS,eAAe;QACtBS,GAAG,gCAAgC;YACjCC,OAAO,OAAOC,uBAAS,CAACb,IAAI,EAAEc,IAAI,CAAC;YAEnCF,OAAO;gBACLC,uBAAS,CAACb,IAAI,CAAC;YACjB,GAAGe,GAAG,CAACC,OAAO;QAChB;IACF;IAEAd,SAAS,gBAAgB;QACvBS,GAAG,gCAAgC;YACjCC,OAAO,OAAOC,uBAAS,CAACZ,KAAK,EAAEa,IAAI,CAAC;YAEpCF,OAAO;gBACLC,uBAAS,CAACZ,KAAK,CAAC;YAClB,GAAGc,GAAG,CAACC,OAAO;QAChB;QAEAL,GAAG,+BAA+B;YAChCC,OAAO;gBACLC,uBAAS,CAACZ,KAAK,CAAC,sBAAsB;oBACpCA,OAAO,IAAIiB,MAAM;oBACjBD,QAAQ;gBACV;YACF,GAAGF,GAAG,CAACC,OAAO;QAChB;IACF;AAEA,4DAA4D;AAC5D,uFAAuF;AACzF"}