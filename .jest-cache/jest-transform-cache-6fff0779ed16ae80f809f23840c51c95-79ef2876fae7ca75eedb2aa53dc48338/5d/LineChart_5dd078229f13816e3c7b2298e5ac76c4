aa47193cb488a50d52a2ace1aa3330e7
'use client';
"use strict";

/* istanbul ignore next */
function cov_2c7x8c8fqg() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/components/charts/LineChart.tsx";
  var hash = "fb63a611971471d683269cccd6a61f3a7bfc0104";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/components/charts/LineChart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "8": {
        start: {
          line: 24,
          column: 15
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "9": {
        start: {
          line: 25,
          column: 23
        },
        end: {
          line: 25,
          column: 49
        }
      },
      "10": {
        start: {
          line: 26,
          column: 16
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "11": {
        start: {
          line: 28,
          column: 0
        },
        end: {
          line: 28,
          column: 165
        }
      },
      "12": {
        start: {
          line: 30,
          column: 20
        },
        end: {
          line: 77,
          column: 5
        }
      },
      "13": {
        start: {
          line: 79,
          column: 23
        },
        end: {
          line: 94,
          column: 5
        }
      },
      "14": {
        start: {
          line: 81,
          column: 55
        },
        end: {
          line: 93,
          column: 13
        }
      },
      "15": {
        start: {
          line: 95,
          column: 4
        },
        end: {
          line: 108,
          column: 7
        }
      },
      "16": {
        start: {
          line: 111,
          column: 22
        },
        end: {
          line: 127,
          column: 5
        }
      },
      "17": {
        start: {
          line: 113,
          column: 50
        },
        end: {
          line: 126,
          column: 13
        }
      },
      "18": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 133,
          column: 7
        }
      },
      "19": {
        start: {
          line: 136,
          column: 22
        },
        end: {
          line: 150,
          column: 5
        }
      },
      "20": {
        start: {
          line: 137,
          column: 37
        },
        end: {
          line: 137,
          column: 53
        }
      },
      "21": {
        start: {
          line: 151,
          column: 20
        },
        end: {
          line: 176,
          column: 5
        }
      },
      "22": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 186,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 21
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "LineChart",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 18
          }
        },
        loc: {
          start: {
            line: 29,
            column: 153
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 81,
            column: 36
          },
          end: {
            line: 81,
            column: 37
          }
        },
        loc: {
          start: {
            line: 81,
            column: 55
          },
          end: {
            line: 93,
            column: 13
          }
        },
        line: 81
      },
      "6": {
        name: "MultiLineChart",
        decl: {
          start: {
            line: 110,
            column: 9
          },
          end: {
            line: 110,
            column: 23
          }
        },
        loc: {
          start: {
            line: 110,
            column: 83
          },
          end: {
            line: 134,
            column: 1
          }
        },
        line: 110
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 113,
            column: 31
          },
          end: {
            line: 113,
            column: 32
          }
        },
        loc: {
          start: {
            line: 113,
            column: 50
          },
          end: {
            line: 126,
            column: 13
          }
        },
        line: 113
      },
      "8": {
        name: "TrendLineChart",
        decl: {
          start: {
            line: 135,
            column: 9
          },
          end: {
            line: 135,
            column: 23
          }
        },
        loc: {
          start: {
            line: 135,
            column: 101
          },
          end: {
            line: 187,
            column: 1
          }
        },
        line: 135
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 137,
            column: 25
          },
          end: {
            line: 137,
            column: 26
          }
        },
        loc: {
          start: {
            line: 137,
            column: 37
          },
          end: {
            line: 137,
            column: 53
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 34
          },
          end: {
            line: 29,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 43
          },
          end: {
            line: 29,
            column: 46
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 29,
            column: 48
          },
          end: {
            line: 29,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 59
          },
          end: {
            line: 29,
            column: 63
          }
        }],
        line: 29
      },
      "2": {
        loc: {
          start: {
            line: 29,
            column: 65
          },
          end: {
            line: 29,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 78
          },
          end: {
            line: 29,
            column: 82
          }
        }],
        line: 29
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 84
          },
          end: {
            line: 29,
            column: 103
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 99
          },
          end: {
            line: 29,
            column: 103
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 105
          },
          end: {
            line: 29,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 114
          },
          end: {
            line: 29,
            column: 118
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 120
          },
          end: {
            line: 29,
            column: 133
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 129
          },
          end: {
            line: 29,
            column: 133
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 29,
            column: 135
          },
          end: {
            line: 29,
            column: 149
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 147
          },
          end: {
            line: 29,
            column: 149
          }
        }],
        line: 29
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 46,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 83,
            column: 25
          },
          end: {
            line: 83,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 83,
            column: 34
          },
          end: {
            line: 83,
            column: 37
          }
        }, {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 83,
            column: 41
          }
        }],
        line: 83
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 99
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 88,
            column: 57
          }
        }, {
          start: {
            line: 88,
            column: 61
          },
          end: {
            line: 88,
            column: 99
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 91,
            column: 33
          },
          end: {
            line: 91,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 33
          },
          end: {
            line: 91,
            column: 56
          }
        }, {
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 91,
            column: 105
          }
        }],
        line: 91
      },
      "11": {
        loc: {
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 92,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 29
          },
          end: {
            line: 92,
            column: 48
          }
        }, {
          start: {
            line: 92,
            column: 52
          },
          end: {
            line: 92,
            column: 90
          }
        }],
        line: 92
      },
      "12": {
        loc: {
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 105,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 30
          },
          end: {
            line: 105,
            column: 35
          }
        }, {
          start: {
            line: 105,
            column: 39
          },
          end: {
            line: 105,
            column: 51
          }
        }],
        line: 105
      },
      "13": {
        loc: {
          start: {
            line: 110,
            column: 51
          },
          end: {
            line: 110,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 110,
            column: 60
          },
          end: {
            line: 110,
            column: 63
          }
        }],
        line: 110
      },
      "14": {
        loc: {
          start: {
            line: 110,
            column: 65
          },
          end: {
            line: 110,
            column: 79
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 110,
            column: 77
          },
          end: {
            line: 110,
            column: 79
          }
        }],
        line: 110
      },
      "15": {
        loc: {
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 116,
            column: 29
          },
          end: {
            line: 116,
            column: 42
          }
        }, {
          start: {
            line: 116,
            column: 46
          },
          end: {
            line: 116,
            column: 84
          }
        }],
        line: 116
      },
      "16": {
        loc: {
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 117,
            column: 36
          },
          end: {
            line: 117,
            column: 49
          }
        }, {
          start: {
            line: 117,
            column: 53
          },
          end: {
            line: 117,
            column: 91
          }
        }],
        line: 117
      },
      "17": {
        loc: {
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 123,
            column: 93
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 123,
            column: 38
          },
          end: {
            line: 123,
            column: 51
          }
        }, {
          start: {
            line: 123,
            column: 55
          },
          end: {
            line: 123,
            column: 93
          }
        }],
        line: 123
      },
      "18": {
        loc: {
          start: {
            line: 135,
            column: 32
          },
          end: {
            line: 135,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 40
          },
          end: {
            line: 135,
            column: 68
          }
        }],
        line: 135
      },
      "19": {
        loc: {
          start: {
            line: 135,
            column: 70
          },
          end: {
            line: 135,
            column: 81
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 79
          },
          end: {
            line: 135,
            column: 81
          }
        }],
        line: 135
      },
      "20": {
        loc: {
          start: {
            line: 135,
            column: 83
          },
          end: {
            line: 135,
            column: 97
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 135,
            column: 95
          },
          end: {
            line: 135,
            column: 97
          }
        }],
        line: 135
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0],
      "14": [0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0],
      "19": [0],
      "20": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/components/charts/LineChart.tsx"],
      sourcesContent: ["'use client';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  type ChartData,\n  type ChartOptions,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nimport { getDefaultChartOptions, formatTooltip, CHART_COLORS } from '@/lib/charts/config';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport interface LineChartProps {\n  data: ChartData<'line'>;\n  title?: string;\n  height?: number;\n  showGrid?: boolean;\n  showLegend?: boolean;\n  showTooltips?: boolean;\n  curved?: boolean;\n  filled?: boolean;\n  className?: string;\n}\n\n/**\n * Professional Line Chart Component\n * Optimized for time series data and trend visualization\n */\nexport function LineChart({\n  data,\n  title,\n  height = 300,\n  showGrid = true,\n  showLegend = true,\n  showTooltips = true,\n  curved = true,\n  filled = true,\n  className = '',\n}: LineChartProps): React.ReactElement {\n  \n  const options: ChartOptions<'line'> = {\n    ...getDefaultChartOptions('line'),\n    \n    plugins: {\n      ...getDefaultChartOptions('line').plugins,\n      \n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: '600',\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: {\n          bottom: 20,\n        },\n      } : { display: false },\n      \n      legend: {\n        ...getDefaultChartOptions('line').plugins?.legend,\n        display: showLegend,\n      },\n      \n      tooltip: {\n        ...getDefaultChartOptions('line').plugins?.tooltip,\n        enabled: showTooltips,\n        callbacks: {\n          label: formatTooltip,\n        },\n      },\n    },\n    \n    scales: {\n      x: {\n        ...getDefaultChartOptions('line').scales?.x,\n        grid: {\n          ...getDefaultChartOptions('line').scales?.x?.grid,\n          display: showGrid,\n        },\n      },\n      y: {\n        ...getDefaultChartOptions('line').scales?.y,\n        grid: {\n          ...getDefaultChartOptions('line').scales?.y?.grid,\n          display: showGrid,\n        },\n      },\n    },\n  };\n\n  // Apply styling to datasets\n  const styledData: ChartData<'line'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, index) => ({\n      ...dataset,\n      tension: curved ? 0.3 : 0,\n      fill: filled,\n      borderWidth: 2.5,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n      pointBackgroundColor: dataset.borderColor || CHART_COLORS.dataColors[index],\n      pointBorderColor: CHART_COLORS.background,\n      pointBorderWidth: 2,\n      backgroundColor: dataset.backgroundColor || `${CHART_COLORS.dataColors[index]}15`,\n      borderColor: dataset.borderColor || CHART_COLORS.dataColors[index],\n    })),\n  };\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }} // Add padding for container\n    >\n      <div className=\"w-full h-full\">\n        <Line \n          data={styledData} \n          options={options}\n          aria-label={title || 'Line chart'}\n        />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Line Chart with multiple datasets for comparison\n */\nexport function MultiLineChart({\n  datasets,\n  labels,\n  title,\n  height = 300,\n  className = '',\n}: {\n  datasets: Array<{\n    label: string;\n    data: number[];\n    color?: string;\n  }>;\n  labels: string[];\n  title?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'line'> = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      borderColor: dataset.color || CHART_COLORS.dataColors[index],\n      backgroundColor: `${dataset.color || CHART_COLORS.dataColors[index]}15`,\n      tension: 0.3,\n      fill: true,\n      borderWidth: 2.5,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n      pointBackgroundColor: dataset.color || CHART_COLORS.dataColors[index],\n      pointBorderColor: CHART_COLORS.background,\n      pointBorderWidth: 2,\n    })),\n  };\n\n  return (\n    <LineChart\n      data={chartData}\n      title={title}\n      height={height}\n      className={className}\n    />\n  );\n}\n\n/**\n * Simple trend line for KPI cards\n */\nexport function TrendLineChart({\n  data,\n  color = CHART_COLORS.primary,\n  height = 60,\n  className = '',\n}: {\n  data: number[];\n  color?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'line'> = {\n    labels: data.map((_, index) => index.toString()),\n    datasets: [{\n      data,\n      borderColor: color,\n      backgroundColor: `${color}20`,\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHoverRadius: 0,\n    }],\n  };\n\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { display: false },\n      tooltip: { enabled: false },\n    },\n    scales: {\n      x: { display: false },\n      y: { display: false },\n    },\n    animation: { duration: 400 },\n    interaction: { intersect: false },\n  };\n\n  return (\n    <div \n      className={`w-full ${className}`}\n      style={{ height }}\n    >\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}"],
      names: ["LineChart", "MultiLineChart", "TrendLineChart", "ChartJS", "register", "CategoryScale", "LinearScale", "PointElement", "LineElement", "Title", "Tooltip", "Legend", "Filler", "data", "title", "height", "showGrid", "showLegend", "showTooltips", "curved", "filled", "className", "options", "getDefaultChartOptions", "plugins", "display", "text", "font", "family", "size", "weight", "color", "CHART_COLORS", "textPrimary", "padding", "bottom", "legend", "tooltip", "enabled", "callbacks", "label", "formatTooltip", "scales", "x", "grid", "y", "styledData", "datasets", "map", "dataset", "index", "tension", "fill", "borderWidth", "pointRadius", "pointHoverRadius", "pointBackgroundColor", "borderColor", "dataColors", "pointBorderColor", "background", "pointBorderWidth", "backgroundColor", "div", "style", "Line", "aria-label", "labels", "chartData", "primary", "_", "toString", "responsive", "maintainAspectRatio", "animation", "duration", "interaction", "intersect"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "fb63a611971471d683269cccd6a61f3a7bfc0104"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2c7x8c8fqg = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2c7x8c8fqg();
cov_2c7x8c8fqg().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2c7x8c8fqg().f[0]++;
  cov_2c7x8c8fqg().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2c7x8c8fqg().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2c7x8c8fqg().s[3]++;
_export(exports, {
  get LineChart() {
    /* istanbul ignore next */
    cov_2c7x8c8fqg().f[1]++;
    cov_2c7x8c8fqg().s[4]++;
    return LineChart;
  },
  get MultiLineChart() {
    /* istanbul ignore next */
    cov_2c7x8c8fqg().f[2]++;
    cov_2c7x8c8fqg().s[5]++;
    return MultiLineChart;
  },
  get TrendLineChart() {
    /* istanbul ignore next */
    cov_2c7x8c8fqg().f[3]++;
    cov_2c7x8c8fqg().s[6]++;
    return TrendLineChart;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2c7x8c8fqg().s[7]++, require("react/jsx-runtime"));
const _chart =
/* istanbul ignore next */
(cov_2c7x8c8fqg().s[8]++, require("chart.js"));
const _reactchartjs2 =
/* istanbul ignore next */
(cov_2c7x8c8fqg().s[9]++, require("react-chartjs-2"));
const _config =
/* istanbul ignore next */
(cov_2c7x8c8fqg().s[10]++, require("../../lib/charts/config"));
// Register Chart.js components
/* istanbul ignore next */
cov_2c7x8c8fqg().s[11]++;
_chart.Chart.register(_chart.CategoryScale, _chart.LinearScale, _chart.PointElement, _chart.LineElement, _chart.Title, _chart.Tooltip, _chart.Legend, _chart.Filler);
function LineChart({
  data,
  title,
  height =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[0][0]++, 300),
  showGrid =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[1][0]++, true),
  showLegend =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[2][0]++, true),
  showTooltips =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[3][0]++, true),
  curved =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[4][0]++, true),
  filled =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[5][0]++, true),
  className =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[6][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2c7x8c8fqg().f[4]++;
  const options =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().s[12]++, {
    ...(0, _config.getDefaultChartOptions)('line'),
    plugins: {
      ...(0, _config.getDefaultChartOptions)('line').plugins,
      title: title ?
      /* istanbul ignore next */
      (cov_2c7x8c8fqg().b[7][0]++, {
        display: true,
        text: title,
        font: {
          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',
          size: 16,
          weight: '600'
        },
        color: _config.CHART_COLORS.textPrimary,
        padding: {
          bottom: 20
        }
      }) :
      /* istanbul ignore next */
      (cov_2c7x8c8fqg().b[7][1]++, {
        display: false
      }),
      legend: {
        ...(0, _config.getDefaultChartOptions)('line').plugins?.legend,
        display: showLegend
      },
      tooltip: {
        ...(0, _config.getDefaultChartOptions)('line').plugins?.tooltip,
        enabled: showTooltips,
        callbacks: {
          label: _config.formatTooltip
        }
      }
    },
    scales: {
      x: {
        ...(0, _config.getDefaultChartOptions)('line').scales?.x,
        grid: {
          ...(0, _config.getDefaultChartOptions)('line').scales?.x?.grid,
          display: showGrid
        }
      },
      y: {
        ...(0, _config.getDefaultChartOptions)('line').scales?.y,
        grid: {
          ...(0, _config.getDefaultChartOptions)('line').scales?.y?.grid,
          display: showGrid
        }
      }
    }
  });
  // Apply styling to datasets
  const styledData =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().s[13]++, {
    ...data,
    datasets: data.datasets.map((dataset, index) => {
      /* istanbul ignore next */
      cov_2c7x8c8fqg().f[5]++;
      cov_2c7x8c8fqg().s[14]++;
      return {
        ...dataset,
        tension: curved ?
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[8][0]++, 0.3) :
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[8][1]++, 0),
        fill: filled,
        borderWidth: 2.5,
        pointRadius: 4,
        pointHoverRadius: 6,
        pointBackgroundColor:
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[9][0]++, dataset.borderColor) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[9][1]++, _config.CHART_COLORS.dataColors[index]),
        pointBorderColor: _config.CHART_COLORS.background,
        pointBorderWidth: 2,
        backgroundColor:
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[10][0]++, dataset.backgroundColor) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[10][1]++, `${_config.CHART_COLORS.dataColors[index]}15`),
        borderColor:
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[11][0]++, dataset.borderColor) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[11][1]++, _config.CHART_COLORS.dataColors[index])
      };
    })
  });
  /* istanbul ignore next */
  cov_2c7x8c8fqg().s[15]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`,
    style: {
      height: height + 40
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "w-full h-full",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactchartjs2.Line, {
        data: styledData,
        options: options,
        "aria-label":
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[12][0]++, title) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[12][1]++, 'Line chart')
      })
    })
  });
}
function MultiLineChart({
  datasets,
  labels,
  title,
  height =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[13][0]++, 300),
  className =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[14][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2c7x8c8fqg().f[6]++;
  const chartData =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().s[16]++, {
    labels,
    datasets: datasets.map((dataset, index) => {
      /* istanbul ignore next */
      cov_2c7x8c8fqg().f[7]++;
      cov_2c7x8c8fqg().s[17]++;
      return {
        label: dataset.label,
        data: dataset.data,
        borderColor:
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[15][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[15][1]++, _config.CHART_COLORS.dataColors[index]),
        backgroundColor: `${
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[16][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[16][1]++, _config.CHART_COLORS.dataColors[index])}15`,
        tension: 0.3,
        fill: true,
        borderWidth: 2.5,
        pointRadius: 4,
        pointHoverRadius: 6,
        pointBackgroundColor:
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[17][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2c7x8c8fqg().b[17][1]++, _config.CHART_COLORS.dataColors[index]),
        pointBorderColor: _config.CHART_COLORS.background,
        pointBorderWidth: 2
      };
    })
  });
  /* istanbul ignore next */
  cov_2c7x8c8fqg().s[18]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(LineChart, {
    data: chartData,
    title: title,
    height: height,
    className: className
  });
}
function TrendLineChart({
  data,
  color =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[18][0]++, _config.CHART_COLORS.primary),
  height =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[19][0]++, 60),
  className =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().b[20][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2c7x8c8fqg().f[8]++;
  const chartData =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().s[19]++, {
    labels: data.map((_, index) => {
      /* istanbul ignore next */
      cov_2c7x8c8fqg().f[9]++;
      cov_2c7x8c8fqg().s[20]++;
      return index.toString();
    }),
    datasets: [{
      data,
      borderColor: color,
      backgroundColor: `${color}20`,
      tension: 0.4,
      fill: true,
      borderWidth: 2,
      pointRadius: 0,
      pointHoverRadius: 0
    }]
  });
  const options =
  /* istanbul ignore next */
  (cov_2c7x8c8fqg().s[21]++, {
    responsive: true,
    maintainAspectRatio: false,
    plugins: {
      legend: {
        display: false
      },
      tooltip: {
        enabled: false
      }
    },
    scales: {
      x: {
        display: false
      },
      y: {
        display: false
      }
    },
    animation: {
      duration: 400
    },
    interaction: {
      intersect: false
    }
  });
  /* istanbul ignore next */
  cov_2c7x8c8fqg().s[22]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `w-full ${className}`,
    style: {
      height
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactchartjs2.Line, {
      data: chartData,
      options: options
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,