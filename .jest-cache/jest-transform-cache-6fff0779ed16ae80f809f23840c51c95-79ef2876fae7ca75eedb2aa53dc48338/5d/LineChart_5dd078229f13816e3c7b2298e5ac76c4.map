{"version":3,"names":["cov_2c7x8c8fqg","actualCoverage","s","LineChart","f","MultiLineChart","TrendLineChart","_chart","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","data","title","height","b","showGrid","showLegend","showTooltips","curved","filled","className","options","_config","getDefaultChartOptions","plugins","display","text","font","family","size","weight","color","CHART_COLORS","textPrimary","padding","bottom","legend","tooltip","enabled","callbacks","label","formatTooltip","scales","x","grid","y","styledData","datasets","map","dataset","index","tension","fill","borderWidth","pointRadius","pointHoverRadius","pointBackgroundColor","borderColor","dataColors","pointBorderColor","background","pointBorderWidth","backgroundColor","_jsxruntime","jsx","style","_reactchartjs2","Line","labels","chartData","primary","_","toString","responsive","maintainAspectRatio","animation","duration","interaction","intersect"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/charts/LineChart.tsx"],"sourcesContent":["'use client';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  type ChartData,\n  type ChartOptions,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\n\nimport { getDefaultChartOptions, formatTooltip, CHART_COLORS } from '@/lib/charts/config';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nexport interface LineChartProps {\n  data: ChartData<'line'>;\n  title?: string;\n  height?: number;\n  showGrid?: boolean;\n  showLegend?: boolean;\n  showTooltips?: boolean;\n  curved?: boolean;\n  filled?: boolean;\n  className?: string;\n}\n\n/**\n * Professional Line Chart Component\n * Optimized for time series data and trend visualization\n */\nexport function LineChart({\n  data,\n  title,\n  height = 300,\n  showGrid = true,\n  showLegend = true,\n  showTooltips = true,\n  curved = true,\n  filled = true,\n  className = '',\n}: LineChartProps): React.ReactElement {\n  \n  const options: ChartOptions<'line'> = {\n    ...getDefaultChartOptions('line'),\n    \n    plugins: {\n      ...getDefaultChartOptions('line').plugins,\n      \n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: '600',\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: {\n          bottom: 20,\n        },\n      } : { display: false },\n      \n      legend: {\n        ...getDefaultChartOptions('line').plugins?.legend,\n        display: showLegend,\n      },\n      \n      tooltip: {\n        ...getDefaultChartOptions('line').plugins?.tooltip,\n        enabled: showTooltips,\n        callbacks: {\n          label: formatTooltip,\n        },\n      },\n    },\n    \n    scales: {\n      x: {\n        ...getDefaultChartOptions('line').scales?.x,\n        grid: {\n          ...getDefaultChartOptions('line').scales?.x?.grid,\n          display: showGrid,\n        },\n      },\n      y: {\n        ...getDefaultChartOptions('line').scales?.y,\n        grid: {\n          ...getDefaultChartOptions('line').scales?.y?.grid,\n          display: showGrid,\n        },\n      },\n    },\n  };\n\n  // Apply styling to datasets\n  const styledData: ChartData<'line'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, index) => ({\n      ...dataset,\n      tension: curved ? 0.3 : 0,\n      fill: filled,\n      borderWidth: 2.5,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n      pointBackgroundColor: dataset.borderColor || CHART_COLORS.dataColors[index],\n      pointBorderColor: CHART_COLORS.background,\n      pointBorderWidth: 2,\n      backgroundColor: dataset.backgroundColor || `${CHART_COLORS.dataColors[index]}15`,\n      borderColor: dataset.borderColor || CHART_COLORS.dataColors[index],\n    })),\n  };\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }} // Add padding for container\n    >\n      <div className=\"w-full h-full\">\n        <Line \n          data={styledData} \n          options={options}\n          aria-label={title || 'Line chart'}\n        />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Line Chart with multiple datasets for comparison\n */\nexport function MultiLineChart({\n  datasets,\n  labels,\n  title,\n  height = 300,\n  className = '',\n}: {\n  datasets: Array<{\n    label: string;\n    data: number[];\n    color?: string;\n  }>;\n  labels: string[];\n  title?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'line'> = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      borderColor: dataset.color || CHART_COLORS.dataColors[index],\n      backgroundColor: `${dataset.color || CHART_COLORS.dataColors[index]}15`,\n      tension: 0.3,\n      fill: true,\n      borderWidth: 2.5,\n      pointRadius: 4,\n      pointHoverRadius: 6,\n      pointBackgroundColor: dataset.color || CHART_COLORS.dataColors[index],\n      pointBorderColor: CHART_COLORS.background,\n      pointBorderWidth: 2,\n    })),\n  };\n\n  return (\n    <LineChart\n      data={chartData}\n      title={title}\n      height={height}\n      className={className}\n    />\n  );\n}\n\n/**\n * Simple trend line for KPI cards\n */\nexport function TrendLineChart({\n  data,\n  color = CHART_COLORS.primary,\n  height = 60,\n  className = '',\n}: {\n  data: number[];\n  color?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'line'> = {\n    labels: data.map((_, index) => index.toString()),\n    datasets: [{\n      data,\n      borderColor: color,\n      backgroundColor: `${color}20`,\n      tension: 0.4,\n      fill: true,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHoverRadius: 0,\n    }],\n  };\n\n  const options: ChartOptions<'line'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: { display: false },\n      tooltip: { enabled: false },\n    },\n    scales: {\n      x: { display: false },\n      y: { display: false },\n    },\n    animation: { duration: 400 },\n    interaction: { intersect: false },\n  };\n\n  return (\n    <div \n      className={`w-full ${className}`}\n      style={{ height }}\n    >\n      <Line data={chartData} options={options} />\n    </div>\n  );\n}"],"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","ignoreList":[]}