{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/ui/Input.tsx"],"sourcesContent":["import { cva, type VariantProps } from 'class-variance-authority';\nimport React from 'react';\n\nimport { cn } from '@/lib/utils/cn';\n\n// Input variants following DATEN-SEE design system\nconst inputVariants = cva(\n  // Base input styles\n  [\n    'block w-full px-3 py-2 border rounded-lg transition-all duration-200',\n    'bg-surface-primary text-text-primary placeholder-text-tertiary',\n    'focus:outline-none focus:ring-2 focus:ring-brand-primary focus:border-brand-primary',\n    'disabled:bg-surface-secondary disabled:text-text-disabled disabled:cursor-not-allowed',\n    'disabled:border-border-primary disabled:opacity-60',\n  ],\n  {\n    variants: {\n      variant: {\n        default: 'border-border-primary',\n        error: 'border-danger focus:ring-danger focus:border-danger',\n        success: 'border-success focus:ring-success focus:border-success',\n      },\n      size: {\n        sm: 'h-8 text-sm px-2',\n        md: 'h-10 text-base px-3',\n        lg: 'h-12 text-lg px-4',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n    },\n  }\n);\n\nexport interface InputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size'>,\n    VariantProps<typeof inputVariants> {\n  leftIcon?: React.ReactNode;\n  rightIcon?: React.ReactNode;\n  error?: string;\n  helperText?: string;\n  label?: string;\n}\n\n/**\n * DATEN-SEE Input Component\n * Professional input field with icons, validation states, and helper text\n */\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ \n    className, \n    variant, \n    size, \n    leftIcon,\n    rightIcon,\n    error,\n    helperText,\n    label,\n    id,\n    ...props \n  }, ref) => {\n    const inputId = id || `input-${Math.random().toString(36).substring(2, 9)}`;\n    const hasError = Boolean(error);\n    const finalVariant = hasError ? 'error' : variant;\n\n    return (\n      <div className=\"w-full\">\n        {/* Label */}\n        {label && (\n          <label \n            htmlFor={inputId}\n            className=\"block text-sm font-medium text-text-primary mb-1\"\n          >\n            {label}\n          </label>\n        )}\n\n        {/* Input Container */}\n        <div className=\"relative\">\n          {/* Left Icon */}\n          {leftIcon && (\n            <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n              <span className=\"text-text-tertiary\">{leftIcon}</span>\n            </div>\n          )}\n\n          {/* Input Field */}\n          <input\n            ref={ref}\n            id={inputId}\n            className={cn(\n              inputVariants({ variant: finalVariant, size }),\n              leftIcon && 'pl-10',\n              rightIcon && 'pr-10',\n              className\n            )}\n            {...props}\n          />\n\n          {/* Right Icon */}\n          {rightIcon && (\n            <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n              <span className=\"text-text-tertiary\">{rightIcon}</span>\n            </div>\n          )}\n        </div>\n\n        {/* Helper Text / Error Message */}\n        {(error || helperText) && (\n          <p className={cn(\n            'mt-1 text-sm',\n            hasError ? 'text-danger' : 'text-text-tertiary'\n          )}>\n            {error || helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nInput.displayName = 'Input';\n\n/**\n * Textarea Component\n */\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    Omit<VariantProps<typeof inputVariants>, 'size'> {\n  error?: string;\n  helperText?: string;\n  label?: string;\n  resize?: 'none' | 'vertical' | 'horizontal' | 'both';\n}\n\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ \n    className, \n    variant,\n    error,\n    helperText,\n    label,\n    id,\n    resize = 'vertical',\n    rows = 3,\n    ...props \n  }, ref) => {\n    const textareaId = id || `textarea-${Math.random().toString(36).substring(2, 9)}`;\n    const hasError = Boolean(error);\n    const finalVariant = hasError ? 'error' : variant;\n\n    const resizeClasses = {\n      none: 'resize-none',\n      vertical: 'resize-y',\n      horizontal: 'resize-x', \n      both: 'resize',\n    };\n\n    return (\n      <div className=\"w-full\">\n        {/* Label */}\n        {label && (\n          <label \n            htmlFor={textareaId}\n            className=\"block text-sm font-medium text-text-primary mb-1\"\n          >\n            {label}\n          </label>\n        )}\n\n        {/* Textarea */}\n        <textarea\n          ref={ref}\n          id={textareaId}\n          rows={rows}\n          className={cn(\n            inputVariants({ variant: finalVariant, size: 'md' }),\n            'min-h-[80px] py-2',\n            resizeClasses[resize],\n            className\n          )}\n          {...props}\n        />\n\n        {/* Helper Text / Error Message */}\n        {(error || helperText) && (\n          <p className={cn(\n            'mt-1 text-sm',\n            hasError ? 'text-danger' : 'text-text-tertiary'\n          )}>\n            {error || helperText}\n          </p>\n        )}\n      </div>\n    );\n  }\n);\n\nTextarea.displayName = 'Textarea';\n\nexport default Input;"],"names":["Input","Textarea","inputVariants","cva","variants","variant","default","error","success","size","sm","md","lg","defaultVariants","React","forwardRef","className","leftIcon","rightIcon","helperText","label","id","props","ref","inputId","Math","random","toString","substring","hasError","Boolean","finalVariant","div","htmlFor","span","input","cn","p","displayName","resize","rows","textareaId","resizeClasses","none","vertical","horizontal","both","textarea"],"mappings":"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"}