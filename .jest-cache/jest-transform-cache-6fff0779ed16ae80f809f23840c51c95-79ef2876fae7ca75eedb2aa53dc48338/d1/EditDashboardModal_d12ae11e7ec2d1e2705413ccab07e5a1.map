{"version":3,"names":["cov_27my68qrf9","actualCoverage","s","EditDashboardModal","dashboard","isOpen","onClose","onSubmit","isLoading","f","formData","setFormData","_react","useState","name","description","isPublic","errors","setErrors","useEffect","b","validateForm","newErrors","trim","length","Object","keys","handleSubmit","e","preventDefault","id","handleClose","_jsxruntime","jsxs","Fragment","jsx","className","onClick","type","_lucidereact","X","htmlFor","value","onChange","prev","target","placeholder","disabled","rows","checked"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/EditDashboardModal.tsx"],"sourcesContent":["'use client';\n\nimport { X } from 'lucide-react';\nimport { useEffect, useState } from 'react';\n\nimport type { DashboardListItem, UpdateDashboardRequest } from '@/types/dashboard.types';\n\ninterface EditDashboardModalProps {\n  dashboard: DashboardListItem | null;\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: UpdateDashboardRequest) => Promise<void>;\n  isLoading: boolean;\n}\n\ninterface FormData {\n  name: string;\n  description: string;\n  isPublic: boolean;\n}\n\nexport function EditDashboardModal({ \n  dashboard,\n  isOpen, \n  onClose, \n  onSubmit, \n  isLoading \n}: EditDashboardModalProps): React.ReactElement | null {\n  const [formData, setFormData] = useState<FormData>({\n    name: '',\n    description: '',\n    isPublic: false\n  });\n  const [errors, setErrors] = useState<Partial<FormData>>({});\n\n  // Update form when dashboard changes\n  useEffect(() => {\n    if (dashboard) {\n      setFormData({\n        name: dashboard.name,\n        description: dashboard.description,\n        isPublic: dashboard.isPublic\n      });\n      setErrors({});\n    }\n  }, [dashboard]);\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<FormData> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name ist erforderlich';\n    } else if (formData.name.length < 3) {\n      newErrors.name = 'Name muss mindestens 3 Zeichen lang sein';\n    }\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Beschreibung ist erforderlich';\n    } else if (formData.description.length < 10) {\n      newErrors.description = 'Beschreibung muss mindestens 10 Zeichen lang sein';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    \n    if (!dashboard || !validateForm()) {\n      return;\n    }\n\n    try {\n      await onSubmit({\n        id: dashboard.id,\n        name: formData.name,\n        description: formData.description,\n        isPublic: formData.isPublic\n      });\n      onClose();\n    } catch {\n      // Error handling is done in the parent component\n    }\n  };\n\n  const handleClose = (): void => {\n    setErrors({});\n    onClose();\n  };\n\n  if (!isOpen || !dashboard) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 bg-black/50 z-40\" onClick={handleClose} />\n      \n      {/* Modal */}\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-[#FDF9F3] rounded-lg shadow-xl w-full max-w-md\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-[#E6D7B8]\">\n            <h2 className=\"text-lg font-semibold text-[#3d3d3d]\">\n              Dashboard bearbeiten\n            </h2>\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"p-2 text-[#5d5d5d] hover:text-[#3d3d3d] hover:bg-[#FBF5ED] rounded-lg transition-colors\"\n              aria-label=\"Close modal\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\n            {/* Name Field */}\n            <div>\n              <label htmlFor=\"edit-dashboard-name\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Dashboard Name\n              </label>\n              <input\n                id=\"edit-dashboard-name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] transition-colors ${\n                  errors.name ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"z.B. Sales Analytics\"\n                disabled={isLoading}\n              />\n              {errors.name && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\n              )}\n            </div>\n\n            {/* Description Field */}\n            <div>\n              <label htmlFor=\"edit-dashboard-description\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Beschreibung\n              </label>\n              <textarea\n                id=\"edit-dashboard-description\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                rows={3}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] resize-none transition-colors ${\n                  errors.description ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"Beschreibe das Dashboard und seinen Zweck...\"\n                disabled={isLoading}\n              />\n              {errors.description && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n              )}\n            </div>\n\n            {/* Public/Private Toggle */}\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"isPublic\"\n                checked={formData.isPublic}\n                onChange={(e) => setFormData(prev => ({ ...prev, isPublic: e.target.checked }))}\n                className=\"w-4 h-4 text-[#2F4F73] border-[#E6D7B8] rounded focus:ring-[#2F4F73]\"\n                disabled={isLoading}\n              />\n              <label htmlFor=\"isPublic\" className=\"ml-2 text-sm text-[#3d3d3d]\">\n                Dashboard öffentlich machen\n              </label>\n            </div>\n          </form>\n\n          {/* Footer */}\n          <div className=\"flex items-center justify-end space-x-3 p-6 border-t border-[#E6D7B8]\">\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"px-4 py-2 text-sm font-medium text-[#3d3d3d] bg-[#FBF5ED] hover:bg-[#F5EFE7] rounded-lg transition-colors\"\n              disabled={isLoading}\n            >\n              Abbrechen\n            </button>\n            <button\n              type=\"submit\"\n              onClick={handleSubmit}\n              disabled={isLoading}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-[#2F4F73] hover:bg-[#365C83] rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? 'Speichere...' : 'Änderungen speichern'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"mappingscAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;+BAPO;;;;;;WAAAC,kBAAA;;;;;;;;kCAnBE;;;kCACkB;AAkB7B,SAASA,mBAAmB;EACjCC,SAAS;EACTC,MAAM;EACNC,OAAO;EACPC,QAAQ;EACRC;AAAS,CACe;EAAA;EAAAR,cAAA,GAAAS,CAAA;EACxB,MAAM,CAACC,QAAA,EAAUC,WAAA,CAAY;EAAA;EAAA,CAAAX,cAAA,GAAAE,CAAA,OAAG,IAAAU,MAAA,CAAAC,QAAQ,EAAW;IACjDC,IAAA,EAAM;IACNC,WAAA,EAAa;IACbC,QAAA,EAAU;EACZ;EACA,MAAM,CAACC,MAAA,EAAQC,SAAA,CAAU;EAAA;EAAA,CAAAlB,cAAA,GAAAE,CAAA,OAAG,IAAAU,MAAA,CAAAC,QAAQ,EAAoB,CAAC;EAEzD;EAAA;EAAAb,cAAA,GAAAE,CAAA;EACA,IAAAU,MAAA,CAAAO,SAAS,EAAC;IAAA;IAAAnB,cAAA,GAAAS,CAAA;IAAAT,cAAA,GAAAE,CAAA;IACR,IAAIE,SAAA,EAAW;MAAA;MAAAJ,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MACbS,WAAA,CAAY;QACVG,IAAA,EAAMV,SAAA,CAAUU,IAAI;QACpBC,WAAA,EAAaX,SAAA,CAAUW,WAAW;QAClCC,QAAA,EAAUZ,SAAA,CAAUY;MACtB;MAAA;MAAAhB,cAAA,GAAAE,CAAA;MACAgB,SAAA,CAAU,CAAC;IACb;IAAA;IAAA;MAAAlB,cAAA,GAAAoB,CAAA;IAAA;EACF,GAAG,CAAChB,SAAA,CAAU;EAAA;EAAAJ,cAAA,GAAAE,CAAA;EAEd,MAAMmB,YAAA,GAAeA,CAAA;IAAA;IAAArB,cAAA,GAAAS,CAAA;IACnB,MAAMa,SAAA;IAAA;IAAA,CAAAtB,cAAA,GAAAE,CAAA,QAA+B,CAAC;IAAA;IAAAF,cAAA,GAAAE,CAAA;IAEtC,IAAI,CAACQ,QAAA,CAASI,IAAI,CAACS,IAAI,IAAI;MAAA;MAAAvB,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MACzBoB,SAAA,CAAUR,IAAI,GAAG;IACnB,OAAO;MAAA;MAAAd,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MAAA,IAAIQ,QAAA,CAASI,IAAI,CAACU,MAAM,GAAG,GAAG;QAAA;QAAAxB,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAE,CAAA;QACnCoB,SAAA,CAAUR,IAAI,GAAG;MACnB;MAAA;MAAA;QAAAd,cAAA,GAAAoB,CAAA;MAAA;IAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IAEA,IAAI,CAACQ,QAAA,CAASK,WAAW,CAACQ,IAAI,IAAI;MAAA;MAAAvB,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MAChCoB,SAAA,CAAUP,WAAW,GAAG;IAC1B,OAAO;MAAA;MAAAf,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MAAA,IAAIQ,QAAA,CAASK,WAAW,CAACS,MAAM,GAAG,IAAI;QAAA;QAAAxB,cAAA,GAAAoB,CAAA;QAAApB,cAAA,GAAAE,CAAA;QAC3CoB,SAAA,CAAUP,WAAW,GAAG;MAC1B;MAAA;MAAA;QAAAf,cAAA,GAAAoB,CAAA;MAAA;IAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IAEAgB,SAAA,CAAUI,SAAA;IAAA;IAAAtB,cAAA,GAAAE,CAAA;IACV,OAAOuB,MAAA,CAAOC,IAAI,CAACJ,SAAA,EAAWE,MAAM,KAAK;EAC3C;EAAA;EAAAxB,cAAA,GAAAE,CAAA;EAEA,MAAMyB,YAAA,GAAe,MAAOC,CAAA;IAAA;IAAA5B,cAAA,GAAAS,CAAA;IAAAT,cAAA,GAAAE,CAAA;IAC1B0B,CAAA,CAAEC,cAAc;IAAA;IAAA7B,cAAA,GAAAE,CAAA;IAEhB;IAAI;IAAA,CAAAF,cAAA,GAAAoB,CAAA,WAAChB,SAAA;IAAA;IAAA,CAAAJ,cAAA,GAAAoB,CAAA,UAAa,CAACC,YAAA,KAAgB;MAAA;MAAArB,cAAA,GAAAoB,CAAA;MAAApB,cAAA,GAAAE,CAAA;MACjC;IACF;IAAA;IAAA;MAAAF,cAAA,GAAAoB,CAAA;IAAA;IAAApB,cAAA,GAAAE,CAAA;IAEA,IAAI;MAAA;MAAAF,cAAA,GAAAE,CAAA;MACF,MAAMK,QAAA,CAAS;QACbuB,EAAA,EAAI1B,SAAA,CAAU0B,EAAE;QAChBhB,IAAA,EAAMJ,QAAA,CAASI,IAAI;QACnBC,WAAA,EAAaL,QAAA,CAASK,WAAW;QACjCC,QAAA,EAAUN,QAAA,CAASM;MACrB;MAAA;MAAAhB,cAAA,GAAAE,CAAA;MACAI,OAAA;IACF,EAAE,MAAM;MACN;IAAA;EAEJ;EAAA;EAAAN,cAAA,GAAAE,CAAA;EAEA,MAAM6B,WAAA,GAAcA,CAAA;IAAA;IAAA/B,cAAA,GAAAS,CAAA;IAAAT,cAAA,GAAAE,CAAA;IAClBgB,SAAA,CAAU,CAAC;IAAA;IAAAlB,cAAA,GAAAE,CAAA;IACXI,OAAA;EACF;EAAA;EAAAN,cAAA,GAAAE,CAAA;EAEA;EAAI;EAAA,CAAAF,cAAA,GAAAoB,CAAA,WAACf,MAAA;EAAA;EAAA,CAAAL,cAAA,GAAAoB,CAAA,UAAU,CAAChB,SAAA,GAAW;IAAA;IAAAJ,cAAA,GAAAoB,CAAA;IAAApB,cAAA,GAAAE,CAAA;IAAA,OAAO;EAAA;EAAA;EAAA;IAAAF,cAAA,GAAAoB,CAAA;EAAA;EAAApB,cAAA,GAAAE,CAAA;EAElC,oBACE,IAAA8B,WAAA,CAAAC,IAAA,EAAAD,WAAA,CAAAE,QAAA;4BAEE,IAAAF,WAAA,CAAAG,GAAA,EAAC;MAAIC,SAAA,EAAU;MAAiCC,OAAA,EAASN;qBAGzD,IAAAC,WAAA,CAAAG,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAJ,WAAA,CAAAC,IAAA,EAAC;QAAIG,SAAA,EAAU;gCAEb,IAAAJ,WAAA,CAAAC,IAAA,EAAC;UAAIG,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAAG,GAAA,EAAC;YAAGC,SAAA,EAAU;sBAAuC;2BAGrD,IAAAJ,WAAA,CAAAG,GAAA,EAAC;YACCG,IAAA,EAAK;YACLD,OAAA,EAASN,WAAA;YACTK,SAAA,EAAU;YACV,cAAW;sBAEX,iBAAAJ,WAAA,CAAAG,GAAA,EAACI,YAAA,CAAAC,CAAC;cAACJ,SAAA,EAAU;;;yBAKjB,IAAAJ,WAAA,CAAAC,IAAA,EAAC;UAAK1B,QAAA,EAAUoB,YAAA;UAAcS,SAAA,EAAU;kCAEtC,IAAAJ,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAG,GAAA,EAAC;cAAMM,OAAA,EAAQ;cAAsBL,SAAA,EAAU;wBAAgD;6BAG/F,IAAAJ,WAAA,CAAAG,GAAA,EAAC;cACCL,EAAA,EAAG;cACHQ,IAAA,EAAK;cACLI,KAAA,EAAOhC,QAAA,CAASI,IAAI;cACpB6B,QAAA,EAAWf,CAAA,IAAM;gBAAA;gBAAA5B,cAAA,GAAAS,CAAA;gBAAAT,cAAA,GAAAE,CAAA;gBAAA,OAAAS,WAAA,CAAYiC,IAAA,IAAS;kBAAA;kBAAA5C,cAAA,GAAAS,CAAA;kBAAAT,cAAA,GAAAE,CAAA;kBAAA;oBAAE,GAAG0C,IAAI;oBAAE9B,IAAA,EAAMc,CAAA,CAAEiB,MAAM,CAACH;kBAAM;gBAAA;cAAA;cACtEN,SAAA,EAAW,6GACTnB,MAAA,CAAOH,IAAI;cAAA;cAAA,CAAAd,cAAA,GAAAoB,CAAA,UAAG;cAAA;cAAA,CAAApB,cAAA,GAAAoB,CAAA,UAAmB,qBACjC;cACF0B,WAAA,EAAY;cACZC,QAAA,EAAUvC;;YAEX;YAAA,CAAAR,cAAA,GAAAoB,CAAA,WAAAH,MAAA,CAAOH,IAAI;YAAA;YAAA,CAAAd,cAAA,GAAAoB,CAAA,wBACV,IAAAY,WAAA,CAAAG,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAA6BnB,MAAA,CAAOH;;2BAKrD,IAAAkB,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAG,GAAA,EAAC;cAAMM,OAAA,EAAQ;cAA6BL,SAAA,EAAU;wBAAgD;6BAGtG,IAAAJ,WAAA,CAAAG,GAAA,EAAC;cACCL,EAAA,EAAG;cACHY,KAAA,EAAOhC,QAAA,CAASK,WAAW;cAC3B4B,QAAA,EAAWf,CAAA,IAAM;gBAAA;gBAAA5B,cAAA,GAAAS,CAAA;gBAAAT,cAAA,GAAAE,CAAA;gBAAA,OAAAS,WAAA,CAAYiC,IAAA,IAAS;kBAAA;kBAAA5C,cAAA,GAAAS,CAAA;kBAAAT,cAAA,GAAAE,CAAA;kBAAA;oBAAE,GAAG0C,IAAI;oBAAE7B,WAAA,EAAaa,CAAA,CAAEiB,MAAM,CAACH;kBAAM;gBAAA;cAAA;cAC7EM,IAAA,EAAM;cACNZ,SAAA,EAAW,yHACTnB,MAAA,CAAOF,WAAW;cAAA;cAAA,CAAAf,cAAA,GAAAoB,CAAA,WAAG;cAAA;cAAA,CAAApB,cAAA,GAAAoB,CAAA,WAAmB,qBACxC;cACF0B,WAAA,EAAY;cACZC,QAAA,EAAUvC;;YAEX;YAAA,CAAAR,cAAA,GAAAoB,CAAA,WAAAH,MAAA,CAAOF,WAAW;YAAA;YAAA,CAAAf,cAAA,GAAAoB,CAAA,wBACjB,IAAAY,WAAA,CAAAG,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAA6BnB,MAAA,CAAOF;;2BAKrD,IAAAiB,WAAA,CAAAC,IAAA,EAAC;YAAIG,SAAA,EAAU;oCACb,IAAAJ,WAAA,CAAAG,GAAA,EAAC;cACCG,IAAA,EAAK;cACLR,EAAA,EAAG;cACHmB,OAAA,EAASvC,QAAA,CAASM,QAAQ;cAC1B2B,QAAA,EAAWf,CAAA,IAAM;gBAAA;gBAAA5B,cAAA,GAAAS,CAAA;gBAAAT,cAAA,GAAAE,CAAA;gBAAA,OAAAS,WAAA,CAAYiC,IAAA,IAAS;kBAAA;kBAAA5C,cAAA,GAAAS,CAAA;kBAAAT,cAAA,GAAAE,CAAA;kBAAA;oBAAE,GAAG0C,IAAI;oBAAE5B,QAAA,EAAUY,CAAA,CAAEiB,MAAM,CAACI;kBAAQ;gBAAA;cAAA;cAC5Eb,SAAA,EAAU;cACVW,QAAA,EAAUvC;6BAEZ,IAAAwB,WAAA,CAAAG,GAAA,EAAC;cAAMM,OAAA,EAAQ;cAAWL,SAAA,EAAU;wBAA8B;;;yBAOtE,IAAAJ,WAAA,CAAAC,IAAA,EAAC;UAAIG,SAAA,EAAU;kCACb,IAAAJ,WAAA,CAAAG,GAAA,EAAC;YACCG,IAAA,EAAK;YACLD,OAAA,EAASN,WAAA;YACTK,SAAA,EAAU;YACVW,QAAA,EAAUvC,SAAA;sBACX;2BAGD,IAAAwB,WAAA,CAAAG,GAAA,EAAC;YACCG,IAAA,EAAK;YACLD,OAAA,EAASV,YAAA;YACToB,QAAA,EAAUvC,SAAA;YACV4B,SAAA,EAAU;sBAET5B,SAAA;YAAA;YAAA,CAAAR,cAAA,GAAAoB,CAAA,WAAY;YAAA;YAAA,CAAApB,cAAA,GAAAoB,CAAA,WAAiB;;;;;;AAO5C","ignoreList":[]}