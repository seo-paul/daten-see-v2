71c63224cadb591ac074b65abafc2a01
'use client';
"use strict";

/* istanbul ignore next */
function cov_2rrcnsvj92() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/components/charts/BarChart.tsx";
  var hash = "691d45d35a918d02ac10efdff3113c5a0c7a94a4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/components/charts/BarChart.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 30
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 31
        }
      },
      "8": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "9": {
        start: {
          line: 27,
          column: 15
        },
        end: {
          line: 27,
          column: 34
        }
      },
      "10": {
        start: {
          line: 28,
          column: 23
        },
        end: {
          line: 28,
          column: 49
        }
      },
      "11": {
        start: {
          line: 29,
          column: 16
        },
        end: {
          line: 29,
          column: 50
        }
      },
      "12": {
        start: {
          line: 31,
          column: 0
        },
        end: {
          line: 31,
          column: 128
        }
      },
      "13": {
        start: {
          line: 34,
          column: 20
        },
        end: {
          line: 121,
          column: 5
        }
      },
      "14": {
        start: {
          line: 123,
          column: 23
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "15": {
        start: {
          line: 125,
          column: 55
        },
        end: {
          line: 134,
          column: 13
        }
      },
      "16": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 149,
          column: 7
        }
      },
      "17": {
        start: {
          line: 152,
          column: 22
        },
        end: {
          line: 163,
          column: 5
        }
      },
      "18": {
        start: {
          line: 154,
          column: 50
        },
        end: {
          line: 162,
          column: 13
        }
      },
      "19": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 171,
          column: 7
        }
      },
      "20": {
        start: {
          line: 174,
          column: 22
        },
        end: {
          line: 187,
          column: 5
        }
      },
      "21": {
        start: {
          line: 176,
          column: 50
        },
        end: {
          line: 186,
          column: 13
        }
      },
      "22": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 194,
          column: 7
        }
      },
      "23": {
        start: {
          line: 197,
          column: 23
        },
        end: {
          line: 197,
          column: 60
        }
      },
      "24": {
        start: {
          line: 198,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 26
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 27
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "BarChart",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 17
          }
        },
        loc: {
          start: {
            line: 32,
            column: 159
          },
          end: {
            line: 150,
            column: 1
          }
        },
        line: 32
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 36
          },
          end: {
            line: 125,
            column: 37
          }
        },
        loc: {
          start: {
            line: 125,
            column: 55
          },
          end: {
            line: 134,
            column: 13
          }
        },
        line: 125
      },
      "7": {
        name: "StackedBarChart",
        decl: {
          start: {
            line: 151,
            column: 9
          },
          end: {
            line: 151,
            column: 24
          }
        },
        loc: {
          start: {
            line: 151,
            column: 104
          },
          end: {
            line: 172,
            column: 1
          }
        },
        line: 151
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 154,
            column: 31
          },
          end: {
            line: 154,
            column: 32
          }
        },
        loc: {
          start: {
            line: 154,
            column: 50
          },
          end: {
            line: 162,
            column: 13
          }
        },
        line: 154
      },
      "9": {
        name: "GroupedBarChart",
        decl: {
          start: {
            line: 173,
            column: 9
          },
          end: {
            line: 173,
            column: 24
          }
        },
        loc: {
          start: {
            line: 173,
            column: 84
          },
          end: {
            line: 195,
            column: 1
          }
        },
        line: 173
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 176,
            column: 31
          },
          end: {
            line: 176,
            column: 32
          }
        },
        loc: {
          start: {
            line: 176,
            column: 50
          },
          end: {
            line: 186,
            column: 13
          }
        },
        line: 176
      },
      "11": {
        name: "MetricBarChart",
        decl: {
          start: {
            line: 196,
            column: 9
          },
          end: {
            line: 196,
            column: 23
          }
        },
        loc: {
          start: {
            line: 196,
            column: 119
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 196
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 42
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 60
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 67
          },
          end: {
            line: 32,
            column: 82
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 77
          },
          end: {
            line: 32,
            column: 82
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 84
          },
          end: {
            line: 32,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 95
          },
          end: {
            line: 32,
            column: 99
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 32,
            column: 101
          },
          end: {
            line: 32,
            column: 118
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 114
          },
          end: {
            line: 32,
            column: 118
          }
        }],
        line: 32
      },
      "5": {
        loc: {
          start: {
            line: 32,
            column: 120
          },
          end: {
            line: 32,
            column: 139
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 135
          },
          end: {
            line: 32,
            column: 139
          }
        }],
        line: 32
      },
      "6": {
        loc: {
          start: {
            line: 32,
            column: 141
          },
          end: {
            line: 32,
            column: 155
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 153
          },
          end: {
            line: 32,
            column: 155
          }
        }],
        line: 32
      },
      "7": {
        loc: {
          start: {
            line: 37,
            column: 19
          },
          end: {
            line: 37,
            column: 41
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 32
          },
          end: {
            line: 37,
            column: 35
          }
        }, {
          start: {
            line: 37,
            column: 38
          },
          end: {
            line: 37,
            column: 41
          }
        }],
        line: 37
      },
      "8": {
        loc: {
          start: {
            line: 39,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 39,
            column: 27
          },
          end: {
            line: 51,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 39
      },
      "9": {
        loc: {
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 29
          },
          end: {
            line: 85,
            column: 37
          }
        }, {
          start: {
            line: 85,
            column: 41
          },
          end: {
            line: 85,
            column: 52
          }
        }],
        line: 85
      },
      "10": {
        loc: {
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 127,
            column: 105
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 33
          },
          end: {
            line: 127,
            column: 56
          }
        }, {
          start: {
            line: 127,
            column: 60
          },
          end: {
            line: 127,
            column: 105
          }
        }],
        line: 127
      },
      "11": {
        loc: {
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 128,
            column: 29
          },
          end: {
            line: 128,
            column: 48
          }
        }, {
          start: {
            line: 128,
            column: 52
          },
          end: {
            line: 128,
            column: 90
          }
        }],
        line: 128
      },
      "12": {
        loc: {
          start: {
            line: 132,
            column: 30
          },
          end: {
            line: 132,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 132,
            column: 43
          },
          end: {
            line: 132,
            column: 52
          }
        }, {
          start: {
            line: 132,
            column: 55
          },
          end: {
            line: 132,
            column: 61
          }
        }],
        line: 132
      },
      "13": {
        loc: {
          start: {
            line: 133,
            column: 33
          },
          end: {
            line: 133,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 133,
            column: 46
          },
          end: {
            line: 133,
            column: 48
          }
        }, {
          start: {
            line: 133,
            column: 51
          },
          end: {
            line: 133,
            column: 53
          }
        }],
        line: 133
      },
      "14": {
        loc: {
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 146,
            column: 30
          },
          end: {
            line: 146,
            column: 35
          }
        }, {
          start: {
            line: 146,
            column: 39
          },
          end: {
            line: 146,
            column: 50
          }
        }],
        line: 146
      },
      "15": {
        loc: {
          start: {
            line: 151,
            column: 52
          },
          end: {
            line: 151,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 61
          },
          end: {
            line: 151,
            column: 64
          }
        }],
        line: 151
      },
      "16": {
        loc: {
          start: {
            line: 151,
            column: 66
          },
          end: {
            line: 151,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 79
          },
          end: {
            line: 151,
            column: 84
          }
        }],
        line: 151
      },
      "17": {
        loc: {
          start: {
            line: 151,
            column: 86
          },
          end: {
            line: 151,
            column: 100
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 98
          },
          end: {
            line: 151,
            column: 100
          }
        }],
        line: 151
      },
      "18": {
        loc: {
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 36
          },
          end: {
            line: 157,
            column: 49
          }
        }, {
          start: {
            line: 157,
            column: 53
          },
          end: {
            line: 157,
            column: 91
          }
        }],
        line: 157
      },
      "19": {
        loc: {
          start: {
            line: 158,
            column: 29
          },
          end: {
            line: 158,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 158,
            column: 29
          },
          end: {
            line: 158,
            column: 42
          }
        }, {
          start: {
            line: 158,
            column: 46
          },
          end: {
            line: 158,
            column: 84
          }
        }],
        line: 158
      },
      "20": {
        loc: {
          start: {
            line: 173,
            column: 52
          },
          end: {
            line: 173,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 61
          },
          end: {
            line: 173,
            column: 64
          }
        }],
        line: 173
      },
      "21": {
        loc: {
          start: {
            line: 173,
            column: 66
          },
          end: {
            line: 173,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 173,
            column: 78
          },
          end: {
            line: 173,
            column: 80
          }
        }],
        line: 173
      },
      "22": {
        loc: {
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 179,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 179,
            column: 36
          },
          end: {
            line: 179,
            column: 49
          }
        }, {
          start: {
            line: 179,
            column: 53
          },
          end: {
            line: 179,
            column: 91
          }
        }],
        line: 179
      },
      "23": {
        loc: {
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 180,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 180,
            column: 42
          }
        }, {
          start: {
            line: 180,
            column: 46
          },
          end: {
            line: 180,
            column: 84
          }
        }],
        line: 180
      },
      "24": {
        loc: {
          start: {
            line: 196,
            column: 50
          },
          end: {
            line: 196,
            column: 86
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 196,
            column: 58
          },
          end: {
            line: 196,
            column: 86
          }
        }],
        line: 196
      },
      "25": {
        loc: {
          start: {
            line: 196,
            column: 88
          },
          end: {
            line: 196,
            column: 99
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 196,
            column: 97
          },
          end: {
            line: 196,
            column: 99
          }
        }],
        line: 196
      },
      "26": {
        loc: {
          start: {
            line: 196,
            column: 101
          },
          end: {
            line: 196,
            column: 115
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 196,
            column: 113
          },
          end: {
            line: 196,
            column: 115
          }
        }],
        line: 196
      },
      "27": {
        loc: {
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 217,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 201,
            column: 12
          },
          end: {
            line: 201,
            column: 17
          }
        }, {
          start: {
            line: 201,
            column: 35
          },
          end: {
            line: 217,
            column: 14
          }
        }],
        line: 201
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0],
      "21": [0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0],
      "25": [0],
      "26": [0],
      "27": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/components/charts/BarChart.tsx"],
      sourcesContent: ["'use client';\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  type ChartData,\n  type ChartOptions,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nimport { getDefaultChartOptions, formatTooltip, CHART_COLORS } from '@/lib/charts/config';\n\n// Register Chart.js components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport interface BarChartProps {\n  data: ChartData<'bar'>;\n  title?: string;\n  height?: number;\n  horizontal?: boolean;\n  stacked?: boolean;\n  showGrid?: boolean;\n  showLegend?: boolean;\n  showTooltips?: boolean;\n  className?: string;\n}\n\n/**\n * Professional Bar Chart Component\n * Optimized for comparative data visualization\n */\nexport function BarChart({\n  data,\n  title,\n  height = 300,\n  horizontal = false,\n  stacked = false,\n  showGrid = true,\n  showLegend = true,\n  showTooltips = true,\n  className = '',\n}: BarChartProps): React.ReactElement {\n  \n  // Chart type is always 'bar', horizontal is controlled by indexAxis\n  \n  const options: ChartOptions<'bar'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    indexAxis: horizontal ? 'y' : 'x',\n    \n    plugins: {\n      title: title ? {\n        display: true,\n        text: title,\n        font: {\n          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n          size: 16,\n          weight: 600,\n        },\n        color: CHART_COLORS.textPrimary,\n        padding: {\n          bottom: 20,\n        },\n      } : { display: false },\n      \n      legend: {\n        display: showLegend,\n        position: 'top' as const,\n        labels: {\n          font: {\n            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n            size: 12,\n            weight: 400,\n          },\n          color: CHART_COLORS.textPrimary,\n          padding: 20,\n        },\n      },\n      \n      tooltip: {\n        enabled: showTooltips,\n        backgroundColor: CHART_COLORS.background,\n        titleColor: CHART_COLORS.textPrimary,\n        bodyColor: CHART_COLORS.textSecondary,\n        borderColor: CHART_COLORS.border,\n        borderWidth: 1,\n        cornerRadius: 8,\n        padding: 12,\n        callbacks: {\n          label: formatTooltip,\n        },\n      },\n    },\n    \n    scales: {\n      x: {\n        stacked,\n        grid: {\n          display: showGrid && !horizontal,\n          color: '#F0E5C8',\n        },\n        ticks: {\n          font: {\n            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n            size: 11,\n            weight: 400,\n          },\n          color: CHART_COLORS.textMuted,\n        },\n      },\n      y: {\n        stacked,\n        grid: {\n          display: showGrid,\n          color: '#F0E5C8',\n        },\n        ticks: {\n          font: {\n            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',\n            size: 11,\n            weight: 400,\n          },\n          color: CHART_COLORS.textMuted,\n        },\n      },\n    },\n    \n    animation: {\n      duration: 750,\n      easing: 'easeInOutCubic',\n    },\n    \n    interaction: {\n      intersect: false,\n      mode: 'index' as const,\n    },\n  };\n\n  // Apply styling to datasets\n  const styledData: ChartData<'bar'> = {\n    ...data,\n    datasets: data.datasets.map((dataset, index) => ({\n      ...dataset,\n      backgroundColor: dataset.backgroundColor || `${CHART_COLORS.dataColors[index]}90`,\n      borderColor: dataset.borderColor || CHART_COLORS.dataColors[index],\n      borderWidth: 0,\n      borderRadius: 6,\n      borderSkipped: false,\n      barThickness: horizontal ? undefined : 'flex',\n      maxBarThickness: horizontal ? 30 : 50,\n    })),\n  };\n\n  return (\n    <div \n      className={`w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`}\n      style={{ height: height + 40 }} // Add padding for container\n    >\n      <div className=\"w-full h-full\">\n        <Bar \n          data={styledData} \n          options={options}\n          aria-label={title || 'Bar chart'}\n        />\n      </div>\n    </div>\n  );\n}\n\n/**\n * Stacked Bar Chart for composition analysis\n */\nexport function StackedBarChart({\n  datasets,\n  labels,\n  title,\n  height = 300,\n  horizontal = false,\n  className = '',\n}: {\n  datasets: Array<{\n    label: string;\n    data: number[];\n    color?: string;\n  }>;\n  labels: string[];\n  title?: string;\n  height?: number;\n  horizontal?: boolean;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'bar'> = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: `${dataset.color || CHART_COLORS.dataColors[index]}90`,\n      borderColor: dataset.color || CHART_COLORS.dataColors[index],\n      borderWidth: 0,\n      borderRadius: 4,\n      borderSkipped: false,\n    })),\n  };\n\n  return (\n    <BarChart\n      data={chartData}\n      title={title}\n      height={height}\n      horizontal={horizontal}\n      stacked={true}\n      className={className}\n    />\n  );\n}\n\n/**\n * Grouped Bar Chart for side-by-side comparison\n */\nexport function GroupedBarChart({\n  datasets,\n  labels,\n  title,\n  height = 300,\n  className = '',\n}: {\n  datasets: Array<{\n    label: string;\n    data: number[];\n    color?: string;\n  }>;\n  labels: string[];\n  title?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const chartData: ChartData<'bar'> = {\n    labels,\n    datasets: datasets.map((dataset, index) => ({\n      label: dataset.label,\n      data: dataset.data,\n      backgroundColor: `${dataset.color || CHART_COLORS.dataColors[index]}90`,\n      borderColor: dataset.color || CHART_COLORS.dataColors[index],\n      borderWidth: 0,\n      borderRadius: 6,\n      borderSkipped: false,\n      barPercentage: 0.8,\n      categoryPercentage: 0.9,\n    })),\n  };\n\n  return (\n    <BarChart\n      data={chartData}\n      title={title}\n      height={height}\n      stacked={false}\n      className={className}\n    />\n  );\n}\n\n/**\n * Simple metric bar for dashboard widgets\n */\nexport function MetricBarChart({\n  value,\n  maxValue,\n  label,\n  color = CHART_COLORS.primary,\n  height = 20,\n  className = '',\n}: {\n  value: number;\n  maxValue: number;\n  label?: string;\n  color?: string;\n  height?: number;\n  className?: string;\n}): React.ReactElement {\n  \n  const percentage = Math.min((value / maxValue) * 100, 100);\n  \n  return (\n    <div className={`w-full ${className}`}>\n      {label && (\n        <div className=\"flex justify-between items-center mb-2\">\n          <span className=\"text-sm font-medium text-[#3d3d3d]\">{label}</span>\n          <span className=\"text-sm text-[#5d5d5d]\">\n            {value.toLocaleString('de-DE')} / {maxValue.toLocaleString('de-DE')}\n          </span>\n        </div>\n      )}\n      <div \n        className=\"w-full bg-[#F5EFE7] rounded-full overflow-hidden\"\n        style={{ height }}\n      >\n        <div\n          className=\"h-full rounded-full transition-all duration-500 ease-out\"\n          style={{\n            width: `${percentage}%`,\n            backgroundColor: color,\n          }}\n        />\n      </div>\n    </div>\n  );\n}"],
      names: ["BarChart", "GroupedBarChart", "MetricBarChart", "StackedBarChart", "ChartJS", "register", "CategoryScale", "LinearScale", "BarElement", "Title", "Tooltip", "Legend", "data", "title", "height", "horizontal", "stacked", "showGrid", "showLegend", "showTooltips", "className", "options", "responsive", "maintainAspectRatio", "indexAxis", "plugins", "display", "text", "font", "family", "size", "weight", "color", "CHART_COLORS", "textPrimary", "padding", "bottom", "legend", "position", "labels", "tooltip", "enabled", "backgroundColor", "background", "titleColor", "bodyColor", "textSecondary", "borderColor", "border", "borderWidth", "cornerRadius", "callbacks", "label", "formatTooltip", "scales", "x", "grid", "ticks", "textMuted", "y", "animation", "duration", "easing", "interaction", "intersect", "mode", "styledData", "datasets", "map", "dataset", "index", "dataColors", "borderRadius", "borderSkipped", "barThickness", "undefined", "maxBarThickness", "div", "style", "Bar", "aria-label", "chartData", "barPercentage", "categoryPercentage", "value", "maxValue", "primary", "percentage", "Math", "min", "span", "toLocaleString", "width"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "691d45d35a918d02ac10efdff3113c5a0c7a94a4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2rrcnsvj92 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2rrcnsvj92();
cov_2rrcnsvj92().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_2rrcnsvj92().f[0]++;
  cov_2rrcnsvj92().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_2rrcnsvj92().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_2rrcnsvj92().s[3]++;
_export(exports, {
  get BarChart() {
    /* istanbul ignore next */
    cov_2rrcnsvj92().f[1]++;
    cov_2rrcnsvj92().s[4]++;
    return BarChart;
  },
  get GroupedBarChart() {
    /* istanbul ignore next */
    cov_2rrcnsvj92().f[2]++;
    cov_2rrcnsvj92().s[5]++;
    return GroupedBarChart;
  },
  get MetricBarChart() {
    /* istanbul ignore next */
    cov_2rrcnsvj92().f[3]++;
    cov_2rrcnsvj92().s[6]++;
    return MetricBarChart;
  },
  get StackedBarChart() {
    /* istanbul ignore next */
    cov_2rrcnsvj92().f[4]++;
    cov_2rrcnsvj92().s[7]++;
    return StackedBarChart;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2rrcnsvj92().s[8]++, require("react/jsx-runtime"));
const _chart =
/* istanbul ignore next */
(cov_2rrcnsvj92().s[9]++, require("chart.js"));
const _reactchartjs2 =
/* istanbul ignore next */
(cov_2rrcnsvj92().s[10]++, require("react-chartjs-2"));
const _config =
/* istanbul ignore next */
(cov_2rrcnsvj92().s[11]++, require("../../lib/charts/config"));
// Register Chart.js components
/* istanbul ignore next */
cov_2rrcnsvj92().s[12]++;
_chart.Chart.register(_chart.CategoryScale, _chart.LinearScale, _chart.BarElement, _chart.Title, _chart.Tooltip, _chart.Legend);
function BarChart({
  data,
  title,
  height =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[0][0]++, 300),
  horizontal =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[1][0]++, false),
  stacked =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[2][0]++, false),
  showGrid =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[3][0]++, true),
  showLegend =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[4][0]++, true),
  showTooltips =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[5][0]++, true),
  className =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[6][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2rrcnsvj92().f[5]++;
  // Chart type is always 'bar', horizontal is controlled by indexAxis
  const options =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().s[13]++, {
    responsive: true,
    maintainAspectRatio: false,
    indexAxis: horizontal ?
    /* istanbul ignore next */
    (cov_2rrcnsvj92().b[7][0]++, 'y') :
    /* istanbul ignore next */
    (cov_2rrcnsvj92().b[7][1]++, 'x'),
    plugins: {
      title: title ?
      /* istanbul ignore next */
      (cov_2rrcnsvj92().b[8][0]++, {
        display: true,
        text: title,
        font: {
          family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',
          size: 16,
          weight: 600
        },
        color: _config.CHART_COLORS.textPrimary,
        padding: {
          bottom: 20
        }
      }) :
      /* istanbul ignore next */
      (cov_2rrcnsvj92().b[8][1]++, {
        display: false
      }),
      legend: {
        display: showLegend,
        position: 'top',
        labels: {
          font: {
            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',
            size: 12,
            weight: 400
          },
          color: _config.CHART_COLORS.textPrimary,
          padding: 20
        }
      },
      tooltip: {
        enabled: showTooltips,
        backgroundColor: _config.CHART_COLORS.background,
        titleColor: _config.CHART_COLORS.textPrimary,
        bodyColor: _config.CHART_COLORS.textSecondary,
        borderColor: _config.CHART_COLORS.border,
        borderWidth: 1,
        cornerRadius: 8,
        padding: 12,
        callbacks: {
          label: _config.formatTooltip
        }
      }
    },
    scales: {
      x: {
        stacked,
        grid: {
          display:
          /* istanbul ignore next */
          (cov_2rrcnsvj92().b[9][0]++, showGrid) &&
          /* istanbul ignore next */
          (cov_2rrcnsvj92().b[9][1]++, !horizontal),
          color: '#F0E5C8'
        },
        ticks: {
          font: {
            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',
            size: 11,
            weight: 400
          },
          color: _config.CHART_COLORS.textMuted
        }
      },
      y: {
        stacked,
        grid: {
          display: showGrid,
          color: '#F0E5C8'
        },
        ticks: {
          font: {
            family: 'Inter, -apple-system, BlinkMacSystemFont, sans-serif',
            size: 11,
            weight: 400
          },
          color: _config.CHART_COLORS.textMuted
        }
      }
    },
    animation: {
      duration: 750,
      easing: 'easeInOutCubic'
    },
    interaction: {
      intersect: false,
      mode: 'index'
    }
  });
  // Apply styling to datasets
  const styledData =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().s[14]++, {
    ...data,
    datasets: data.datasets.map((dataset, index) => {
      /* istanbul ignore next */
      cov_2rrcnsvj92().f[6]++;
      cov_2rrcnsvj92().s[15]++;
      return {
        ...dataset,
        backgroundColor:
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[10][0]++, dataset.backgroundColor) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[10][1]++, `${_config.CHART_COLORS.dataColors[index]}90`),
        borderColor:
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[11][0]++, dataset.borderColor) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[11][1]++, _config.CHART_COLORS.dataColors[index]),
        borderWidth: 0,
        borderRadius: 6,
        borderSkipped: false,
        barThickness: horizontal ?
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[12][0]++, undefined) :
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[12][1]++, 'flex'),
        maxBarThickness: horizontal ?
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[13][0]++, 30) :
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[13][1]++, 50)
      };
    })
  });
  /* istanbul ignore next */
  cov_2rrcnsvj92().s[16]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
    className: `w-full bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-4 ${className}`,
    style: {
      height: height + 40
    },
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "w-full h-full",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_reactchartjs2.Bar, {
        data: styledData,
        options: options,
        "aria-label":
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[14][0]++, title) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[14][1]++, 'Bar chart')
      })
    })
  });
}
function StackedBarChart({
  datasets,
  labels,
  title,
  height =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[15][0]++, 300),
  horizontal =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[16][0]++, false),
  className =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[17][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2rrcnsvj92().f[7]++;
  const chartData =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().s[17]++, {
    labels,
    datasets: datasets.map((dataset, index) => {
      /* istanbul ignore next */
      cov_2rrcnsvj92().f[8]++;
      cov_2rrcnsvj92().s[18]++;
      return {
        label: dataset.label,
        data: dataset.data,
        backgroundColor: `${
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[18][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[18][1]++, _config.CHART_COLORS.dataColors[index])}90`,
        borderColor:
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[19][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[19][1]++, _config.CHART_COLORS.dataColors[index]),
        borderWidth: 0,
        borderRadius: 4,
        borderSkipped: false
      };
    })
  });
  /* istanbul ignore next */
  cov_2rrcnsvj92().s[19]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(BarChart, {
    data: chartData,
    title: title,
    height: height,
    horizontal: horizontal,
    stacked: true,
    className: className
  });
}
function GroupedBarChart({
  datasets,
  labels,
  title,
  height =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[20][0]++, 300),
  className =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[21][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2rrcnsvj92().f[9]++;
  const chartData =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().s[20]++, {
    labels,
    datasets: datasets.map((dataset, index) => {
      /* istanbul ignore next */
      cov_2rrcnsvj92().f[10]++;
      cov_2rrcnsvj92().s[21]++;
      return {
        label: dataset.label,
        data: dataset.data,
        backgroundColor: `${
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[22][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[22][1]++, _config.CHART_COLORS.dataColors[index])}90`,
        borderColor:
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[23][0]++, dataset.color) ||
        /* istanbul ignore next */
        (cov_2rrcnsvj92().b[23][1]++, _config.CHART_COLORS.dataColors[index]),
        borderWidth: 0,
        borderRadius: 6,
        borderSkipped: false,
        barPercentage: 0.8,
        categoryPercentage: 0.9
      };
    })
  });
  /* istanbul ignore next */
  cov_2rrcnsvj92().s[22]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(BarChart, {
    data: chartData,
    title: title,
    height: height,
    stacked: false,
    className: className
  });
}
function MetricBarChart({
  value,
  maxValue,
  label,
  color =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[24][0]++, _config.CHART_COLORS.primary),
  height =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[25][0]++, 20),
  className =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().b[26][0]++, '')
}) {
  /* istanbul ignore next */
  cov_2rrcnsvj92().f[11]++;
  const percentage =
  /* istanbul ignore next */
  (cov_2rrcnsvj92().s[23]++, Math.min(value / maxValue * 100, 100));
  /* istanbul ignore next */
  cov_2rrcnsvj92().s[24]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: `w-full ${className}`,
    children: [
    /* istanbul ignore next */
    (cov_2rrcnsvj92().b[27][0]++, label) &&
    /* istanbul ignore next */
    (cov_2rrcnsvj92().b[27][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex justify-between items-center mb-2",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        className: "text-sm font-medium text-[#3d3d3d]",
        children: label
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
        className: "text-sm text-[#5d5d5d]",
        children: [value.toLocaleString('de-DE'), " / ", maxValue.toLocaleString('de-DE')]
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "w-full bg-[#F5EFE7] rounded-full overflow-hidden",
      style: {
        height
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "h-full rounded-full transition-all duration-500 ease-out",
        style: {
          width: `${percentage}%`,
          backgroundColor: color
        }
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,