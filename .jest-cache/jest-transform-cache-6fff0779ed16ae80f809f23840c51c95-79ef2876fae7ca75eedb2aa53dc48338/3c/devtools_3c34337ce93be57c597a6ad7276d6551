3fc6c43ac734a45a6ecf9ab69733ff68
/**
 * Enhanced TanStack Query DevTools Configuration
 * Advanced development tools for BI SaaS dashboard optimization
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_103r58a2z9() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools.tsx";
  var hash = "184030d6e141d9719862d38eee83eea82484235b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 37
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "6": {
        start: {
          line: 23,
          column: 20
        },
        end: {
          line: 23,
          column: 48
        }
      },
      "7": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 52
        }
      },
      "8": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 69
        }
      },
      "9": {
        start: {
          line: 26,
          column: 15
        },
        end: {
          line: 26,
          column: 31
        }
      },
      "10": {
        start: {
          line: 27,
          column: 16
        },
        end: {
          line: 27,
          column: 48
        }
      },
      "11": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "12": {
        start: {
          line: 29,
          column: 28
        },
        end: {
          line: 29,
          column: 60
        }
      },
      "13": {
        start: {
          line: 30,
          column: 19
        },
        end: {
          line: 30,
          column: 42
        }
      },
      "14": {
        start: {
          line: 32,
          column: 24
        },
        end: {
          line: 32,
          column: 57
        }
      },
      "15": {
        start: {
          line: 33,
          column: 36
        },
        end: {
          line: 38,
          column: 6
        }
      },
      "16": {
        start: {
          line: 40,
          column: 33
        },
        end: {
          line: 40,
          column: 87
        }
      },
      "17": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 45,
          column: 7
        }
      },
      "18": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 83,
          column: 7
        }
      },
      "19": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "20": {
        start: {
          line: 48,
          column: 52
        },
        end: {
          line: 48,
          column: 59
        }
      },
      "21": {
        start: {
          line: 49,
          column: 30
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "22": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "23": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "24": {
        start: {
          line: 53,
          column: 16
        },
        end: {
          line: 53,
          column: 36
        }
      },
      "25": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 87
        }
      },
      "26": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 63,
          column: 13
        }
      },
      "27": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 39
        }
      },
      "28": {
        start: {
          line: 59,
          column: 16
        },
        end: {
          line: 62,
          column: 24
        }
      },
      "29": {
        start: {
          line: 59,
          column: 37
        },
        end: {
          line: 62,
          column: 21
        }
      },
      "30": {
        start: {
          line: 65,
          column: 12
        },
        end: {
          line: 71,
          column: 13
        }
      },
      "31": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 39
        }
      },
      "32": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 70,
          column: 24
        }
      },
      "33": {
        start: {
          line: 67,
          column: 37
        },
        end: {
          line: 70,
          column: 21
        }
      },
      "34": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 77,
          column: 13
        }
      },
      "35": {
        start: {
          line: 74,
          column: 16
        },
        end: {
          line: 74,
          column: 39
        }
      },
      "36": {
        start: {
          line: 75,
          column: 16
        },
        end: {
          line: 75,
          column: 45
        }
      },
      "37": {
        start: {
          line: 76,
          column: 16
        },
        end: {
          line: 76,
          column: 89
        }
      },
      "38": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 58
        }
      },
      "39": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 80,
          column: 72
        }
      },
      "40": {
        start: {
          line: 80,
          column: 19
        },
        end: {
          line: 80,
          column: 71
        }
      },
      "41": {
        start: {
          line: 85,
          column: 34
        },
        end: {
          line: 123,
          column: 6
        }
      },
      "42": {
        start: {
          line: 86,
          column: 24
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "43": {
        start: {
          line: 87,
          column: 26
        },
        end: {
          line: 87,
          column: 65
        }
      },
      "44": {
        start: {
          line: 88,
          column: 8
        },
        end: {
          line: 120,
          column: 10
        }
      },
      "45": {
        start: {
          line: 92,
          column: 49
        },
        end: {
          line: 92,
          column: 77
        }
      },
      "46": {
        start: {
          line: 93,
          column: 47
        },
        end: {
          line: 93,
          column: 73
        }
      },
      "47": {
        start: {
          line: 94,
          column: 49
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "48": {
        start: {
          line: 95,
          column: 47
        },
        end: {
          line: 95,
          column: 58
        }
      },
      "49": {
        start: {
          line: 96,
          column: 50
        },
        end: {
          line: 96,
          column: 77
        }
      },
      "50": {
        start: {
          line: 100,
          column: 51
        },
        end: {
          line: 100,
          column: 79
        }
      },
      "51": {
        start: {
          line: 101,
          column: 49
        },
        end: {
          line: 101,
          column: 75
        }
      },
      "52": {
        start: {
          line: 102,
          column: 51
        },
        end: {
          line: 102,
          column: 79
        }
      },
      "53": {
        start: {
          line: 106,
          column: 36
        },
        end: {
          line: 106,
          column: 38
        }
      },
      "54": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 110,
          column: 19
        }
      },
      "55": {
        start: {
          line: 108,
          column: 35
        },
        end: {
          line: 108,
          column: 96
        }
      },
      "56": {
        start: {
          line: 109,
          column: 20
        },
        end: {
          line: 109,
          column: 73
        }
      },
      "57": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 35
        }
      },
      "58": {
        start: {
          line: 115,
          column: 37
        },
        end: {
          line: 115,
          column: 82
        }
      },
      "59": {
        start: {
          line: 116,
          column: 20
        },
        end: {
          line: 116,
          column: 43
        }
      },
      "60": {
        start: {
          line: 118,
          column: 86
        },
        end: {
          line: 118,
          column: 139
        }
      },
      "61": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 258,
          column: 7
        }
      },
      "62": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "63": {
        start: {
          line: 126,
          column: 52
        },
        end: {
          line: 126,
          column: 59
        }
      },
      "64": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "65": {
        start: {
          line: 127,
          column: 43
        },
        end: {
          line: 127,
          column: 50
        }
      },
      "66": {
        start: {
          line: 128,
          column: 32
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "67": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 130,
          column: 67
        }
      },
      "68": {
        start: {
          line: 131,
          column: 33
        },
        end: {
          line: 131,
          column: 72
        }
      },
      "69": {
        start: {
          line: 132,
          column: 28
        },
        end: {
          line: 132,
          column: 47
        }
      },
      "70": {
        start: {
          line: 133,
          column: 31
        },
        end: {
          line: 133,
          column: 62
        }
      },
      "71": {
        start: {
          line: 134,
          column: 28
        },
        end: {
          line: 134,
          column: 56
        }
      },
      "72": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 141,
          column: 19
        }
      },
      "73": {
        start: {
          line: 140,
          column: 40
        },
        end: {
          line: 140,
          column: 101
        }
      },
      "74": {
        start: {
          line: 142,
          column: 16
        },
        end: {
          line: 142,
          column: 91
        }
      },
      "75": {
        start: {
          line: 146,
          column: 16
        },
        end: {
          line: 146,
          column: 128
        }
      },
      "76": {
        start: {
          line: 146,
          column: 76
        },
        end: {
          line: 146,
          column: 126
        }
      },
      "77": {
        start: {
          line: 150,
          column: 16
        },
        end: {
          line: 161,
          column: 19
        }
      },
      "78": {
        start: {
          line: 150,
          column: 76
        },
        end: {
          line: 150,
          column: 106
        }
      },
      "79": {
        start: {
          line: 151,
          column: 35
        },
        end: {
          line: 155,
          column: 21
        }
      },
      "80": {
        start: {
          line: 156,
          column: 41
        },
        end: {
          line: 156,
          column: 70
        }
      },
      "81": {
        start: {
          line: 157,
          column: 20
        },
        end: {
          line: 159,
          column: 21
        }
      },
      "82": {
        start: {
          line: 158,
          column: 24
        },
        end: {
          line: 158,
          column: 60
        }
      },
      "83": {
        start: {
          line: 160,
          column: 20
        },
        end: {
          line: 160,
          column: 34
        }
      },
      "84": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 170,
          column: 24
        }
      },
      "85": {
        start: {
          line: 165,
          column: 76
        },
        end: {
          line: 165,
          column: 91
        }
      },
      "86": {
        start: {
          line: 165,
          column: 107
        },
        end: {
          line: 170,
          column: 21
        }
      },
      "87": {
        start: {
          line: 174,
          column: 32
        },
        end: {
          line: 174,
          column: 68
        }
      },
      "88": {
        start: {
          line: 175,
          column: 37
        },
        end: {
          line: 175,
          column: 51
        }
      },
      "89": {
        start: {
          line: 176,
          column: 35
        },
        end: {
          line: 176,
          column: 90
        }
      },
      "90": {
        start: {
          line: 176,
          column: 55
        },
        end: {
          line: 176,
          column: 82
        }
      },
      "91": {
        start: {
          line: 177,
          column: 37
        },
        end: {
          line: 177,
          column: 92
        }
      },
      "92": {
        start: {
          line: 177,
          column: 57
        },
        end: {
          line: 177,
          column: 84
        }
      },
      "93": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 183,
          column: 18
        }
      },
      "94": {
        start: {
          line: 182,
          column: 83
        },
        end: {
          line: 182,
          column: 112
        }
      },
      "95": {
        start: {
          line: 187,
          column: 38
        },
        end: {
          line: 187,
          column: 50
        }
      },
      "96": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 192,
          column: 18
        }
      },
      "97": {
        start: {
          line: 189,
          column: 20
        },
        end: {
          line: 191,
          column: 23
        }
      },
      "98": {
        start: {
          line: 190,
          column: 24
        },
        end: {
          line: 190,
          column: 76
        }
      },
      "99": {
        start: {
          line: 190,
          column: 39
        },
        end: {
          line: 190,
          column: 70
        }
      },
      "100": {
        start: {
          line: 193,
          column: 16
        },
        end: {
          line: 195,
          column: 19
        }
      },
      "101": {
        start: {
          line: 197,
          column: 16
        },
        end: {
          line: 202,
          column: 26
        }
      },
      "102": {
        start: {
          line: 198,
          column: 20
        },
        end: {
          line: 198,
          column: 49
        }
      },
      "103": {
        start: {
          line: 199,
          column: 20
        },
        end: {
          line: 201,
          column: 23
        }
      },
      "104": {
        start: {
          line: 215,
          column: 16
        },
        end: {
          line: 215,
          column: 126
        }
      },
      "105": {
        start: {
          line: 218,
          column: 16
        },
        end: {
          line: 218,
          column: 76
        }
      },
      "106": {
        start: {
          line: 221,
          column: 42
        },
        end: {
          line: 221,
          column: 69
        }
      },
      "107": {
        start: {
          line: 222,
          column: 42
        },
        end: {
          line: 222,
          column: 69
        }
      },
      "108": {
        start: {
          line: 223,
          column: 44
        },
        end: {
          line: 223,
          column: 73
        }
      },
      "109": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 226,
          column: 44
        }
      },
      "110": {
        start: {
          line: 228,
          column: 8
        },
        end: {
          line: 253,
          column: 11
        }
      },
      "111": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 229,
          column: 55
        }
      },
      "112": {
        start: {
          line: 230,
          column: 12
        },
        end: {
          line: 230,
          column: 87
        }
      },
      "113": {
        start: {
          line: 231,
          column: 12
        },
        end: {
          line: 231,
          column: 87
        }
      },
      "114": {
        start: {
          line: 232,
          column: 12
        },
        end: {
          line: 232,
          column: 91
        }
      },
      "115": {
        start: {
          line: 233,
          column: 12
        },
        end: {
          line: 233,
          column: 85
        }
      },
      "116": {
        start: {
          line: 234,
          column: 12
        },
        end: {
          line: 234,
          column: 56
        }
      },
      "117": {
        start: {
          line: 235,
          column: 12
        },
        end: {
          line: 235,
          column: 94
        }
      },
      "118": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 236,
          column: 88
        }
      },
      "119": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 237,
          column: 104
        }
      },
      "120": {
        start: {
          line: 238,
          column: 12
        },
        end: {
          line: 238,
          column: 56
        }
      },
      "121": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 112
        }
      },
      "122": {
        start: {
          line: 240,
          column: 12
        },
        end: {
          line: 240,
          column: 104
        }
      },
      "123": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 48
        }
      },
      "124": {
        start: {
          line: 242,
          column: 12
        },
        end: {
          line: 242,
          column: 96
        }
      },
      "125": {
        start: {
          line: 243,
          column: 12
        },
        end: {
          line: 243,
          column: 97
        }
      },
      "126": {
        start: {
          line: 244,
          column: 12
        },
        end: {
          line: 244,
          column: 60
        }
      },
      "127": {
        start: {
          line: 245,
          column: 12
        },
        end: {
          line: 245,
          column: 103
        }
      },
      "128": {
        start: {
          line: 246,
          column: 12
        },
        end: {
          line: 246,
          column: 98
        }
      },
      "129": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 247,
          column: 57
        }
      },
      "130": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 74
        }
      },
      "131": {
        start: {
          line: 249,
          column: 12
        },
        end: {
          line: 249,
          column: 74
        }
      },
      "132": {
        start: {
          line: 250,
          column: 12
        },
        end: {
          line: 250,
          column: 83
        }
      },
      "133": {
        start: {
          line: 251,
          column: 12
        },
        end: {
          line: 251,
          column: 83
        }
      },
      "134": {
        start: {
          line: 252,
          column: 12
        },
        end: {
          line: 252,
          column: 91
        }
      },
      "135": {
        start: {
          line: 259,
          column: 4
        },
        end: {
          line: 261,
          column: 5
        }
      },
      "136": {
        start: {
          line: 260,
          column: 8
        },
        end: {
          line: 260,
          column: 20
        }
      },
      "137": {
        start: {
          line: 262,
          column: 4
        },
        end: {
          line: 340,
          column: 7
        }
      },
      "138": {
        start: {
          line: 316,
          column: 45
        },
        end: {
          line: 319,
          column: 43
        }
      },
      "139": {
        start: {
          line: 316,
          column: 66
        },
        end: {
          line: 319,
          column: 41
        }
      },
      "140": {
        start: {
          line: 344,
          column: 30
        },
        end: {
          line: 344,
          column: 62
        }
      },
      "141": {
        start: {
          line: 345,
          column: 4
        },
        end: {
          line: 352,
          column: 7
        }
      },
      "142": {
        start: {
          line: 346,
          column: 25
        },
        end: {
          line: 348,
          column: 16
        }
      },
      "143": {
        start: {
          line: 347,
          column: 12
        },
        end: {
          line: 347,
          column: 33
        }
      },
      "144": {
        start: {
          line: 349,
          column: 8
        },
        end: {
          line: 349,
          column: 43
        }
      },
      "145": {
        start: {
          line: 349,
          column: 19
        },
        end: {
          line: 349,
          column: 42
        }
      },
      "146": {
        start: {
          line: 353,
          column: 4
        },
        end: {
          line: 451,
          column: 7
        }
      },
      "147": {
        start: {
          line: 443,
          column: 79
        },
        end: {
          line: 449,
          column: 26
        }
      },
      "148": {
        start: {
          line: 454,
          column: 4
        },
        end: {
          line: 454,
          column: 73
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 33
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "EnhancedQueryDevTools",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 30
          }
        },
        loc: {
          start: {
            line: 31,
            column: 33
          },
          end: {
            line: 341,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 47,
            column: 26
          },
          end: {
            line: 47,
            column: 27
          }
        },
        loc: {
          start: {
            line: 47,
            column: 30
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 47
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 30
          },
          end: {
            line: 49,
            column: 31
          }
        },
        loc: {
          start: {
            line: 49,
            column: 39
          },
          end: {
            line: 78,
            column: 9
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 59,
            column: 29
          }
        },
        loc: {
          start: {
            line: 59,
            column: 37
          },
          end: {
            line: 62,
            column: 21
          }
        },
        line: 59
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 67,
            column: 28
          },
          end: {
            line: 67,
            column: 29
          }
        },
        loc: {
          start: {
            line: 67,
            column: 37
          },
          end: {
            line: 70,
            column: 21
          }
        },
        line: 67
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 80,
            column: 15
          },
          end: {
            line: 80,
            column: 16
          }
        },
        loc: {
          start: {
            line: 80,
            column: 19
          },
          end: {
            line: 80,
            column: 71
          }
        },
        line: 80
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 85,
            column: 58
          },
          end: {
            line: 85,
            column: 59
          }
        },
        loc: {
          start: {
            line: 85,
            column: 62
          },
          end: {
            line: 121,
            column: 5
          }
        },
        line: 85
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 44
          },
          end: {
            line: 92,
            column: 45
          }
        },
        loc: {
          start: {
            line: 92,
            column: 49
          },
          end: {
            line: 92,
            column: 77
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 93,
            column: 42
          },
          end: {
            line: 93,
            column: 43
          }
        },
        loc: {
          start: {
            line: 93,
            column: 47
          },
          end: {
            line: 93,
            column: 73
          }
        },
        line: 93
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 94,
            column: 44
          },
          end: {
            line: 94,
            column: 45
          }
        },
        loc: {
          start: {
            line: 94,
            column: 49
          },
          end: {
            line: 94,
            column: 77
          }
        },
        line: 94
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 95,
            column: 43
          }
        },
        loc: {
          start: {
            line: 95,
            column: 47
          },
          end: {
            line: 95,
            column: 58
          }
        },
        line: 95
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 96,
            column: 45
          },
          end: {
            line: 96,
            column: 46
          }
        },
        loc: {
          start: {
            line: 96,
            column: 50
          },
          end: {
            line: 96,
            column: 77
          }
        },
        line: 96
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 100,
            column: 46
          },
          end: {
            line: 100,
            column: 47
          }
        },
        loc: {
          start: {
            line: 100,
            column: 51
          },
          end: {
            line: 100,
            column: 79
          }
        },
        line: 100
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 101,
            column: 44
          },
          end: {
            line: 101,
            column: 45
          }
        },
        loc: {
          start: {
            line: 101,
            column: 49
          },
          end: {
            line: 101,
            column: 75
          }
        },
        line: 101
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 102,
            column: 46
          },
          end: {
            line: 102,
            column: 47
          }
        },
        loc: {
          start: {
            line: 102,
            column: 51
          },
          end: {
            line: 102,
            column: 79
          }
        },
        line: 102
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 105,
            column: 22
          },
          end: {
            line: 105,
            column: 23
          }
        },
        loc: {
          start: {
            line: 105,
            column: 26
          },
          end: {
            line: 112,
            column: 13
          }
        },
        line: 105
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 107,
            column: 32
          },
          end: {
            line: 107,
            column: 33
          }
        },
        loc: {
          start: {
            line: 107,
            column: 41
          },
          end: {
            line: 110,
            column: 17
          }
        },
        line: 107
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 114,
            column: 42
          },
          end: {
            line: 114,
            column: 43
          }
        },
        loc: {
          start: {
            line: 114,
            column: 57
          },
          end: {
            line: 117,
            column: 17
          }
        },
        line: 114
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 118,
            column: 70
          },
          end: {
            line: 118,
            column: 71
          }
        },
        loc: {
          start: {
            line: 118,
            column: 86
          },
          end: {
            line: 118,
            column: 139
          }
        },
        line: 118
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 125,
            column: 26
          },
          end: {
            line: 125,
            column: 27
          }
        },
        loc: {
          start: {
            line: 125,
            column: 30
          },
          end: {
            line: 254,
            column: 5
          }
        },
        line: 125
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 130,
            column: 27
          },
          end: {
            line: 130,
            column: 28
          }
        },
        loc: {
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 67
          }
        },
        line: 130
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 131,
            column: 29
          },
          end: {
            line: 131,
            column: 30
          }
        },
        loc: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 72
          }
        },
        line: 131
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 132,
            column: 24
          },
          end: {
            line: 132,
            column: 25
          }
        },
        loc: {
          start: {
            line: 132,
            column: 28
          },
          end: {
            line: 132,
            column: 47
          }
        },
        line: 132
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 133,
            column: 27
          },
          end: {
            line: 133,
            column: 28
          }
        },
        loc: {
          start: {
            line: 133,
            column: 31
          },
          end: {
            line: 133,
            column: 62
          }
        },
        line: 133
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 134,
            column: 25
          }
        },
        loc: {
          start: {
            line: 134,
            column: 28
          },
          end: {
            line: 134,
            column: 56
          }
        },
        line: 134
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 31
          }
        },
        loc: {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 143,
            column: 13
          }
        },
        line: 138
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 140,
            column: 31
          },
          end: {
            line: 140,
            column: 32
          }
        },
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 101
          }
        },
        line: 140
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 145,
            column: 30
          },
          end: {
            line: 145,
            column: 31
          }
        },
        loc: {
          start: {
            line: 145,
            column: 43
          },
          end: {
            line: 147,
            column: 13
          }
        },
        line: 145
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 146,
            column: 67
          },
          end: {
            line: 146,
            column: 68
          }
        },
        loc: {
          start: {
            line: 146,
            column: 76
          },
          end: {
            line: 146,
            column: 126
          }
        },
        line: 146
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 149,
            column: 29
          },
          end: {
            line: 149,
            column: 30
          }
        },
        loc: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 162,
            column: 13
          }
        },
        line: 149
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 150,
            column: 67
          },
          end: {
            line: 150,
            column: 68
          }
        },
        loc: {
          start: {
            line: 150,
            column: 76
          },
          end: {
            line: 150,
            column: 106
          }
        },
        line: 150
      },
      "34": {
        name: "(anonymous_34)",
        decl: {
          start: {
            line: 150,
            column: 112
          },
          end: {
            line: 150,
            column: 113
          }
        },
        loc: {
          start: {
            line: 150,
            column: 121
          },
          end: {
            line: 161,
            column: 17
          }
        },
        line: 150
      },
      "35": {
        name: "(anonymous_35)",
        decl: {
          start: {
            line: 164,
            column: 29
          },
          end: {
            line: 164,
            column: 30
          }
        },
        loc: {
          start: {
            line: 164,
            column: 33
          },
          end: {
            line: 171,
            column: 13
          }
        },
        line: 164
      },
      "36": {
        name: "(anonymous_36)",
        decl: {
          start: {
            line: 165,
            column: 67
          },
          end: {
            line: 165,
            column: 68
          }
        },
        loc: {
          start: {
            line: 165,
            column: 76
          },
          end: {
            line: 165,
            column: 91
          }
        },
        line: 165
      },
      "37": {
        name: "(anonymous_37)",
        decl: {
          start: {
            line: 165,
            column: 97
          },
          end: {
            line: 165,
            column: 98
          }
        },
        loc: {
          start: {
            line: 165,
            column: 107
          },
          end: {
            line: 170,
            column: 21
          }
        },
        line: 165
      },
      "38": {
        name: "(anonymous_38)",
        decl: {
          start: {
            line: 173,
            column: 36
          },
          end: {
            line: 173,
            column: 37
          }
        },
        loc: {
          start: {
            line: 173,
            column: 40
          },
          end: {
            line: 184,
            column: 13
          }
        },
        line: 173
      },
      "39": {
        name: "(anonymous_39)",
        decl: {
          start: {
            line: 176,
            column: 50
          },
          end: {
            line: 176,
            column: 51
          }
        },
        loc: {
          start: {
            line: 176,
            column: 55
          },
          end: {
            line: 176,
            column: 82
          }
        },
        line: 176
      },
      "40": {
        name: "(anonymous_40)",
        decl: {
          start: {
            line: 177,
            column: 52
          },
          end: {
            line: 177,
            column: 53
          }
        },
        loc: {
          start: {
            line: 177,
            column: 57
          },
          end: {
            line: 177,
            column: 84
          }
        },
        line: 177
      },
      "41": {
        name: "(anonymous_41)",
        decl: {
          start: {
            line: 182,
            column: 73
          },
          end: {
            line: 182,
            column: 74
          }
        },
        loc: {
          start: {
            line: 182,
            column: 83
          },
          end: {
            line: 182,
            column: 112
          }
        },
        line: 182
      },
      "42": {
        name: "(anonymous_42)",
        decl: {
          start: {
            line: 186,
            column: 34
          },
          end: {
            line: 186,
            column: 35
          }
        },
        loc: {
          start: {
            line: 186,
            column: 40
          },
          end: {
            line: 203,
            column: 13
          }
        },
        line: 186
      },
      "43": {
        name: "(anonymous_43)",
        decl: {
          start: {
            line: 188,
            column: 31
          },
          end: {
            line: 188,
            column: 32
          }
        },
        loc: {
          start: {
            line: 188,
            column: 42
          },
          end: {
            line: 192,
            column: 17
          }
        },
        line: 188
      },
      "44": {
        name: "(anonymous_44)",
        decl: {
          start: {
            line: 189,
            column: 39
          },
          end: {
            line: 189,
            column: 40
          }
        },
        loc: {
          start: {
            line: 189,
            column: 50
          },
          end: {
            line: 191,
            column: 21
          }
        },
        line: 189
      },
      "45": {
        name: "(anonymous_45)",
        decl: {
          start: {
            line: 190,
            column: 35
          },
          end: {
            line: 190,
            column: 36
          }
        },
        loc: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 190,
            column: 70
          }
        },
        line: 190
      },
      "46": {
        name: "(anonymous_46)",
        decl: {
          start: {
            line: 197,
            column: 27
          },
          end: {
            line: 197,
            column: 28
          }
        },
        loc: {
          start: {
            line: 197,
            column: 31
          },
          end: {
            line: 202,
            column: 17
          }
        },
        line: 197
      },
      "47": {
        name: "(anonymous_47)",
        decl: {
          start: {
            line: 212,
            column: 34
          },
          end: {
            line: 212,
            column: 35
          }
        },
        loc: {
          start: {
            line: 212,
            column: 38
          },
          end: {
            line: 216,
            column: 13
          }
        },
        line: 212
      },
      "48": {
        name: "(anonymous_48)",
        decl: {
          start: {
            line: 217,
            column: 35
          },
          end: {
            line: 217,
            column: 36
          }
        },
        loc: {
          start: {
            line: 217,
            column: 39
          },
          end: {
            line: 219,
            column: 13
          }
        },
        line: 217
      },
      "49": {
        name: "(anonymous_49)",
        decl: {
          start: {
            line: 221,
            column: 38
          },
          end: {
            line: 221,
            column: 39
          }
        },
        loc: {
          start: {
            line: 221,
            column: 42
          },
          end: {
            line: 221,
            column: 69
          }
        },
        line: 221
      },
      "50": {
        name: "(anonymous_50)",
        decl: {
          start: {
            line: 222,
            column: 38
          },
          end: {
            line: 222,
            column: 39
          }
        },
        loc: {
          start: {
            line: 222,
            column: 42
          },
          end: {
            line: 222,
            column: 69
          }
        },
        line: 222
      },
      "51": {
        name: "(anonymous_51)",
        decl: {
          start: {
            line: 223,
            column: 40
          },
          end: {
            line: 223,
            column: 41
          }
        },
        loc: {
          start: {
            line: 223,
            column: 44
          },
          end: {
            line: 223,
            column: 73
          }
        },
        line: 223
      },
      "52": {
        name: "(anonymous_52)",
        decl: {
          start: {
            line: 228,
            column: 89
          },
          end: {
            line: 228,
            column: 90
          }
        },
        loc: {
          start: {
            line: 228,
            column: 93
          },
          end: {
            line: 253,
            column: 9
          }
        },
        line: 228
      },
      "53": {
        name: "(anonymous_53)",
        decl: {
          start: {
            line: 316,
            column: 41
          },
          end: {
            line: 316,
            column: 42
          }
        },
        loc: {
          start: {
            line: 316,
            column: 45
          },
          end: {
            line: 319,
            column: 43
          }
        },
        line: 316
      },
      "54": {
        name: "(anonymous_54)",
        decl: {
          start: {
            line: 316,
            column: 57
          },
          end: {
            line: 316,
            column: 58
          }
        },
        loc: {
          start: {
            line: 316,
            column: 66
          },
          end: {
            line: 319,
            column: 41
          }
        },
        line: 316
      },
      "55": {
        name: "QueryStatsDisplay",
        decl: {
          start: {
            line: 343,
            column: 9
          },
          end: {
            line: 343,
            column: 26
          }
        },
        loc: {
          start: {
            line: 343,
            column: 41
          },
          end: {
            line: 452,
            column: 1
          }
        },
        line: 343
      },
      "56": {
        name: "(anonymous_56)",
        decl: {
          start: {
            line: 345,
            column: 26
          },
          end: {
            line: 345,
            column: 27
          }
        },
        loc: {
          start: {
            line: 345,
            column: 30
          },
          end: {
            line: 350,
            column: 5
          }
        },
        line: 345
      },
      "57": {
        name: "(anonymous_57)",
        decl: {
          start: {
            line: 346,
            column: 37
          },
          end: {
            line: 346,
            column: 38
          }
        },
        loc: {
          start: {
            line: 346,
            column: 41
          },
          end: {
            line: 348,
            column: 9
          }
        },
        line: 346
      },
      "58": {
        name: "(anonymous_58)",
        decl: {
          start: {
            line: 349,
            column: 15
          },
          end: {
            line: 349,
            column: 16
          }
        },
        loc: {
          start: {
            line: 349,
            column: 19
          },
          end: {
            line: 349,
            column: 42
          }
        },
        line: 349
      },
      "59": {
        name: "(anonymous_59)",
        decl: {
          start: {
            line: 443,
            column: 46
          },
          end: {
            line: 443,
            column: 47
          }
        },
        loc: {
          start: {
            line: 443,
            column: 79
          },
          end: {
            line: 449,
            column: 26
          }
        },
        line: 443
      },
      "60": {
        name: "BISaaSQueryDevTools",
        decl: {
          start: {
            line: 453,
            column: 9
          },
          end: {
            line: 453,
            column: 28
          }
        },
        loc: {
          start: {
            line: 453,
            column: 31
          },
          end: {
            line: 455,
            column: 1
          }
        },
        line: 453
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 48,
            column: 8
          },
          end: {
            line: 48,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 48
      },
      "1": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "2": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 17
          },
          end: {
            line: 51,
            column: 30
          }
        }, {
          start: {
            line: 51,
            column: 34
          },
          end: {
            line: 51,
            column: 47
          }
        }, {
          start: {
            line: 51,
            column: 52
          },
          end: {
            line: 51,
            column: 66
          }
        }, {
          start: {
            line: 51,
            column: 70
          },
          end: {
            line: 51,
            column: 87
          }
        }],
        line: 51
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 63,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 17
          },
          end: {
            line: 57,
            column: 30
          }
        }, {
          start: {
            line: 57,
            column: 34
          },
          end: {
            line: 57,
            column: 47
          }
        }, {
          start: {
            line: 57,
            column: 52
          },
          end: {
            line: 57,
            column: 66
          }
        }, {
          start: {
            line: 57,
            column: 70
          },
          end: {
            line: 57,
            column: 87
          }
        }],
        line: 57
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 12
          },
          end: {
            line: 71,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 16
          },
          end: {
            line: 65,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 17
          },
          end: {
            line: 65,
            column: 30
          }
        }, {
          start: {
            line: 65,
            column: 34
          },
          end: {
            line: 65,
            column: 47
          }
        }, {
          start: {
            line: 65,
            column: 52
          },
          end: {
            line: 65,
            column: 66
          }
        }, {
          start: {
            line: 65,
            column: 70
          },
          end: {
            line: 65,
            column: 87
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 73,
            column: 12
          },
          end: {
            line: 77,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 73
      },
      "8": {
        loc: {
          start: {
            line: 73,
            column: 16
          },
          end: {
            line: 73,
            column: 87
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 73,
            column: 17
          },
          end: {
            line: 73,
            column: 30
          }
        }, {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 73,
            column: 47
          }
        }, {
          start: {
            line: 73,
            column: 52
          },
          end: {
            line: 73,
            column: 66
          }
        }, {
          start: {
            line: 73,
            column: 70
          },
          end: {
            line: 73,
            column: 87
          }
        }],
        line: 73
      },
      "9": {
        loc: {
          start: {
            line: 108,
            column: 35
          },
          end: {
            line: 108,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 108,
            column: 67
          },
          end: {
            line: 108,
            column: 84
          }
        }, {
          start: {
            line: 108,
            column: 87
          },
          end: {
            line: 108,
            column: 96
          }
        }],
        line: 108
      },
      "10": {
        loc: {
          start: {
            line: 109,
            column: 43
          },
          end: {
            line: 109,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 109,
            column: 43
          },
          end: {
            line: 109,
            column: 62
          }
        }, {
          start: {
            line: 109,
            column: 66
          },
          end: {
            line: 109,
            column: 67
          }
        }],
        line: 109
      },
      "11": {
        loc: {
          start: {
            line: 115,
            column: 52
          },
          end: {
            line: 115,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 52
          },
          end: {
            line: 115,
            column: 68
          }
        }, {
          start: {
            line: 115,
            column: 72
          },
          end: {
            line: 115,
            column: 74
          }
        }],
        line: 115
      },
      "12": {
        loc: {
          start: {
            line: 118,
            column: 34
          },
          end: {
            line: 118,
            column: 164
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 118,
            column: 55
          },
          end: {
            line: 118,
            column: 160
          }
        }, {
          start: {
            line: 118,
            column: 163
          },
          end: {
            line: 118,
            column: 164
          }
        }],
        line: 118
      },
      "13": {
        loc: {
          start: {
            line: 118,
            column: 109
          },
          end: {
            line: 118,
            column: 131
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 118,
            column: 109
          },
          end: {
            line: 118,
            column: 125
          }
        }, {
          start: {
            line: 118,
            column: 129
          },
          end: {
            line: 118,
            column: 131
          }
        }],
        line: 118
      },
      "14": {
        loc: {
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 59
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 8
          },
          end: {
            line: 126,
            column: 59
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "15": {
        loc: {
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 8
          },
          end: {
            line: 127,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "16": {
        loc: {
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 101
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 140,
            column: 40
          },
          end: {
            line: 140,
            column: 69
          }
        }, {
          start: {
            line: 140,
            column: 73
          },
          end: {
            line: 140,
            column: 101
          }
        }],
        line: 140
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 159,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 20
          },
          end: {
            line: 159,
            column: 21
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 180,
            column: 34
          },
          end: {
            line: 180,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 53
          },
          end: {
            line: 180,
            column: 84
          }
        }, {
          start: {
            line: 180,
            column: 87
          },
          end: {
            line: 180,
            column: 88
          }
        }],
        line: 180
      },
      "19": {
        loc: {
          start: {
            line: 181,
            column: 36
          },
          end: {
            line: 181,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 181,
            column: 55
          },
          end: {
            line: 181,
            column: 88
          }
        }, {
          start: {
            line: 181,
            column: 91
          },
          end: {
            line: 181,
            column: 92
          }
        }],
        line: 181
      },
      "20": {
        loc: {
          start: {
            line: 182,
            column: 39
          },
          end: {
            line: 182,
            column: 135
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 182,
            column: 58
          },
          end: {
            line: 182,
            column: 131
          }
        }, {
          start: {
            line: 182,
            column: 134
          },
          end: {
            line: 182,
            column: 135
          }
        }],
        line: 182
      },
      "21": {
        loc: {
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 259,
            column: 4
          },
          end: {
            line: 261,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 259
      },
      "22": {
        loc: {
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 334,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 12
          },
          end: {
            line: 268,
            column: 35
          }
        }, {
          start: {
            line: 268,
            column: 53
          },
          end: {
            line: 334,
            column: 14
          }
        }],
        line: 268
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0, 0, 0],
      "3": [0, 0],
      "4": [0, 0, 0, 0],
      "5": [0, 0],
      "6": [0, 0, 0, 0],
      "7": [0, 0],
      "8": [0, 0, 0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/tanstack-query/devtools.tsx"],
      sourcesContent: ["/**\n * Enhanced TanStack Query DevTools Configuration\n * Advanced development tools for BI SaaS dashboard optimization\n */\n\n'use client';\n\nimport { useQueryClient } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { useEffect, useState, useCallback } from 'react';\n\nimport { devLogger } from '@/lib/development/logger';\nimport { QueryPerformanceDashboard, useQueryPerformanceDashboard } from '@/lib/tanstack-query/devtools-dashboard';\nimport { useDevQueryMonitor } from '@/lib/tanstack-query/performance-monitor';\nimport { queryKeys } from '@/lib/tanstack-query/query-keys';\n\n// DevTools state management\ninterface DevToolsState {\n  isAdvancedMode: boolean;\n  showNetworkStats: boolean;\n  autoRefreshStats: boolean;\n  selectedDomain: string | null;\n}\n\nexport function EnhancedQueryDevTools(): React.ReactElement | null {\n  const queryClient = useQueryClient();\n  const [devState, setDevState] = useState<DevToolsState>({\n    isAdvancedMode: false,\n    showNetworkStats: false,\n    autoRefreshStats: false,\n    selectedDomain: null,\n  });\n  \n  // Performance dashboard hook\n  const performanceDashboard = useQueryPerformanceDashboard();\n  \n  // Auto performance monitoring (development only)\n  useDevQueryMonitor({\n    intervalMs: 10000, // Check every 10 seconds\n    autoOptimize: false, // Manual optimization only\n  });\n\n  // Enhanced keyboard shortcuts for development\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'development') return;\n\n    const handleKeyDown = (event: KeyboardEvent): void => {\n      // Ctrl/Cmd + Shift + C to clear cache\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'C') {\n        event.preventDefault();\n        queryClient.clear();\n        devLogger.success('Query cache cleared via keyboard shortcut');\n      }\n      \n      // Ctrl/Cmd + Shift + D to toggle DevTools advanced mode\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'D') {\n        event.preventDefault();\n        setDevState(prev => ({ ...prev, isAdvancedMode: !prev.isAdvancedMode }));\n      }\n      \n      // Ctrl/Cmd + Shift + N to toggle network stats\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'N') {\n        event.preventDefault();\n        setDevState(prev => ({ ...prev, showNetworkStats: !prev.showNetworkStats }));\n      }\n      \n      // Ctrl/Cmd + Shift + R to force refetch all queries\n      if ((event.ctrlKey || event.metaKey) && event.shiftKey && event.key === 'R') {\n        event.preventDefault();\n        queryClient.refetchQueries();\n        devLogger.success('All queries refetched via keyboard shortcut');\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return (): void => window.removeEventListener('keydown', handleKeyDown);\n  }, [queryClient]);\n\n  // Advanced query performance monitoring\n  const getPerformanceMetrics = useCallback(() => {\n    const queries = queryClient.getQueryCache().getAll();\n    const mutations = queryClient.getMutationCache().getAll();\n    \n    return {\n      cache: {\n        queries: {\n          total: queries.length,\n          loading: queries.filter(q => q.state.status === 'pending').length,\n          error: queries.filter(q => q.state.status === 'error').length,\n          success: queries.filter(q => q.state.status === 'success').length,\n          stale: queries.filter(q => q.isStale()).length,\n          inactive: queries.filter(q => q.getObserversCount() === 0).length,\n        },\n        mutations: {\n          total: mutations.length,\n          pending: mutations.filter(m => m.state.status === 'pending').length,\n          error: mutations.filter(m => m.state.status === 'error').length,\n          success: mutations.filter(m => m.state.status === 'success').length,\n        },\n      },\n      domains: ((): Record<string, number> => {\n        const domainStats: Record<string, number> = {};\n        queries.forEach(query => {\n          const domain = Array.isArray(query.queryKey) ? query.queryKey[0] as string : 'unknown';\n          domainStats[domain] = (domainStats[domain] || 0) + 1;\n        });\n        return domainStats;\n      })(),\n      memory: {\n        cacheSize: queries.reduce((size, query) => {\n          const dataSize = JSON.stringify(query.state.data || {}).length;\n          return size + dataSize;\n        }, 0),\n        averageQuerySize: queries.length > 0 \n          ? queries.reduce((total, query) => total + JSON.stringify(query.state.data || {}).length, 0) / queries.length \n          : 0,\n      },\n    };\n  }, [queryClient]);\n\n  // Enhanced development utilities\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'development') return;\n    if (typeof window === 'undefined') return;\n\n    const queryDebugUtils = {\n      // Basic operations\n      getAllQueries: (): unknown[] => queryClient.getQueryCache().getAll(),\n      getAllMutations: (): unknown[] => queryClient.getMutationCache().getAll(),\n      clearCache: (): void => queryClient.clear(),\n      invalidateAll: (): Promise<void> => queryClient.invalidateQueries(),\n      refetchAll: (): Promise<void> => queryClient.refetchQueries(),\n      \n      // Performance monitoring\n      getStats: getPerformanceMetrics,\n      \n      // Domain-specific operations\n      invalidateDomain: (domain: string): void => {\n        queryClient.invalidateQueries({ \n          predicate: (query) => Array.isArray(query.queryKey) && query.queryKey[0] === domain \n        });\n        devLogger.success(`Invalidated all queries for domain: ${domain}`);\n      },\n      \n      // Query key management\n      findQueriesByKey: (searchKey: string): unknown[] => {\n        return queryClient.getQueryCache().getAll().filter(query => \n          JSON.stringify(query.queryKey).includes(searchKey)\n        );\n      },\n      \n      // Error analysis\n      getErrorQueries: (): Array<{queryKey: readonly unknown[]; error: unknown; errorUpdateCount: number; failureReason?: string}> => {\n        return queryClient.getQueryCache().getAll()\n          .filter(query => query.state.status === 'error')\n          .map(query => {\n            const result: {queryKey: readonly unknown[]; error: unknown; errorUpdateCount: number; failureReason?: string} = {\n              queryKey: query.queryKey,\n              error: query.state.error,\n              errorUpdateCount: query.state.errorUpdateCount,\n            };\n            \n            const errorMessage = query.state.error?.toString();\n            if (errorMessage) {\n              result.failureReason = errorMessage;\n            }\n            \n            return result;\n          });\n      },\n      \n      // Stale data management\n      getStaleQueries: (): Array<{queryKey: readonly unknown[]; dataUpdatedAt: number; isStale: boolean; observersCount: number}> => {\n        return queryClient.getQueryCache().getAll()\n          .filter(query => query.isStale())\n          .map(query => ({\n            queryKey: query.queryKey,\n            dataUpdatedAt: query.state.dataUpdatedAt,\n            isStale: query.isStale(),\n            observersCount: query.getObserversCount(),\n          }));\n      },\n      \n      // Cache efficiency analysis\n      analyzeCacheEfficiency: (): {totalQueries: number; cacheHitRate: number; staleFetchRate: number; averageFetchCount: number} => {\n        const queries = queryClient.getQueryCache().getAll();\n        const totalQueries = queries.length;\n        const hitQueries = queries.filter(q => q.state.dataUpdateCount > 0).length;\n        const staleFetches = queries.filter(q => q.state.dataUpdateCount > 1).length;\n        \n        return {\n          totalQueries,\n          cacheHitRate: totalQueries > 0 ? (hitQueries / totalQueries) * 100 : 0,\n          staleFetchRate: totalQueries > 0 ? (staleFetches / totalQueries) * 100 : 0,\n          averageFetchCount: totalQueries > 0 \n            ? queries.reduce((sum, q) => sum + q.state.dataUpdateCount, 0) / totalQueries \n            : 0,\n        };\n      },\n\n      // Network simulation (for testing)\n      simulateNetworkDelay: (ms: number): void => {\n        const originalFetch = window.fetch;\n        window.fetch = (...args): Promise<Response> => {\n          return new Promise(resolve => {\n            setTimeout(() => resolve(originalFetch(...args)), ms);\n          });\n        };\n        devLogger.network('Network delay simulation started', { delayMs: ms });\n        \n        // Auto-restore after 30 seconds\n        setTimeout((): void => {\n          window.fetch = originalFetch;\n          devLogger.network('Network delay simulation restored', { duration: '30s' });\n        }, 30000);\n      },\n\n      // Query key utilities using our centralized system\n      queryKeys: {\n        dashboards: queryKeys.dashboards,\n        auth: queryKeys.auth,\n        dataSources: queryKeys.dataSources,\n        analytics: queryKeys.analytics,\n      },\n\n      // Advanced debugging\n      enableVerboseLogging: (): void => {\n        // Note: setLogger method may not be available in all TanStack Query versions\n        // This is a development-only feature\n        devLogger.success('Verbose query logging enabled (Note: setLogger not available in current version)');\n      },\n\n      disableVerboseLogging: (): void => {\n        devLogger.success('Verbose query logging disabled');\n      },\n\n      // Performance dashboard controls\n      showPerformanceDashboard: (): void => performanceDashboard.show(),\n      hidePerformanceDashboard: (): void => performanceDashboard.hide(),\n      togglePerformanceDashboard: (): void => performanceDashboard.toggle(),\n    };\n\n    // Expose to window for console access\n    (window as unknown as Record<string, unknown>).queryDebug = queryDebugUtils;\n    \n    // Log available commands\n    devLogger.group('TanStack Query DevTools Enhanced - Available Commands', () => {\n      devLogger.log('Basic Operations:');\n      devLogger.log('  queryDebug.getStats() - Get performance metrics');\n      devLogger.log('  queryDebug.clearCache() - Clear all cached data');\n      devLogger.log('  queryDebug.invalidateAll() - Invalidate all queries');\n      devLogger.log('  queryDebug.refetchAll() - Refetch all queries');\n      \n      devLogger.log('Advanced Analysis:');\n      devLogger.log('  queryDebug.getErrorQueries() - Get queries with errors');\n      devLogger.log('  queryDebug.getStaleQueries() - Get stale queries');\n      devLogger.log('  queryDebug.analyzeCacheEfficiency() - Cache performance analysis');\n      \n      devLogger.log('Domain Operations:');\n      devLogger.log('  queryDebug.invalidateDomain(\\'dashboards\\') - Invalidate specific domain');\n      devLogger.log('  queryDebug.findQueriesByKey(\\'dashboard\\') - Find queries by key');\n      \n      devLogger.log('Debugging:');\n      devLogger.log('  queryDebug.enableVerboseLogging() - Enable detailed logs');\n      devLogger.log('  queryDebug.simulateNetworkDelay(1000) - Add network delay');\n      \n      devLogger.log('Performance Dashboard:');\n      devLogger.log('  queryDebug.showPerformanceDashboard() - Show advanced dashboard');\n      devLogger.log('  queryDebug.togglePerformanceDashboard() - Toggle dashboard');\n      \n      devLogger.log('Keyboard Shortcuts:');\n      devLogger.log('  Cmd/Ctrl + Shift + C - Clear cache');\n      devLogger.log('  Cmd/Ctrl + Shift + R - Refetch all');\n      devLogger.log('  Cmd/Ctrl + Shift + D - Toggle advanced mode');\n      devLogger.log('  Cmd/Ctrl + Shift + N - Toggle network stats');\n      devLogger.log('  Cmd/Ctrl + Shift + P - Toggle performance dashboard');\n    });\n    \n  }, [queryClient, getPerformanceMetrics, performanceDashboard]);\n\n  if (process.env.NODE_ENV !== 'development') {\n    return null;\n  }\n\n  return (\n    <>\n      <ReactQueryDevtools \n        initialIsOpen={false}\n        buttonPosition=\"bottom-right\"\n      />\n      {devState.isAdvancedMode && (\n        <div \n          style={{\n            position: 'fixed',\n            top: '10px',\n            right: '10px',\n            background: 'rgba(0, 0, 0, 0.9)',\n            color: 'white',\n            padding: '16px',\n            borderRadius: '8px',\n            fontFamily: 'monospace',\n            fontSize: '12px',\n            zIndex: 9999,\n            maxWidth: '400px',\n            maxHeight: '500px',\n            overflow: 'auto',\n          }}\n        >\n          <div style={{ marginBottom: '12px', fontWeight: 'bold' }}>\n            \uD83D\uDE80 Enhanced Query DevTools\n          </div>\n          <QueryStatsDisplay getStats={getPerformanceMetrics} />\n          <div style={{ marginTop: '12px', display: 'flex', gap: '8px' }}>\n            <button\n              onClick={performanceDashboard.toggle}\n              style={{\n                background: '#2196f3',\n                color: 'white',\n                border: 'none',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                fontSize: '10px',\n                cursor: 'pointer',\n              }}\n            >\n              Performance\n            </button>\n            <button\n              onClick={() => setDevState(prev => ({ ...prev, isAdvancedMode: false }))}\n              style={{\n                background: '#666',\n                color: 'white',\n                border: 'none',\n                padding: '4px 8px',\n                borderRadius: '4px',\n                fontSize: '10px',\n                cursor: 'pointer',\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n      \n      {/* Advanced Performance Dashboard */}\n      <QueryPerformanceDashboard \n        isVisible={performanceDashboard.isVisible}\n        onClose={performanceDashboard.hide}\n      />\n    </>\n  );\n}\n\n// Query stats display component  \nfunction QueryStatsDisplay({ getStats }: { getStats: () => {\n  cache: {\n    queries: { total: number; loading: number; error: number; success: number; stale: number; inactive: number; };\n    mutations: { total: number; pending: number; error: number; success: number; };\n  };\n  domains: Record<string, number>;\n  memory: { cacheSize: number; averageQuerySize: number; };\n} }): React.ReactElement {\n  const [stats, setStats] = useState(getStats());\n\n  useEffect(() => {\n    const interval = setInterval((): void => {\n      setStats(getStats());\n    }, 1000);\n\n    return (): void => clearInterval(interval);\n  }, [getStats]);\n\n  return (\n    <div style={{ lineHeight: '1.4' }}>\n      <div><strong>Cache Stats:</strong></div>\n      <div>Total Queries: {stats.cache.queries.total}</div>\n      <div>Loading: {stats.cache.queries.loading}</div>\n      <div>Errors: {stats.cache.queries.error}</div>\n      <div>Success: {stats.cache.queries.success}</div>\n      <div>Stale: {stats.cache.queries.stale}</div>\n      \n      <div style={{ marginTop: '8px' }}><strong>Mutations:</strong></div>\n      <div>Total: {stats.cache.mutations.total}</div>\n      <div>Pending: {stats.cache.mutations.pending}</div>\n      \n      <div style={{ marginTop: '8px' }}><strong>Memory:</strong></div>\n      <div>Cache Size: {Math.round(stats.memory.cacheSize / 1024)}KB</div>\n      <div>Avg Query: {Math.round(stats.memory.averageQuerySize)}B</div>\n      \n      <div style={{ marginTop: '8px' }}><strong>Domains:</strong></div>\n      {Object.entries(stats.domains).map(([domain, count]) => (\n        <div key={domain}>{String(domain)}: {count}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default function BISaaSQueryDevTools(): React.ReactElement | null {\n  return <EnhancedQueryDevTools />;\n}"],
      names: ["EnhancedQueryDevTools", "BISaaSQueryDevTools", "queryClient", "useQueryClient", "devState", "setDevState", "useState", "isAdvancedMode", "showNetworkStats", "autoRefreshStats", "selectedDomain", "performanceDashboard", "useQueryPerformanceDashboard", "useDevQueryMonitor", "intervalMs", "autoOptimize", "useEffect", "process", "env", "NODE_ENV", "handleKeyDown", "event", "ctrlKey", "metaKey", "shiftKey", "key", "preventDefault", "clear", "devLogger", "success", "prev", "refetchQueries", "window", "addEventListener", "removeEventListener", "getPerformanceMetrics", "useCallback", "queries", "getQueryCache", "getAll", "mutations", "getMutationCache", "cache", "total", "length", "loading", "filter", "q", "state", "status", "error", "stale", "isStale", "inactive", "getObserversCount", "pending", "m", "domains", "domainStats", "forEach", "query", "domain", "Array", "isArray", "queryKey", "memory", "cacheSize", "reduce", "size", "dataSize", "JSON", "stringify", "data", "averageQuerySize", "queryDebugUtils", "getAllQueries", "getAllMutations", "clearCache", "invalidateAll", "invalidateQueries", "refetchAll", "getStats", "invalidateDomain", "predicate", "findQueriesByKey", "searchKey", "includes", "getErrorQueries", "map", "result", "errorUpdateCount", "errorMessage", "toString", "failureReason", "getStaleQueries", "dataUpdatedAt", "observersCount", "analyzeCacheEfficiency", "totalQueries", "hitQueries", "dataUpdateCount", "staleFetches", "cacheHitRate", "staleFetchRate", "averageFetchCount", "sum", "simulateNetworkDelay", "ms", "originalFetch", "fetch", "args", "Promise", "resolve", "setTimeout", "network", "delayMs", "duration", "queryKeys", "dashboards", "auth", "dataSources", "analytics", "enableVerboseLogging", "disableVerboseLogging", "showPerformanceDashboard", "show", "hidePerformanceDashboard", "hide", "togglePerformanceDashboard", "toggle", "queryDebug", "group", "log", "ReactQueryDevtools", "initialIsOpen", "buttonPosition", "div", "style", "position", "top", "right", "background", "color", "padding", "borderRadius", "fontFamily", "fontSize", "zIndex", "maxWidth", "maxHeight", "overflow", "marginBottom", "fontWeight", "QueryStatsDisplay", "marginTop", "display", "gap", "button", "onClick", "border", "cursor", "QueryPerformanceDashboard", "isVisible", "onClose", "stats", "setStats", "interval", "setInterval", "clearInterval", "lineHeight", "strong", "Math", "round", "Object", "entries", "count", "String"],
      mappings: "AAAA;;;CAGC,GAED;;;;;;;;;;;;QAmBgBA;eAAAA;;QAsXhB;eAAwBC;;;;4BAvYO;oCACI;uBACc;wBAEvB;mCAC8C;oCACrC;2BACT;AAUnB,SAASD;IACd,MAAME,cAAcC,IAAAA,0BAAc;IAClC,MAAM,CAACC,UAAUC,YAAY,GAAGC,IAAAA,eAAQ,EAAgB;QACtDC,gBAAgB;QAChBC,kBAAkB;QAClBC,kBAAkB;QAClBC,gBAAgB;IAClB;IAEA,6BAA6B;IAC7B,MAAMC,uBAAuBC,IAAAA,+CAA4B;IAEzD,iDAAiD;IACjDC,IAAAA,sCAAkB,EAAC;QACjBC,YAAY;QACZC,cAAc;IAChB;IAEA,8CAA8C;IAC9CC,IAAAA,gBAAS,EAAC;QACR,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAE5C,MAAMC,gBAAgB,CAACC;YACrB,sCAAsC;YACtC,IAAI,AAACA,CAAAA,MAAMC,OAAO,IAAID,MAAME,OAAO,AAAD,KAAMF,MAAMG,QAAQ,IAAIH,MAAMI,GAAG,KAAK,KAAK;gBAC3EJ,MAAMK,cAAc;gBACpBxB,YAAYyB,KAAK;gBACjBC,iBAAS,CAACC,OAAO,CAAC;YACpB;YAEA,wDAAwD;YACxD,IAAI,AAACR,CAAAA,MAAMC,OAAO,IAAID,MAAME,OAAO,AAAD,KAAMF,MAAMG,QAAQ,IAAIH,MAAMI,GAAG,KAAK,KAAK;gBAC3EJ,MAAMK,cAAc;gBACpBrB,YAAYyB,CAAAA,OAAS,CAAA;wBAAE,GAAGA,IAAI;wBAAEvB,gBAAgB,CAACuB,KAAKvB,cAAc;oBAAC,CAAA;YACvE;YAEA,+CAA+C;YAC/C,IAAI,AAACc,CAAAA,MAAMC,OAAO,IAAID,MAAME,OAAO,AAAD,KAAMF,MAAMG,QAAQ,IAAIH,MAAMI,GAAG,KAAK,KAAK;gBAC3EJ,MAAMK,cAAc;gBACpBrB,YAAYyB,CAAAA,OAAS,CAAA;wBAAE,GAAGA,IAAI;wBAAEtB,kBAAkB,CAACsB,KAAKtB,gBAAgB;oBAAC,CAAA;YAC3E;YAEA,oDAAoD;YACpD,IAAI,AAACa,CAAAA,MAAMC,OAAO,IAAID,MAAME,OAAO,AAAD,KAAMF,MAAMG,QAAQ,IAAIH,MAAMI,GAAG,KAAK,KAAK;gBAC3EJ,MAAMK,cAAc;gBACpBxB,YAAY6B,cAAc;gBAC1BH,iBAAS,CAACC,OAAO,CAAC;YACpB;QACF;QAEAG,OAAOC,gBAAgB,CAAC,WAAWb;QACnC,OAAO,IAAYY,OAAOE,mBAAmB,CAAC,WAAWd;IAC3D,GAAG;QAAClB;KAAY;IAEhB,wCAAwC;IACxC,MAAMiC,wBAAwBC,IAAAA,kBAAW,EAAC;QACxC,MAAMC,UAAUnC,YAAYoC,aAAa,GAAGC,MAAM;QAClD,MAAMC,YAAYtC,YAAYuC,gBAAgB,GAAGF,MAAM;QAEvD,OAAO;YACLG,OAAO;gBACLL,SAAS;oBACPM,OAAON,QAAQO,MAAM;oBACrBC,SAASR,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEC,KAAK,CAACC,MAAM,KAAK,WAAWL,MAAM;oBACjEM,OAAOb,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEC,KAAK,CAACC,MAAM,KAAK,SAASL,MAAM;oBAC7Df,SAASQ,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEC,KAAK,CAACC,MAAM,KAAK,WAAWL,MAAM;oBACjEO,OAAOd,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEK,OAAO,IAAIR,MAAM;oBAC9CS,UAAUhB,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEO,iBAAiB,OAAO,GAAGV,MAAM;gBACnE;gBACAJ,WAAW;oBACTG,OAAOH,UAAUI,MAAM;oBACvBW,SAASf,UAAUM,MAAM,CAACU,CAAAA,IAAKA,EAAER,KAAK,CAACC,MAAM,KAAK,WAAWL,MAAM;oBACnEM,OAAOV,UAAUM,MAAM,CAACU,CAAAA,IAAKA,EAAER,KAAK,CAACC,MAAM,KAAK,SAASL,MAAM;oBAC/Df,SAASW,UAAUM,MAAM,CAACU,CAAAA,IAAKA,EAAER,KAAK,CAACC,MAAM,KAAK,WAAWL,MAAM;gBACrE;YACF;YACAa,SAAS,AAAC,CAAA;gBACR,MAAMC,cAAsC,CAAC;gBAC7CrB,QAAQsB,OAAO,CAACC,CAAAA;oBACd,MAAMC,SAASC,MAAMC,OAAO,CAACH,MAAMI,QAAQ,IAAIJ,MAAMI,QAAQ,CAAC,EAAE,GAAa;oBAC7EN,WAAW,CAACG,OAAO,GAAG,AAACH,CAAAA,WAAW,CAACG,OAAO,IAAI,CAAA,IAAK;gBACrD;gBACA,OAAOH;YACT,CAAA;YACAO,QAAQ;gBACNC,WAAW7B,QAAQ8B,MAAM,CAAC,CAACC,MAAMR;oBAC/B,MAAMS,WAAWC,KAAKC,SAAS,CAACX,MAAMZ,KAAK,CAACwB,IAAI,IAAI,CAAC,GAAG5B,MAAM;oBAC9D,OAAOwB,OAAOC;gBAChB,GAAG;gBACHI,kBAAkBpC,QAAQO,MAAM,GAAG,IAC/BP,QAAQ8B,MAAM,CAAC,CAACxB,OAAOiB,QAAUjB,QAAQ2B,KAAKC,SAAS,CAACX,MAAMZ,KAAK,CAACwB,IAAI,IAAI,CAAC,GAAG5B,MAAM,EAAE,KAAKP,QAAQO,MAAM,GAC3G;YACN;QACF;IACF,GAAG;QAAC1C;KAAY;IAEhB,iCAAiC;IACjCc,IAAAA,gBAAS,EAAC;QACR,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC5C,IAAI,OAAOa,WAAW,aAAa;QAEnC,MAAM0C,kBAAkB;YACtB,mBAAmB;YACnBC,eAAe,IAAiBzE,YAAYoC,aAAa,GAAGC,MAAM;YAClEqC,iBAAiB,IAAiB1E,YAAYuC,gBAAgB,GAAGF,MAAM;YACvEsC,YAAY,IAAY3E,YAAYyB,KAAK;YACzCmD,eAAe,IAAqB5E,YAAY6E,iBAAiB;YACjEC,YAAY,IAAqB9E,YAAY6B,cAAc;YAE3D,yBAAyB;YACzBkD,UAAU9C;YAEV,6BAA6B;YAC7B+C,kBAAkB,CAACrB;gBACjB3D,YAAY6E,iBAAiB,CAAC;oBAC5BI,WAAW,CAACvB,QAAUE,MAAMC,OAAO,CAACH,MAAMI,QAAQ,KAAKJ,MAAMI,QAAQ,CAAC,EAAE,KAAKH;gBAC/E;gBACAjC,iBAAS,CAACC,OAAO,CAAC,CAAC,oCAAoC,EAAEgC,QAAQ;YACnE;YAEA,uBAAuB;YACvBuB,kBAAkB,CAACC;gBACjB,OAAOnF,YAAYoC,aAAa,GAAGC,MAAM,GAAGO,MAAM,CAACc,CAAAA,QACjDU,KAAKC,SAAS,CAACX,MAAMI,QAAQ,EAAEsB,QAAQ,CAACD;YAE5C;YAEA,iBAAiB;YACjBE,iBAAiB;gBACf,OAAOrF,YAAYoC,aAAa,GAAGC,MAAM,GACtCO,MAAM,CAACc,CAAAA,QAASA,MAAMZ,KAAK,CAACC,MAAM,KAAK,SACvCuC,GAAG,CAAC5B,CAAAA;oBACH,MAAM6B,SAA2G;wBAC/GzB,UAAUJ,MAAMI,QAAQ;wBACxBd,OAAOU,MAAMZ,KAAK,CAACE,KAAK;wBACxBwC,kBAAkB9B,MAAMZ,KAAK,CAAC0C,gBAAgB;oBAChD;oBAEA,MAAMC,eAAe/B,MAAMZ,KAAK,CAACE,KAAK,EAAE0C;oBACxC,IAAID,cAAc;wBAChBF,OAAOI,aAAa,GAAGF;oBACzB;oBAEA,OAAOF;gBACT;YACJ;YAEA,wBAAwB;YACxBK,iBAAiB;gBACf,OAAO5F,YAAYoC,aAAa,GAAGC,MAAM,GACtCO,MAAM,CAACc,CAAAA,QAASA,MAAMR,OAAO,IAC7BoC,GAAG,CAAC5B,CAAAA,QAAU,CAAA;wBACbI,UAAUJ,MAAMI,QAAQ;wBACxB+B,eAAenC,MAAMZ,KAAK,CAAC+C,aAAa;wBACxC3C,SAASQ,MAAMR,OAAO;wBACtB4C,gBAAgBpC,MAAMN,iBAAiB;oBACzC,CAAA;YACJ;YAEA,4BAA4B;YAC5B2C,wBAAwB;gBACtB,MAAM5D,UAAUnC,YAAYoC,aAAa,GAAGC,MAAM;gBAClD,MAAM2D,eAAe7D,QAAQO,MAAM;gBACnC,MAAMuD,aAAa9D,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEC,KAAK,CAACoD,eAAe,GAAG,GAAGxD,MAAM;gBAC1E,MAAMyD,eAAehE,QAAQS,MAAM,CAACC,CAAAA,IAAKA,EAAEC,KAAK,CAACoD,eAAe,GAAG,GAAGxD,MAAM;gBAE5E,OAAO;oBACLsD;oBACAI,cAAcJ,eAAe,IAAI,AAACC,aAAaD,eAAgB,MAAM;oBACrEK,gBAAgBL,eAAe,IAAI,AAACG,eAAeH,eAAgB,MAAM;oBACzEM,mBAAmBN,eAAe,IAC9B7D,QAAQ8B,MAAM,CAAC,CAACsC,KAAK1D,IAAM0D,MAAM1D,EAAEC,KAAK,CAACoD,eAAe,EAAE,KAAKF,eAC/D;gBACN;YACF;YAEA,mCAAmC;YACnCQ,sBAAsB,CAACC;gBACrB,MAAMC,gBAAgB5E,OAAO6E,KAAK;gBAClC7E,OAAO6E,KAAK,GAAG,CAAC,GAAGC;oBACjB,OAAO,IAAIC,QAAQC,CAAAA;wBACjBC,WAAW,IAAMD,QAAQJ,iBAAiBE,QAAQH;oBACpD;gBACF;gBACA/E,iBAAS,CAACsF,OAAO,CAAC,oCAAoC;oBAAEC,SAASR;gBAAG;gBAEpE,gCAAgC;gBAChCM,WAAW;oBACTjF,OAAO6E,KAAK,GAAGD;oBACfhF,iBAAS,CAACsF,OAAO,CAAC,qCAAqC;wBAAEE,UAAU;oBAAM;gBAC3E,GAAG;YACL;YAEA,mDAAmD;YACnDC,WAAW;gBACTC,YAAYD,oBAAS,CAACC,UAAU;gBAChCC,MAAMF,oBAAS,CAACE,IAAI;gBACpBC,aAAaH,oBAAS,CAACG,WAAW;gBAClCC,WAAWJ,oBAAS,CAACI,SAAS;YAChC;YAEA,qBAAqB;YACrBC,sBAAsB;gBACpB,6EAA6E;gBAC7E,qCAAqC;gBACrC9F,iBAAS,CAACC,OAAO,CAAC;YACpB;YAEA8F,uBAAuB;gBACrB/F,iBAAS,CAACC,OAAO,CAAC;YACpB;YAEA,iCAAiC;YACjC+F,0BAA0B,IAAYjH,qBAAqBkH,IAAI;YAC/DC,0BAA0B,IAAYnH,qBAAqBoH,IAAI;YAC/DC,4BAA4B,IAAYrH,qBAAqBsH,MAAM;QACrE;QAEA,sCAAsC;QACrCjG,OAA8CkG,UAAU,GAAGxD;QAE5D,yBAAyB;QACzB9C,iBAAS,CAACuG,KAAK,CAAC,yDAAyD;YACvEvG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YAEdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YAEdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YAEdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YAEdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YAEdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;YACdxG,iBAAS,CAACwG,GAAG,CAAC;QAChB;IAEF,GAAG;QAAClI;QAAaiC;QAAuBxB;KAAqB;IAE7D,IAAIM,QAAQC,GAAG,CAACC,QAAQ,KAAK,eAAe;QAC1C,OAAO;IACT;IAEA,qBACE;;0BACE,qBAACkH,sCAAkB;gBACjBC,eAAe;gBACfC,gBAAe;;YAEhBnI,SAASG,cAAc,kBACtB,sBAACiI;gBACCC,OAAO;oBACLC,UAAU;oBACVC,KAAK;oBACLC,OAAO;oBACPC,YAAY;oBACZC,OAAO;oBACPC,SAAS;oBACTC,cAAc;oBACdC,YAAY;oBACZC,UAAU;oBACVC,QAAQ;oBACRC,UAAU;oBACVC,WAAW;oBACXC,UAAU;gBACZ;;kCAEA,qBAACd;wBAAIC,OAAO;4BAAEc,cAAc;4BAAQC,YAAY;wBAAO;kCAAG;;kCAG1D,qBAACC;wBAAkBxE,UAAU9C;;kCAC7B,sBAACqG;wBAAIC,OAAO;4BAAEiB,WAAW;4BAAQC,SAAS;4BAAQC,KAAK;wBAAM;;0CAC3D,qBAACC;gCACCC,SAASnJ,qBAAqBsH,MAAM;gCACpCQ,OAAO;oCACLI,YAAY;oCACZC,OAAO;oCACPiB,QAAQ;oCACRhB,SAAS;oCACTC,cAAc;oCACdE,UAAU;oCACVc,QAAQ;gCACV;0CACD;;0CAGD,qBAACH;gCACCC,SAAS,IAAMzJ,YAAYyB,CAAAA,OAAS,CAAA;4CAAE,GAAGA,IAAI;4CAAEvB,gBAAgB;wCAAM,CAAA;gCACrEkI,OAAO;oCACLI,YAAY;oCACZC,OAAO;oCACPiB,QAAQ;oCACRhB,SAAS;oCACTC,cAAc;oCACdE,UAAU;oCACVc,QAAQ;gCACV;0CACD;;;;;;0BAQP,qBAACC,4CAAyB;gBACxBC,WAAWvJ,qBAAqBuJ,SAAS;gBACzCC,SAASxJ,qBAAqBoH,IAAI;;;;AAI1C;AAEA,kCAAkC;AAClC,SAAS0B,kBAAkB,EAAExE,QAAQ,EAOlC;IACD,MAAM,CAACmF,OAAOC,SAAS,GAAG/J,IAAAA,eAAQ,EAAC2E;IAEnCjE,IAAAA,gBAAS,EAAC;QACR,MAAMsJ,WAAWC,YAAY;YAC3BF,SAASpF;QACX,GAAG;QAEH,OAAO,IAAYuF,cAAcF;IACnC,GAAG;QAACrF;KAAS;IAEb,qBACE,sBAACuD;QAAIC,OAAO;YAAEgC,YAAY;QAAM;;0BAC9B,qBAACjC;0BAAI,cAAA,qBAACkC;8BAAO;;;0BACb,sBAAClC;;oBAAI;oBAAgB4B,MAAM1H,KAAK,CAACL,OAAO,CAACM,KAAK;;;0BAC9C,sBAAC6F;;oBAAI;oBAAU4B,MAAM1H,KAAK,CAACL,OAAO,CAACQ,OAAO;;;0BAC1C,sBAAC2F;;oBAAI;oBAAS4B,MAAM1H,KAAK,CAACL,OAAO,CAACa,KAAK;;;0BACvC,sBAACsF;;oBAAI;oBAAU4B,MAAM1H,KAAK,CAACL,OAAO,CAACR,OAAO;;;0BAC1C,sBAAC2G;;oBAAI;oBAAQ4B,MAAM1H,KAAK,CAACL,OAAO,CAACc,KAAK;;;0BAEtC,qBAACqF;gBAAIC,OAAO;oBAAEiB,WAAW;gBAAM;0BAAG,cAAA,qBAACgB;8BAAO;;;0BAC1C,sBAAClC;;oBAAI;oBAAQ4B,MAAM1H,KAAK,CAACF,SAAS,CAACG,KAAK;;;0BACxC,sBAAC6F;;oBAAI;oBAAU4B,MAAM1H,KAAK,CAACF,SAAS,CAACe,OAAO;;;0BAE5C,qBAACiF;gBAAIC,OAAO;oBAAEiB,WAAW;gBAAM;0BAAG,cAAA,qBAACgB;8BAAO;;;0BAC1C,sBAAClC;;oBAAI;oBAAamC,KAAKC,KAAK,CAACR,MAAMnG,MAAM,CAACC,SAAS,GAAG;oBAAM;;;0BAC5D,sBAACsE;;oBAAI;oBAAYmC,KAAKC,KAAK,CAACR,MAAMnG,MAAM,CAACQ,gBAAgB;oBAAE;;;0BAE3D,qBAAC+D;gBAAIC,OAAO;oBAAEiB,WAAW;gBAAM;0BAAG,cAAA,qBAACgB;8BAAO;;;YACzCG,OAAOC,OAAO,CAACV,MAAM3G,OAAO,EAAE+B,GAAG,CAAC,CAAC,CAAC3B,QAAQkH,MAAM,iBACjD,sBAACvC;;wBAAkBwC,OAAOnH;wBAAQ;wBAAGkH;;mBAA3BlH;;;AAIlB;AAEe,SAAS5D;IACtB,qBAAO,qBAACD;AACV"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "184030d6e141d9719862d38eee83eea82484235b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_103r58a2z9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_103r58a2z9();
cov_103r58a2z9().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_103r58a2z9().f[0]++;
  cov_103r58a2z9().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_103r58a2z9().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_103r58a2z9().s[3]++;
_export(exports, {
  get EnhancedQueryDevTools() {
    /* istanbul ignore next */
    cov_103r58a2z9().f[1]++;
    cov_103r58a2z9().s[4]++;
    return EnhancedQueryDevTools;
  },
  get default() {
    /* istanbul ignore next */
    cov_103r58a2z9().f[2]++;
    cov_103r58a2z9().s[5]++;
    return BISaaSQueryDevTools;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_103r58a2z9().s[6]++, require("react/jsx-runtime"));
const _reactquery =
/* istanbul ignore next */
(cov_103r58a2z9().s[7]++, require("@tanstack/react-query"));
const _reactquerydevtools =
/* istanbul ignore next */
(cov_103r58a2z9().s[8]++, require("@tanstack/react-query-devtools"));
const _react =
/* istanbul ignore next */
(cov_103r58a2z9().s[9]++, require("react"));
const _logger =
/* istanbul ignore next */
(cov_103r58a2z9().s[10]++, require("../development/logger"));
const _devtoolsdashboard =
/* istanbul ignore next */
(cov_103r58a2z9().s[11]++, require("./devtools-dashboard"));
const _performancemonitor =
/* istanbul ignore next */
(cov_103r58a2z9().s[12]++, require("./performance-monitor"));
const _querykeys =
/* istanbul ignore next */
(cov_103r58a2z9().s[13]++, require("./query-keys"));
function EnhancedQueryDevTools() {
  /* istanbul ignore next */
  cov_103r58a2z9().f[3]++;
  const queryClient =
  /* istanbul ignore next */
  (cov_103r58a2z9().s[14]++, (0, _reactquery.useQueryClient)());
  const [devState, setDevState] =
  /* istanbul ignore next */
  (cov_103r58a2z9().s[15]++, (0, _react.useState)({
    isAdvancedMode: false,
    showNetworkStats: false,
    autoRefreshStats: false,
    selectedDomain: null
  }));
  // Performance dashboard hook
  const performanceDashboard =
  /* istanbul ignore next */
  (cov_103r58a2z9().s[16]++, (0, _devtoolsdashboard.useQueryPerformanceDashboard)());
  // Auto performance monitoring (development only)
  /* istanbul ignore next */
  cov_103r58a2z9().s[17]++;
  (0, _performancemonitor.useDevQueryMonitor)({
    intervalMs: 10000,
    autoOptimize: false
  });
  // Enhanced keyboard shortcuts for development
  /* istanbul ignore next */
  cov_103r58a2z9().s[18]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_103r58a2z9().f[4]++;
    cov_103r58a2z9().s[19]++;
    if (process.env.NODE_ENV !== 'development') {
      /* istanbul ignore next */
      cov_103r58a2z9().b[0][0]++;
      cov_103r58a2z9().s[20]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_103r58a2z9().b[0][1]++;
    }
    cov_103r58a2z9().s[21]++;
    const handleKeyDown = event => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[5]++;
      cov_103r58a2z9().s[22]++;
      // Ctrl/Cmd + Shift + C to clear cache
      if ((
      /* istanbul ignore next */
      (cov_103r58a2z9().b[2][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_103r58a2z9().b[2][1]++, event.metaKey)) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[2][2]++, event.shiftKey) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[2][3]++, event.key === 'C')) {
        /* istanbul ignore next */
        cov_103r58a2z9().b[1][0]++;
        cov_103r58a2z9().s[23]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_103r58a2z9().s[24]++;
        queryClient.clear();
        /* istanbul ignore next */
        cov_103r58a2z9().s[25]++;
        _logger.devLogger.success('Query cache cleared via keyboard shortcut');
      } else
      /* istanbul ignore next */
      {
        cov_103r58a2z9().b[1][1]++;
      }
      // Ctrl/Cmd + Shift + D to toggle DevTools advanced mode
      cov_103r58a2z9().s[26]++;
      if ((
      /* istanbul ignore next */
      (cov_103r58a2z9().b[4][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_103r58a2z9().b[4][1]++, event.metaKey)) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[4][2]++, event.shiftKey) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[4][3]++, event.key === 'D')) {
        /* istanbul ignore next */
        cov_103r58a2z9().b[3][0]++;
        cov_103r58a2z9().s[27]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_103r58a2z9().s[28]++;
        setDevState(prev => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[6]++;
          cov_103r58a2z9().s[29]++;
          return {
            ...prev,
            isAdvancedMode: !prev.isAdvancedMode
          };
        });
      } else
      /* istanbul ignore next */
      {
        cov_103r58a2z9().b[3][1]++;
      }
      // Ctrl/Cmd + Shift + N to toggle network stats
      cov_103r58a2z9().s[30]++;
      if ((
      /* istanbul ignore next */
      (cov_103r58a2z9().b[6][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_103r58a2z9().b[6][1]++, event.metaKey)) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[6][2]++, event.shiftKey) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[6][3]++, event.key === 'N')) {
        /* istanbul ignore next */
        cov_103r58a2z9().b[5][0]++;
        cov_103r58a2z9().s[31]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_103r58a2z9().s[32]++;
        setDevState(prev => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[7]++;
          cov_103r58a2z9().s[33]++;
          return {
            ...prev,
            showNetworkStats: !prev.showNetworkStats
          };
        });
      } else
      /* istanbul ignore next */
      {
        cov_103r58a2z9().b[5][1]++;
      }
      // Ctrl/Cmd + Shift + R to force refetch all queries
      cov_103r58a2z9().s[34]++;
      if ((
      /* istanbul ignore next */
      (cov_103r58a2z9().b[8][0]++, event.ctrlKey) ||
      /* istanbul ignore next */
      (cov_103r58a2z9().b[8][1]++, event.metaKey)) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[8][2]++, event.shiftKey) &&
      /* istanbul ignore next */
      (cov_103r58a2z9().b[8][3]++, event.key === 'R')) {
        /* istanbul ignore next */
        cov_103r58a2z9().b[7][0]++;
        cov_103r58a2z9().s[35]++;
        event.preventDefault();
        /* istanbul ignore next */
        cov_103r58a2z9().s[36]++;
        queryClient.refetchQueries();
        /* istanbul ignore next */
        cov_103r58a2z9().s[37]++;
        _logger.devLogger.success('All queries refetched via keyboard shortcut');
      } else
      /* istanbul ignore next */
      {
        cov_103r58a2z9().b[7][1]++;
      }
    };
    /* istanbul ignore next */
    cov_103r58a2z9().s[38]++;
    window.addEventListener('keydown', handleKeyDown);
    /* istanbul ignore next */
    cov_103r58a2z9().s[39]++;
    return () => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[8]++;
      cov_103r58a2z9().s[40]++;
      return window.removeEventListener('keydown', handleKeyDown);
    };
  }, [queryClient]);
  // Advanced query performance monitoring
  const getPerformanceMetrics =
  /* istanbul ignore next */
  (cov_103r58a2z9().s[41]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_103r58a2z9().f[9]++;
    const queries =
    /* istanbul ignore next */
    (cov_103r58a2z9().s[42]++, queryClient.getQueryCache().getAll());
    const mutations =
    /* istanbul ignore next */
    (cov_103r58a2z9().s[43]++, queryClient.getMutationCache().getAll());
    /* istanbul ignore next */
    cov_103r58a2z9().s[44]++;
    return {
      cache: {
        queries: {
          total: queries.length,
          loading: queries.filter(q => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[10]++;
            cov_103r58a2z9().s[45]++;
            return q.state.status === 'pending';
          }).length,
          error: queries.filter(q => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[11]++;
            cov_103r58a2z9().s[46]++;
            return q.state.status === 'error';
          }).length,
          success: queries.filter(q => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[12]++;
            cov_103r58a2z9().s[47]++;
            return q.state.status === 'success';
          }).length,
          stale: queries.filter(q => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[13]++;
            cov_103r58a2z9().s[48]++;
            return q.isStale();
          }).length,
          inactive: queries.filter(q => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[14]++;
            cov_103r58a2z9().s[49]++;
            return q.getObserversCount() === 0;
          }).length
        },
        mutations: {
          total: mutations.length,
          pending: mutations.filter(m => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[15]++;
            cov_103r58a2z9().s[50]++;
            return m.state.status === 'pending';
          }).length,
          error: mutations.filter(m => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[16]++;
            cov_103r58a2z9().s[51]++;
            return m.state.status === 'error';
          }).length,
          success: mutations.filter(m => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[17]++;
            cov_103r58a2z9().s[52]++;
            return m.state.status === 'success';
          }).length
        }
      },
      domains: (() => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[18]++;
        const domainStats =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[53]++, {});
        /* istanbul ignore next */
        cov_103r58a2z9().s[54]++;
        queries.forEach(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[19]++;
          const domain =
          /* istanbul ignore next */
          (cov_103r58a2z9().s[55]++, Array.isArray(query.queryKey) ?
          /* istanbul ignore next */
          (cov_103r58a2z9().b[9][0]++, query.queryKey[0]) :
          /* istanbul ignore next */
          (cov_103r58a2z9().b[9][1]++, 'unknown'));
          /* istanbul ignore next */
          cov_103r58a2z9().s[56]++;
          domainStats[domain] = (
          /* istanbul ignore next */
          (cov_103r58a2z9().b[10][0]++, domainStats[domain]) ||
          /* istanbul ignore next */
          (cov_103r58a2z9().b[10][1]++, 0)) + 1;
        });
        /* istanbul ignore next */
        cov_103r58a2z9().s[57]++;
        return domainStats;
      })(),
      memory: {
        cacheSize: queries.reduce((size, query) => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[20]++;
          const dataSize =
          /* istanbul ignore next */
          (cov_103r58a2z9().s[58]++, JSON.stringify(
          /* istanbul ignore next */
          (cov_103r58a2z9().b[11][0]++, query.state.data) ||
          /* istanbul ignore next */
          (cov_103r58a2z9().b[11][1]++, {})).length);
          /* istanbul ignore next */
          cov_103r58a2z9().s[59]++;
          return size + dataSize;
        }, 0),
        averageQuerySize: queries.length > 0 ?
        /* istanbul ignore next */
        (cov_103r58a2z9().b[12][0]++, queries.reduce((total, query) => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[21]++;
          cov_103r58a2z9().s[60]++;
          return total + JSON.stringify(
          /* istanbul ignore next */
          (cov_103r58a2z9().b[13][0]++, query.state.data) ||
          /* istanbul ignore next */
          (cov_103r58a2z9().b[13][1]++, {})).length;
        }, 0) / queries.length) :
        /* istanbul ignore next */
        (cov_103r58a2z9().b[12][1]++, 0)
      }
    };
  }, [queryClient]));
  // Enhanced development utilities
  /* istanbul ignore next */
  cov_103r58a2z9().s[61]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_103r58a2z9().f[22]++;
    cov_103r58a2z9().s[62]++;
    if (process.env.NODE_ENV !== 'development') {
      /* istanbul ignore next */
      cov_103r58a2z9().b[14][0]++;
      cov_103r58a2z9().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_103r58a2z9().b[14][1]++;
    }
    cov_103r58a2z9().s[64]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_103r58a2z9().b[15][0]++;
      cov_103r58a2z9().s[65]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_103r58a2z9().b[15][1]++;
    }
    const queryDebugUtils =
    /* istanbul ignore next */
    (cov_103r58a2z9().s[66]++, {
      // Basic operations
      getAllQueries: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[23]++;
        cov_103r58a2z9().s[67]++;
        return queryClient.getQueryCache().getAll();
      },
      getAllMutations: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[24]++;
        cov_103r58a2z9().s[68]++;
        return queryClient.getMutationCache().getAll();
      },
      clearCache: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[25]++;
        cov_103r58a2z9().s[69]++;
        return queryClient.clear();
      },
      invalidateAll: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[26]++;
        cov_103r58a2z9().s[70]++;
        return queryClient.invalidateQueries();
      },
      refetchAll: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[27]++;
        cov_103r58a2z9().s[71]++;
        return queryClient.refetchQueries();
      },
      // Performance monitoring
      getStats: getPerformanceMetrics,
      // Domain-specific operations
      invalidateDomain: domain => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[28]++;
        cov_103r58a2z9().s[72]++;
        queryClient.invalidateQueries({
          predicate: query => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[29]++;
            cov_103r58a2z9().s[73]++;
            return /* istanbul ignore next */(cov_103r58a2z9().b[16][0]++, Array.isArray(query.queryKey)) &&
            /* istanbul ignore next */
            (cov_103r58a2z9().b[16][1]++, query.queryKey[0] === domain);
          }
        });
        /* istanbul ignore next */
        cov_103r58a2z9().s[74]++;
        _logger.devLogger.success(`Invalidated all queries for domain: ${domain}`);
      },
      // Query key management
      findQueriesByKey: searchKey => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[30]++;
        cov_103r58a2z9().s[75]++;
        return queryClient.getQueryCache().getAll().filter(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[31]++;
          cov_103r58a2z9().s[76]++;
          return JSON.stringify(query.queryKey).includes(searchKey);
        });
      },
      // Error analysis
      getErrorQueries: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[32]++;
        cov_103r58a2z9().s[77]++;
        return queryClient.getQueryCache().getAll().filter(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[33]++;
          cov_103r58a2z9().s[78]++;
          return query.state.status === 'error';
        }).map(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[34]++;
          const result =
          /* istanbul ignore next */
          (cov_103r58a2z9().s[79]++, {
            queryKey: query.queryKey,
            error: query.state.error,
            errorUpdateCount: query.state.errorUpdateCount
          });
          const errorMessage =
          /* istanbul ignore next */
          (cov_103r58a2z9().s[80]++, query.state.error?.toString());
          /* istanbul ignore next */
          cov_103r58a2z9().s[81]++;
          if (errorMessage) {
            /* istanbul ignore next */
            cov_103r58a2z9().b[17][0]++;
            cov_103r58a2z9().s[82]++;
            result.failureReason = errorMessage;
          } else
          /* istanbul ignore next */
          {
            cov_103r58a2z9().b[17][1]++;
          }
          cov_103r58a2z9().s[83]++;
          return result;
        });
      },
      // Stale data management
      getStaleQueries: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[35]++;
        cov_103r58a2z9().s[84]++;
        return queryClient.getQueryCache().getAll().filter(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[36]++;
          cov_103r58a2z9().s[85]++;
          return query.isStale();
        }).map(query => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[37]++;
          cov_103r58a2z9().s[86]++;
          return {
            queryKey: query.queryKey,
            dataUpdatedAt: query.state.dataUpdatedAt,
            isStale: query.isStale(),
            observersCount: query.getObserversCount()
          };
        });
      },
      // Cache efficiency analysis
      analyzeCacheEfficiency: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[38]++;
        const queries =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[87]++, queryClient.getQueryCache().getAll());
        const totalQueries =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[88]++, queries.length);
        const hitQueries =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[89]++, queries.filter(q => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[39]++;
          cov_103r58a2z9().s[90]++;
          return q.state.dataUpdateCount > 0;
        }).length);
        const staleFetches =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[91]++, queries.filter(q => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[40]++;
          cov_103r58a2z9().s[92]++;
          return q.state.dataUpdateCount > 1;
        }).length);
        /* istanbul ignore next */
        cov_103r58a2z9().s[93]++;
        return {
          totalQueries,
          cacheHitRate: totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_103r58a2z9().b[18][0]++, hitQueries / totalQueries * 100) :
          /* istanbul ignore next */
          (cov_103r58a2z9().b[18][1]++, 0),
          staleFetchRate: totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_103r58a2z9().b[19][0]++, staleFetches / totalQueries * 100) :
          /* istanbul ignore next */
          (cov_103r58a2z9().b[19][1]++, 0),
          averageFetchCount: totalQueries > 0 ?
          /* istanbul ignore next */
          (cov_103r58a2z9().b[20][0]++, queries.reduce((sum, q) => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[41]++;
            cov_103r58a2z9().s[94]++;
            return sum + q.state.dataUpdateCount;
          }, 0) / totalQueries) :
          /* istanbul ignore next */
          (cov_103r58a2z9().b[20][1]++, 0)
        };
      },
      // Network simulation (for testing)
      simulateNetworkDelay: ms => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[42]++;
        const originalFetch =
        /* istanbul ignore next */
        (cov_103r58a2z9().s[95]++, window.fetch);
        /* istanbul ignore next */
        cov_103r58a2z9().s[96]++;
        window.fetch = (...args) => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[43]++;
          cov_103r58a2z9().s[97]++;
          return new Promise(resolve => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[44]++;
            cov_103r58a2z9().s[98]++;
            setTimeout(() => {
              /* istanbul ignore next */
              cov_103r58a2z9().f[45]++;
              cov_103r58a2z9().s[99]++;
              return resolve(originalFetch(...args));
            }, ms);
          });
        };
        /* istanbul ignore next */
        cov_103r58a2z9().s[100]++;
        _logger.devLogger.network('Network delay simulation started', {
          delayMs: ms
        });
        // Auto-restore after 30 seconds
        /* istanbul ignore next */
        cov_103r58a2z9().s[101]++;
        setTimeout(() => {
          /* istanbul ignore next */
          cov_103r58a2z9().f[46]++;
          cov_103r58a2z9().s[102]++;
          window.fetch = originalFetch;
          /* istanbul ignore next */
          cov_103r58a2z9().s[103]++;
          _logger.devLogger.network('Network delay simulation restored', {
            duration: '30s'
          });
        }, 30000);
      },
      // Query key utilities using our centralized system
      queryKeys: {
        dashboards: _querykeys.queryKeys.dashboards,
        auth: _querykeys.queryKeys.auth,
        dataSources: _querykeys.queryKeys.dataSources,
        analytics: _querykeys.queryKeys.analytics
      },
      // Advanced debugging
      enableVerboseLogging: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[47]++;
        cov_103r58a2z9().s[104]++;
        // Note: setLogger method may not be available in all TanStack Query versions
        // This is a development-only feature
        _logger.devLogger.success('Verbose query logging enabled (Note: setLogger not available in current version)');
      },
      disableVerboseLogging: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[48]++;
        cov_103r58a2z9().s[105]++;
        _logger.devLogger.success('Verbose query logging disabled');
      },
      // Performance dashboard controls
      showPerformanceDashboard: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[49]++;
        cov_103r58a2z9().s[106]++;
        return performanceDashboard.show();
      },
      hidePerformanceDashboard: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[50]++;
        cov_103r58a2z9().s[107]++;
        return performanceDashboard.hide();
      },
      togglePerformanceDashboard: () => {
        /* istanbul ignore next */
        cov_103r58a2z9().f[51]++;
        cov_103r58a2z9().s[108]++;
        return performanceDashboard.toggle();
      }
    });
    // Expose to window for console access
    /* istanbul ignore next */
    cov_103r58a2z9().s[109]++;
    window.queryDebug = queryDebugUtils;
    // Log available commands
    /* istanbul ignore next */
    cov_103r58a2z9().s[110]++;
    _logger.devLogger.group('TanStack Query DevTools Enhanced - Available Commands', () => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[52]++;
      cov_103r58a2z9().s[111]++;
      _logger.devLogger.log('Basic Operations:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[112]++;
      _logger.devLogger.log('  queryDebug.getStats() - Get performance metrics');
      /* istanbul ignore next */
      cov_103r58a2z9().s[113]++;
      _logger.devLogger.log('  queryDebug.clearCache() - Clear all cached data');
      /* istanbul ignore next */
      cov_103r58a2z9().s[114]++;
      _logger.devLogger.log('  queryDebug.invalidateAll() - Invalidate all queries');
      /* istanbul ignore next */
      cov_103r58a2z9().s[115]++;
      _logger.devLogger.log('  queryDebug.refetchAll() - Refetch all queries');
      /* istanbul ignore next */
      cov_103r58a2z9().s[116]++;
      _logger.devLogger.log('Advanced Analysis:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[117]++;
      _logger.devLogger.log('  queryDebug.getErrorQueries() - Get queries with errors');
      /* istanbul ignore next */
      cov_103r58a2z9().s[118]++;
      _logger.devLogger.log('  queryDebug.getStaleQueries() - Get stale queries');
      /* istanbul ignore next */
      cov_103r58a2z9().s[119]++;
      _logger.devLogger.log('  queryDebug.analyzeCacheEfficiency() - Cache performance analysis');
      /* istanbul ignore next */
      cov_103r58a2z9().s[120]++;
      _logger.devLogger.log('Domain Operations:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[121]++;
      _logger.devLogger.log('  queryDebug.invalidateDomain(\'dashboards\') - Invalidate specific domain');
      /* istanbul ignore next */
      cov_103r58a2z9().s[122]++;
      _logger.devLogger.log('  queryDebug.findQueriesByKey(\'dashboard\') - Find queries by key');
      /* istanbul ignore next */
      cov_103r58a2z9().s[123]++;
      _logger.devLogger.log('Debugging:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[124]++;
      _logger.devLogger.log('  queryDebug.enableVerboseLogging() - Enable detailed logs');
      /* istanbul ignore next */
      cov_103r58a2z9().s[125]++;
      _logger.devLogger.log('  queryDebug.simulateNetworkDelay(1000) - Add network delay');
      /* istanbul ignore next */
      cov_103r58a2z9().s[126]++;
      _logger.devLogger.log('Performance Dashboard:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[127]++;
      _logger.devLogger.log('  queryDebug.showPerformanceDashboard() - Show advanced dashboard');
      /* istanbul ignore next */
      cov_103r58a2z9().s[128]++;
      _logger.devLogger.log('  queryDebug.togglePerformanceDashboard() - Toggle dashboard');
      /* istanbul ignore next */
      cov_103r58a2z9().s[129]++;
      _logger.devLogger.log('Keyboard Shortcuts:');
      /* istanbul ignore next */
      cov_103r58a2z9().s[130]++;
      _logger.devLogger.log('  Cmd/Ctrl + Shift + C - Clear cache');
      /* istanbul ignore next */
      cov_103r58a2z9().s[131]++;
      _logger.devLogger.log('  Cmd/Ctrl + Shift + R - Refetch all');
      /* istanbul ignore next */
      cov_103r58a2z9().s[132]++;
      _logger.devLogger.log('  Cmd/Ctrl + Shift + D - Toggle advanced mode');
      /* istanbul ignore next */
      cov_103r58a2z9().s[133]++;
      _logger.devLogger.log('  Cmd/Ctrl + Shift + N - Toggle network stats');
      /* istanbul ignore next */
      cov_103r58a2z9().s[134]++;
      _logger.devLogger.log('  Cmd/Ctrl + Shift + P - Toggle performance dashboard');
    });
  }, [queryClient, getPerformanceMetrics, performanceDashboard]);
  /* istanbul ignore next */
  cov_103r58a2z9().s[135]++;
  if (process.env.NODE_ENV !== 'development') {
    /* istanbul ignore next */
    cov_103r58a2z9().b[21][0]++;
    cov_103r58a2z9().s[136]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_103r58a2z9().b[21][1]++;
  }
  cov_103r58a2z9().s[137]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_reactquerydevtools.ReactQueryDevtools, {
      initialIsOpen: false,
      buttonPosition: "bottom-right"
    }),
    /* istanbul ignore next */
    (cov_103r58a2z9().b[22][0]++, devState.isAdvancedMode) &&
    /* istanbul ignore next */
    (cov_103r58a2z9().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      style: {
        position: 'fixed',
        top: '10px',
        right: '10px',
        background: 'rgba(0, 0, 0, 0.9)',
        color: 'white',
        padding: '16px',
        borderRadius: '8px',
        fontFamily: 'monospace',
        fontSize: '12px',
        zIndex: 9999,
        maxWidth: '400px',
        maxHeight: '500px',
        overflow: 'auto'
      },
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        style: {
          marginBottom: '12px',
          fontWeight: 'bold'
        },
        children: "\uD83D\uDE80 Enhanced Query DevTools"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(QueryStatsDisplay, {
        getStats: getPerformanceMetrics
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        style: {
          marginTop: '12px',
          display: 'flex',
          gap: '8px'
        },
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: performanceDashboard.toggle,
          style: {
            background: '#2196f3',
            color: 'white',
            border: 'none',
            padding: '4px 8px',
            borderRadius: '4px',
            fontSize: '10px',
            cursor: 'pointer'
          },
          children: "Performance"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
          onClick: () => {
            /* istanbul ignore next */
            cov_103r58a2z9().f[53]++;
            cov_103r58a2z9().s[138]++;
            return setDevState(prev => {
              /* istanbul ignore next */
              cov_103r58a2z9().f[54]++;
              cov_103r58a2z9().s[139]++;
              return {
                ...prev,
                isAdvancedMode: false
              };
            });
          },
          style: {
            background: '#666',
            color: 'white',
            border: 'none',
            padding: '4px 8px',
            borderRadius: '4px',
            fontSize: '10px',
            cursor: 'pointer'
          },
          children: "Close"
        })]
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsx)(_devtoolsdashboard.QueryPerformanceDashboard, {
      isVisible: performanceDashboard.isVisible,
      onClose: performanceDashboard.hide
    })]
  });
}
// Query stats display component  
function QueryStatsDisplay({
  getStats
}) {
  /* istanbul ignore next */
  cov_103r58a2z9().f[55]++;
  const [stats, setStats] =
  /* istanbul ignore next */
  (cov_103r58a2z9().s[140]++, (0, _react.useState)(getStats()));
  /* istanbul ignore next */
  cov_103r58a2z9().s[141]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_103r58a2z9().f[56]++;
    const interval =
    /* istanbul ignore next */
    (cov_103r58a2z9().s[142]++, setInterval(() => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[57]++;
      cov_103r58a2z9().s[143]++;
      setStats(getStats());
    }, 1000));
    /* istanbul ignore next */
    cov_103r58a2z9().s[144]++;
    return () => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[58]++;
      cov_103r58a2z9().s[145]++;
      return clearInterval(interval);
    };
  }, [getStats]);
  /* istanbul ignore next */
  cov_103r58a2z9().s[146]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    style: {
      lineHeight: '1.4'
    },
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
        children: "Cache Stats:"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Total Queries: ", stats.cache.queries.total]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Loading: ", stats.cache.queries.loading]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Errors: ", stats.cache.queries.error]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Success: ", stats.cache.queries.success]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Stale: ", stats.cache.queries.stale]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        marginTop: '8px'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
        children: "Mutations:"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Total: ", stats.cache.mutations.total]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Pending: ", stats.cache.mutations.pending]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        marginTop: '8px'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
        children: "Memory:"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Cache Size: ", Math.round(stats.memory.cacheSize / 1024), "KB"]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      children: ["Avg Query: ", Math.round(stats.memory.averageQuerySize), "B"]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      style: {
        marginTop: '8px'
      },
      children: /*#__PURE__*/(0, _jsxruntime.jsx)("strong", {
        children: "Domains:"
      })
    }), Object.entries(stats.domains).map(([domain, count]) => {
      /* istanbul ignore next */
      cov_103r58a2z9().f[59]++;
      cov_103r58a2z9().s[147]++;
      return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [String(domain), ": ", count]
      }, domain);
    })]
  });
}
function BISaaSQueryDevTools() {
  /* istanbul ignore next */
  cov_103r58a2z9().f[60]++;
  cov_103r58a2z9().s[148]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(EnhancedQueryDevTools, {});
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,