676129bc0c5c719470f938841608d857
/**
 * MainLayout Component Tests
 * Testing main application layout structure and navigation
 */ "use strict";
// Mock TopNavigation component
jest.mock('../TopNavigation', ()=>({
        TopNavigation: ()=>/*#__PURE__*/ (0, _jsxruntime.jsx)("nav", {
                "data-testid": "top-navigation",
                children: "Top Navigation"
            })
    }));
// Mock Sentry to avoid errors in tests
jest.mock('@sentry/nextjs', ()=>({
        addBreadcrumb: jest.fn(),
        captureException: jest.fn(),
        captureMessage: jest.fn(),
        setTag: jest.fn(),
        setContext: jest.fn()
    }));
// Mock logger to avoid console output in tests
jest.mock('@/lib/monitoring/logger.config', ()=>({
        appLogger: {
            debug: jest.fn(),
            info: jest.fn(),
            warn: jest.fn(),
            error: jest.fn()
        }
    }));
// Mock next/navigation
jest.mock('next/navigation', ()=>({
        useRouter: ()=>({
                push: jest.fn(),
                replace: jest.fn(),
                back: jest.fn(),
                forward: jest.fn(),
                refresh: jest.fn(),
                prefetch: jest.fn()
            })
    }));
Object.defineProperty(exports, "__esModule", {
    value: true
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("@testing-library/react");
const _reactquery = require("@tanstack/react-query");
const _react1 = /*#__PURE__*/ _interop_require_default(require("react"));
const _MainLayout = require("../MainLayout");
const _AuthContext = require("../../../contexts/AuthContext");
const _authmocks = require("../../../lib/test-utils/auth-mocks");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
// Test wrapper component
function TestWrapper({ children }) {
    const queryClient = new _reactquery.QueryClient({
        defaultOptions: {
            queries: {
                retry: false
            },
            mutations: {
                retry: false
            }
        }
    });
    const mockTokenManager = (0, _authmocks.createMockTokenManager)();
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_reactquery.QueryClientProvider, {
        client: queryClient,
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_AuthContext.AuthProvider, {
            tokenManager: mockTokenManager,
            children: children
        })
    });
}
// Helper function to render MainLayout with wrapper
function renderMainLayout(props = {}) {
    return (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
            ...props,
            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                "data-testid": "main-content",
                children: "Main Content"
            })
        })
    }));
}
describe('MainLayout Component', ()=>{
    describe('Basic Rendering', ()=>{
        it('should render main layout with all essential components', ()=>{
            renderMainLayout();
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByTestId('main-content')).toBeInTheDocument();
        });
        it('should apply correct root container styling', ()=>{
            renderMainLayout();
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            expect(rootContainer).toHaveClass('min-h-screen', 'bg-gray-50');
        });
        it('should apply correct main element styling', ()=>{
            renderMainLayout();
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toBeInTheDocument();
            expect(mainElement).toHaveClass('flex-1');
        });
        it('should render children inside main element', ()=>{
            renderMainLayout();
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toContainElement(_react.screen.getByTestId('main-content'));
        });
    });
    describe('Custom Styling', ()=>{
        it('should apply custom className to main element', ()=>{
            renderMainLayout({
                className: 'custom-main-class'
            });
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toHaveClass('flex-1', 'custom-main-class');
        });
        it('should handle multiple custom classes', ()=>{
            renderMainLayout({
                className: 'px-4 py-6 bg-blue-50'
            });
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toHaveClass('flex-1', 'px-4', 'py-6', 'bg-blue-50');
        });
        it('should handle empty className prop', ()=>{
            renderMainLayout({
                className: ''
            });
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toHaveClass('flex-1');
        });
        it('should handle undefined className prop', ()=>{
            renderMainLayout({
                className: undefined
            });
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toHaveClass('flex-1');
        });
    });
    describe('Children Rendering', ()=>{
        it('should render single child component', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                        children: "Single Child"
                    })
                })
            }));
            expect(_react.screen.getByRole('heading', {
                name: 'Single Child'
            })).toBeInTheDocument();
        });
        it('should render multiple child components', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_MainLayout.MainLayout, {
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("header", {
                            children: "Header Content"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("section", {
                            children: "Section Content"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("footer", {
                            children: "Footer Content"
                        })
                    ]
                })
            }));
            expect(_react.screen.getByText('Header Content')).toBeInTheDocument();
            expect(_react.screen.getByText('Section Content')).toBeInTheDocument();
            expect(_react.screen.getByText('Footer Content')).toBeInTheDocument();
        });
        it('should render complex nested children', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("header", {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)("nav", {
                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("ul", {
                                        children: [
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                                children: "Nav Item 1"
                                            }),
                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("li", {
                                                children: "Nav Item 2"
                                            })
                                        ]
                                    })
                                })
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("main", {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("article", {
                                    children: [
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                                            children: "Article Title"
                                        }),
                                        /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                            children: "Article content"
                                        })
                                    ]
                                })
                            })
                        ]
                    })
                })
            }));
            expect(_react.screen.getByText('Nav Item 1')).toBeInTheDocument();
            expect(_react.screen.getByText('Nav Item 2')).toBeInTheDocument();
            expect(_react.screen.getByRole('heading', {
                name: 'Article Title'
            })).toBeInTheDocument();
            expect(_react.screen.getByText('Article content')).toBeInTheDocument();
        });
        it('should handle React fragments as children', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                        children: [
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                                children: "Fragment Child 1"
                            }),
                            /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                children: "Fragment Child 2"
                            })
                        ]
                    })
                })
            }));
            expect(_react.screen.getByRole('heading', {
                name: 'Fragment Child 1'
            })).toBeInTheDocument();
            expect(_react.screen.getByText('Fragment Child 2')).toBeInTheDocument();
        });
        it('should handle conditional rendering of children', ()=>{
            const showContent = true;
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_MainLayout.MainLayout, {
                    children: [
                        showContent && /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            children: "Conditional Content"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            children: "Always Visible"
                        })
                    ]
                })
            }));
            expect(_react.screen.getByText('Conditional Content')).toBeInTheDocument();
            expect(_react.screen.getByText('Always Visible')).toBeInTheDocument();
        });
    });
    describe('Layout Structure', ()=>{
        it('should have proper semantic HTML structure', ()=>{
            renderMainLayout();
            // Root container
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            expect(rootContainer?.tagName).toBe('DIV');
            // Navigation
            const navigation = _react.screen.getByTestId('top-navigation');
            expect(navigation.tagName).toBe('NAV');
            // Main content area
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement.tagName).toBe('MAIN');
        });
        it('should maintain proper element hierarchy', ()=>{
            renderMainLayout();
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            const navigation = _react.screen.getByTestId('top-navigation');
            const mainElement = _react.screen.getByRole('main');
            expect(rootContainer).toContainElement(navigation);
            expect(rootContainer).toContainElement(mainElement);
            expect(mainElement).toContainElement(_react.screen.getByTestId('main-content'));
        });
        it('should position navigation before main content', ()=>{
            renderMainLayout();
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            const children = Array.from(rootContainer?.children || []);
            expect(children[0]).toBe(_react.screen.getByTestId('top-navigation'));
            expect(children[1]).toBe(_react.screen.getByRole('main'));
        });
    });
    describe('Integration with TopNavigation', ()=>{
        it('should render TopNavigation component', ()=>{
            renderMainLayout();
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByText('Top Navigation')).toBeInTheDocument();
        });
        it('should not pass props to TopNavigation', ()=>{
            // TopNavigation should not receive any props from MainLayout
            renderMainLayout({
                customProp: 'test'
            });
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
        });
    });
    describe('Responsive Design Considerations', ()=>{
        it('should use min-h-screen for full viewport height', ()=>{
            renderMainLayout();
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            expect(rootContainer).toHaveClass('min-h-screen');
        });
        it('should use flex-1 for main content to fill remaining space', ()=>{
            renderMainLayout();
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement).toHaveClass('flex-1');
        });
        it('should apply background color to root container', ()=>{
            renderMainLayout();
            const rootContainer = _react.screen.getByTestId('top-navigation').parentElement;
            expect(rootContainer).toHaveClass('bg-gray-50');
        });
    });
    describe('Error Handling', ()=>{
        it('should handle null children gracefully', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: null
                })
            }));
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByRole('main')).toBeInTheDocument();
        });
        it('should handle undefined children gracefully', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: undefined
                })
            }));
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByRole('main')).toBeInTheDocument();
        });
        it('should handle empty string children', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: ''
                })
            }));
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByRole('main')).toBeInTheDocument();
        });
        it('should handle boolean children', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_MainLayout.MainLayout, {
                    children: [
                        true,
                        false
                    ]
                })
            }));
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            expect(_react.screen.getByRole('main')).toBeInTheDocument();
        });
    });
    describe('Performance and Memory', ()=>{
        it('should not cause memory leaks on unmount', ()=>{
            const { unmount } = renderMainLayout();
            expect(_react.screen.getByTestId('top-navigation')).toBeInTheDocument();
            // Should unmount cleanly without errors
            expect(()=>unmount()).not.toThrow();
        });
        it('should handle rapid re-renders', ()=>{
            const { rerender } = renderMainLayout();
            for(let i = 0; i < 10; i++){
                rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                        className: `iteration-${i}`,
                        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                "Iteration ",
                                i
                            ]
                        })
                    })
                }));
            }
            expect(_react.screen.getByText('Iteration 9')).toBeInTheDocument();
            expect(_react.screen.getByRole('main')).toHaveClass('iteration-9');
        });
    });
    describe('Accessibility', ()=>{
        it('should have proper landmark roles', ()=>{
            renderMainLayout();
            // Main landmark should be present
            expect(_react.screen.getByRole('main')).toBeInTheDocument();
            // Navigation landmark should be present (from TopNavigation mock)
            expect(_react.screen.getByRole('navigation')).toBeInTheDocument();
        });
        it('should maintain focus management', ()=>{
            renderMainLayout();
            const mainElement = _react.screen.getByRole('main');
            // Main element should be focusable if needed
            expect(mainElement).toBeInTheDocument();
        });
        it('should support screen readers', ()=>{
            renderMainLayout();
            // Proper semantic structure for screen readers
            const mainElement = _react.screen.getByRole('main');
            expect(mainElement.tagName).toBe('MAIN');
        });
    });
    describe('Component Props Interface', ()=>{
        it('should accept ReactNode children', ()=>{
            const complexChild = /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                children: [
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                        children: "Complex"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("em", {
                        children: "Child"
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("strong", {
                        children: "Component"
                    })
                ]
            });
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: complexChild
                })
            }));
            expect(_react.screen.getByText('Complex')).toBeInTheDocument();
            expect(_react.screen.getByText('Child')).toBeInTheDocument();
            expect(_react.screen.getByText('Component')).toBeInTheDocument();
        });
        it('should accept optional className prop', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    className: "test-class",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "Test"
                    })
                })
            }));
            expect(_react.screen.getByRole('main')).toHaveClass('test-class');
        });
        it('should work without any props', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "No props test"
                    })
                })
            }));
            expect(_react.screen.getByText('No props test')).toBeInTheDocument();
        });
    });
    describe('Edge Cases', ()=>{
        it('should handle very large content', ()=>{
            const largeContent = 'A'.repeat(10000);
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: largeContent
                    })
                })
            }));
            expect(_react.screen.getByText(largeContent)).toBeInTheDocument();
        });
        it('should handle special characters in className', ()=>{
            (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    className: "test-class_with-special.chars:hover",
                    children: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "Special chars test"
                    })
                })
            }));
            expect(_react.screen.getByRole('main')).toHaveClass('test-class_with-special.chars:hover');
        });
        it('should handle dynamic children changes', ()=>{
            let showFirst = true;
            const { rerender } = (0, _react.render)(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: showFirst ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "First Child"
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "Second Child"
                    })
                })
            }));
            expect(_react.screen.getByText('First Child')).toBeInTheDocument();
            showFirst = false;
            rerender(/*#__PURE__*/ (0, _jsxruntime.jsx)(TestWrapper, {
                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_MainLayout.MainLayout, {
                    children: showFirst ? /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "First Child"
                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                        children: "Second Child"
                    })
                })
            }));
            expect(_react.screen.getByText('Second Child')).toBeInTheDocument();
            expect(_react.screen.queryByText('First Child')).not.toBeInTheDocument();
        });
    });
});

//# sourceMappingURL=data:application/json;base64,