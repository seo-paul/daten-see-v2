{"version":3,"names":["cov_21paxg4h5q","actualCoverage","s","CreateDashboardModal","isOpen","onClose","onSubmit","isLoading","f","formData","setFormData","_react","useState","name","description","isPublic","errors","setErrors","validateForm","newErrors","trim","b","length","Object","keys","handleSubmit","e","preventDefault","handleClose","_jsxruntime","jsxs","Fragment","jsx","className","onClick","type","_lucidereact","X","htmlFor","id","value","onChange","prev","target","placeholder","disabled","rows","checked"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/components/dashboard/CreateDashboardModal.tsx"],"sourcesContent":["'use client';\n\nimport { X } from 'lucide-react';\nimport { useState } from 'react';\n\nimport type { CreateDashboardRequest } from '@/types/dashboard.types';\n\ninterface CreateDashboardModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (data: CreateDashboardRequest) => Promise<string>;\n  isLoading: boolean;\n}\n\nexport function CreateDashboardModal({ \n  isOpen, \n  onClose, \n  onSubmit, \n  isLoading \n}: CreateDashboardModalProps): React.ReactElement | null {\n  const [formData, setFormData] = useState<CreateDashboardRequest>({\n    name: '',\n    description: '',\n    isPublic: false\n  });\n  const [errors, setErrors] = useState<Partial<CreateDashboardRequest>>({});\n\n  const validateForm = (): boolean => {\n    const newErrors: Partial<CreateDashboardRequest> = {};\n\n    if (!formData.name.trim()) {\n      newErrors.name = 'Name ist erforderlich';\n    } else if (formData.name.length < 3) {\n      newErrors.name = 'Name muss mindestens 3 Zeichen lang sein';\n    }\n\n    if (!formData.description.trim()) {\n      newErrors.description = 'Beschreibung ist erforderlich';\n    } else if (formData.description.length < 10) {\n      newErrors.description = 'Beschreibung muss mindestens 10 Zeichen lang sein';\n    }\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n    \n    if (!validateForm()) {\n      return;\n    }\n\n    try {\n      await onSubmit(formData);\n      // Reset form on success\n      setFormData({ name: '', description: '', isPublic: false });\n      setErrors({});\n      onClose();\n    } catch {\n      // Error handling is done in the parent component\n    }\n  };\n\n  const handleClose = (): void => {\n    setFormData({ name: '', description: '', isPublic: false });\n    setErrors({});\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      {/* Backdrop */}\n      <div className=\"fixed inset-0 bg-black/50 z-40\" onClick={handleClose} />\n      \n      {/* Modal */}\n      <div className=\"fixed inset-0 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-[#FDF9F3] rounded-lg shadow-xl w-full max-w-md\">\n          {/* Header */}\n          <div className=\"flex items-center justify-between p-6 border-b border-[#E6D7B8]\">\n            <h2 className=\"text-lg font-semibold text-[#3d3d3d]\">\n              Neues Dashboard erstellen\n            </h2>\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"p-2 text-[#5d5d5d] hover:text-[#3d3d3d] hover:bg-[#FBF5ED] rounded-lg transition-colors\"\n              aria-label=\"Close modal\"\n            >\n              <X className=\"w-5 h-5\" />\n            </button>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"p-6 space-y-4\">\n            {/* Name Field */}\n            <div>\n              <label htmlFor=\"dashboard-name\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Dashboard Name\n              </label>\n              <input\n                id=\"dashboard-name\"\n                type=\"text\"\n                value={formData.name}\n                onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] transition-colors ${\n                  errors.name ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"z.B. Sales Analytics\"\n                disabled={isLoading}\n              />\n              {errors.name && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\n              )}\n            </div>\n\n            {/* Description Field */}\n            <div>\n              <label htmlFor=\"dashboard-description\" className=\"block text-sm font-medium text-[#3d3d3d] mb-2\">\n                Beschreibung\n              </label>\n              <textarea\n                id=\"dashboard-description\"\n                value={formData.description}\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\n                rows={3}\n                className={`w-full px-3 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] resize-none transition-colors ${\n                  errors.description ? 'border-red-300' : 'border-[#E6D7B8]'\n                }`}\n                placeholder=\"Beschreibe das Dashboard und seinen Zweck...\"\n                disabled={isLoading}\n              />\n              {errors.description && (\n                <p className=\"mt-1 text-sm text-red-600\">{errors.description}</p>\n              )}\n            </div>\n\n            {/* Public/Private Toggle */}\n            <div className=\"flex items-center\">\n              <input\n                type=\"checkbox\"\n                id=\"isPublic\"\n                checked={formData.isPublic}\n                onChange={(e) => setFormData(prev => ({ ...prev, isPublic: e.target.checked }))}\n                className=\"w-4 h-4 text-[#2F4F73] border-[#E6D7B8] rounded focus:ring-[#2F4F73]\"\n                disabled={isLoading}\n              />\n              <label htmlFor=\"isPublic\" className=\"ml-2 text-sm text-[#3d3d3d]\">\n                Dashboard Ã¶ffentlich machen\n              </label>\n            </div>\n          </form>\n\n          {/* Footer */}\n          <div className=\"flex items-center justify-end space-x-3 p-6 border-t border-[#E6D7B8]\">\n            <button\n              type=\"button\"\n              onClick={handleClose}\n              className=\"px-4 py-2 text-sm font-medium text-[#3d3d3d] bg-[#FBF5ED] hover:bg-[#F5EFE7] rounded-lg transition-colors\"\n              disabled={isLoading}\n            >\n              Abbrechen\n            </button>\n            <button\n              type=\"submit\"\n              onClick={handleSubmit}\n              disabled={isLoading}\n              className=\"px-4 py-2 text-sm font-medium text-white bg-[#2F4F73] hover:bg-[#365C83] rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {isLoading ? 'Erstelle...' : 'Dashboard erstellen'}\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"],"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","ignoreList":[]}