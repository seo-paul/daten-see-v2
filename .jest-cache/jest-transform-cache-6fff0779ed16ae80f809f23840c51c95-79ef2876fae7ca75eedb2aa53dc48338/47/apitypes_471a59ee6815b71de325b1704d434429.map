{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/types/api.types.ts"],"sourcesContent":["import { z } from 'zod';\n\n// Base API Response Schema\nexport const ApiResponseSchema = z.object({\n  success: z.boolean(),\n  message: z.string().optional(),\n  timestamp: z.string().datetime(),\n});\n\n// Error Response Schema\nexport const ApiErrorSchema = z.object({\n  success: z.literal(false),\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n    details: z.record(z.unknown()).optional(),\n  }),\n  timestamp: z.string().datetime(),\n});\n\n// Pagination Schema\nexport const PaginationSchema = z.object({\n  page: z.number().int().positive(),\n  limit: z.number().int().positive(),\n  total: z.number().int().nonnegative(),\n  totalPages: z.number().int().nonnegative(),\n  hasNext: z.boolean(),\n  hasPrev: z.boolean(),\n});\n\n// Dashboard API Types\nexport const DashboardListResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboards: z.array(z.object({\n      id: z.string(),\n      name: z.string(),\n      description: z.string(),\n      isPublic: z.boolean(),\n      updatedAt: z.string().datetime(),\n      widgetCount: z.number().int().nonnegative(),\n    })),\n    pagination: PaginationSchema.optional(),\n  }),\n});\n\nexport const DashboardDetailResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboard: z.object({\n      id: z.string(),\n      name: z.string(),\n      description: z.string(),\n      isPublic: z.boolean(),\n      createdAt: z.string().datetime(),\n      updatedAt: z.string().datetime(),\n      widgets: z.array(z.object({\n        id: z.string(),\n        type: z.enum(['chart', 'kpi', 'text']),\n        title: z.string(),\n        position: z.object({\n          x: z.number(),\n          y: z.number(),\n          w: z.number(),\n          h: z.number(),\n        }),\n        config: z.record(z.unknown()),\n        data: z.unknown(),\n      })),\n      settings: z.object({\n        backgroundColor: z.string(),\n        gridSize: z.number().int().positive(),\n        autoRefresh: z.boolean(),\n        refreshInterval: z.number().int().positive(),\n      }),\n    }),\n  }),\n});\n\nexport const CreateDashboardRequestSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500),\n  isPublic: z.boolean().default(false),\n  settings: z.object({\n    backgroundColor: z.string().default('#f8fafc'),\n    gridSize: z.number().int().positive().default(24),\n    autoRefresh: z.boolean().default(true),\n    refreshInterval: z.number().int().positive().default(300),\n  }).optional(),\n});\n\nexport const UpdateDashboardRequestSchema = z.object({\n  id: z.string(),\n  name: z.string().min(1).max(100).optional(),\n  description: z.string().max(500).optional(),\n  isPublic: z.boolean().optional(),\n  settings: z.object({\n    backgroundColor: z.string(),\n    gridSize: z.number().int().positive(),\n    autoRefresh: z.boolean(),\n    refreshInterval: z.number().int().positive(),\n  }).partial().optional(),\n});\n\nexport const CreateDashboardResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboardId: z.string(),\n  }),\n});\n\n// Authentication API Types\nexport const LoginRequestSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(1),\n});\n\nexport const LoginResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    user: z.object({\n      id: z.string(),\n      email: z.string().email(),\n      name: z.string(),\n      role: z.enum(['user', 'admin']),\n      avatar: z.string().url().optional(),\n    }),\n    token: z.string(),\n    refreshToken: z.string(),\n    expiresAt: z.string().datetime(),\n  }),\n});\n\nexport const RefreshTokenRequestSchema = z.object({\n  refreshToken: z.string(),\n});\n\nexport const RefreshTokenResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    token: z.string(),\n    expiresAt: z.string().datetime(),\n  }),\n});\n\n// User API Types\nexport const UserProfileResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    user: z.object({\n      id: z.string(),\n      email: z.string().email(),\n      name: z.string(),\n      role: z.enum(['user', 'admin']),\n      avatar: z.string().url().optional(),\n      createdAt: z.string().datetime(),\n      updatedAt: z.string().datetime(),\n    }),\n  }),\n});\n\nexport const UpdateUserProfileRequestSchema = z.object({\n  name: z.string().min(1).max(100).optional(),\n  avatar: z.string().url().optional(),\n});\n\n// Widget API Types\nexport const CreateWidgetRequestSchema = z.object({\n  dashboardId: z.string(),\n  type: z.enum(['chart', 'kpi', 'text']),\n  title: z.string().min(1).max(100),\n  position: z.object({\n    x: z.number().int().nonnegative(),\n    y: z.number().int().nonnegative(),\n    w: z.number().int().positive(),\n    h: z.number().int().positive(),\n  }),\n  config: z.record(z.unknown()).default({}),\n});\n\nexport const UpdateWidgetRequestSchema = z.object({\n  id: z.string(),\n  title: z.string().min(1).max(100).optional(),\n  position: z.object({\n    x: z.number().int().nonnegative(),\n    y: z.number().int().nonnegative(),\n    w: z.number().int().positive(),\n    h: z.number().int().positive(),\n  }).optional(),\n  config: z.record(z.unknown()).optional(),\n});\n\n// Export TypeScript types\nexport type ApiResponse = z.infer<typeof ApiResponseSchema>;\nexport type ApiError = z.infer<typeof ApiErrorSchema>;\nexport type Pagination = z.infer<typeof PaginationSchema>;\n\nexport type DashboardListResponse = z.infer<typeof DashboardListResponseSchema>;\nexport type DashboardDetailResponse = z.infer<typeof DashboardDetailResponseSchema>;\nexport type CreateDashboardRequest = z.infer<typeof CreateDashboardRequestSchema>;\nexport type UpdateDashboardRequest = z.infer<typeof UpdateDashboardRequestSchema>;\nexport type CreateDashboardResponse = z.infer<typeof CreateDashboardResponseSchema>;\n\nexport type LoginRequest = z.infer<typeof LoginRequestSchema>;\nexport type LoginResponse = z.infer<typeof LoginResponseSchema>;\nexport type RefreshTokenRequest = z.infer<typeof RefreshTokenRequestSchema>;\nexport type RefreshTokenResponse = z.infer<typeof RefreshTokenResponseSchema>;\n\nexport type UserProfileResponse = z.infer<typeof UserProfileResponseSchema>;\nexport type UpdateUserProfileRequest = z.infer<typeof UpdateUserProfileRequestSchema>;\n\nexport type CreateWidgetRequest = z.infer<typeof CreateWidgetRequestSchema>;\nexport type UpdateWidgetRequest = z.infer<typeof UpdateWidgetRequestSchema>;"],"names":["ApiErrorSchema","ApiResponseSchema","CreateDashboardRequestSchema","CreateDashboardResponseSchema","CreateWidgetRequestSchema","DashboardDetailResponseSchema","DashboardListResponseSchema","LoginRequestSchema","LoginResponseSchema","PaginationSchema","RefreshTokenRequestSchema","RefreshTokenResponseSchema","UpdateDashboardRequestSchema","UpdateUserProfileRequestSchema","UpdateWidgetRequestSchema","UserProfileResponseSchema","z","object","success","boolean","message","string","optional","timestamp","datetime","literal","error","code","details","record","unknown","page","number","int","positive","limit","total","nonnegative","totalPages","hasNext","hasPrev","extend","data","dashboards","array","id","name","description","isPublic","updatedAt","widgetCount","pagination","dashboard","createdAt","widgets","type","enum","title","position","x","y","w","h","config","settings","backgroundColor","gridSize","autoRefresh","refreshInterval","min","max","default","partial","dashboardId","email","password","user","role","avatar","url","token","refreshToken","expiresAt"],"mappings":";;;;;;;;;;;QAUaA;eAAAA;;QAPAC;eAAAA;;QA0EAC;eAAAA;;QAyBAC;eAAAA;;QA2DAC;eAAAA;;QApHAC;eAAAA;;QAdAC;eAAAA;;QA8EAC;eAAAA;;QAKAC;eAAAA;;QA7FAC;eAAAA;;QA4GAC;eAAAA;;QAIAC;eAAAA;;QA5CAC;eAAAA;;QAkEAC;eAAAA;;QAmBAC;eAAAA;;QAjCAC;eAAAA;;;qBA7IK;AAGX,MAAMd,oBAAoBe,MAAC,CAACC,MAAM,CAAC;IACxCC,SAASF,MAAC,CAACG,OAAO;IAClBC,SAASJ,MAAC,CAACK,MAAM,GAAGC,QAAQ;IAC5BC,WAAWP,MAAC,CAACK,MAAM,GAAGG,QAAQ;AAChC;AAGO,MAAMxB,iBAAiBgB,MAAC,CAACC,MAAM,CAAC;IACrCC,SAASF,MAAC,CAACS,OAAO,CAAC;IACnBC,OAAOV,MAAC,CAACC,MAAM,CAAC;QACdU,MAAMX,MAAC,CAACK,MAAM;QACdD,SAASJ,MAAC,CAACK,MAAM;QACjBO,SAASZ,MAAC,CAACa,MAAM,CAACb,MAAC,CAACc,OAAO,IAAIR,QAAQ;IACzC;IACAC,WAAWP,MAAC,CAACK,MAAM,GAAGG,QAAQ;AAChC;AAGO,MAAMf,mBAAmBO,MAAC,CAACC,MAAM,CAAC;IACvCc,MAAMf,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;IAC/BC,OAAOnB,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;IAChCE,OAAOpB,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;IACnCC,YAAYtB,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;IACxCE,SAASvB,MAAC,CAACG,OAAO;IAClBqB,SAASxB,MAAC,CAACG,OAAO;AACpB;AAGO,MAAMb,8BAA8BL,kBAAkBwC,MAAM,CAAC;IAClEC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACb0B,YAAY3B,MAAC,CAAC4B,KAAK,CAAC5B,MAAC,CAACC,MAAM,CAAC;YAC3B4B,IAAI7B,MAAC,CAACK,MAAM;YACZyB,MAAM9B,MAAC,CAACK,MAAM;YACd0B,aAAa/B,MAAC,CAACK,MAAM;YACrB2B,UAAUhC,MAAC,CAACG,OAAO;YACnB8B,WAAWjC,MAAC,CAACK,MAAM,GAAGG,QAAQ;YAC9B0B,aAAalC,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;QAC3C;QACAc,YAAY1C,iBAAiBa,QAAQ;IACvC;AACF;AAEO,MAAMjB,gCAAgCJ,kBAAkBwC,MAAM,CAAC;IACpEC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACbmC,WAAWpC,MAAC,CAACC,MAAM,CAAC;YAClB4B,IAAI7B,MAAC,CAACK,MAAM;YACZyB,MAAM9B,MAAC,CAACK,MAAM;YACd0B,aAAa/B,MAAC,CAACK,MAAM;YACrB2B,UAAUhC,MAAC,CAACG,OAAO;YACnBkC,WAAWrC,MAAC,CAACK,MAAM,GAAGG,QAAQ;YAC9ByB,WAAWjC,MAAC,CAACK,MAAM,GAAGG,QAAQ;YAC9B8B,SAAStC,MAAC,CAAC4B,KAAK,CAAC5B,MAAC,CAACC,MAAM,CAAC;gBACxB4B,IAAI7B,MAAC,CAACK,MAAM;gBACZkC,MAAMvC,MAAC,CAACwC,IAAI,CAAC;oBAAC;oBAAS;oBAAO;iBAAO;gBACrCC,OAAOzC,MAAC,CAACK,MAAM;gBACfqC,UAAU1C,MAAC,CAACC,MAAM,CAAC;oBACjB0C,GAAG3C,MAAC,CAACgB,MAAM;oBACX4B,GAAG5C,MAAC,CAACgB,MAAM;oBACX6B,GAAG7C,MAAC,CAACgB,MAAM;oBACX8B,GAAG9C,MAAC,CAACgB,MAAM;gBACb;gBACA+B,QAAQ/C,MAAC,CAACa,MAAM,CAACb,MAAC,CAACc,OAAO;gBAC1BY,MAAM1B,MAAC,CAACc,OAAO;YACjB;YACAkC,UAAUhD,MAAC,CAACC,MAAM,CAAC;gBACjBgD,iBAAiBjD,MAAC,CAACK,MAAM;gBACzB6C,UAAUlD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;gBACnCiC,aAAanD,MAAC,CAACG,OAAO;gBACtBiD,iBAAiBpD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;YAC5C;QACF;IACF;AACF;AAEO,MAAMhC,+BAA+Bc,MAAC,CAACC,MAAM,CAAC;IACnD6B,MAAM9B,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC,GAAGC,GAAG,CAAC;IAC5BvB,aAAa/B,MAAC,CAACK,MAAM,GAAGiD,GAAG,CAAC;IAC5BtB,UAAUhC,MAAC,CAACG,OAAO,GAAGoD,OAAO,CAAC;IAC9BP,UAAUhD,MAAC,CAACC,MAAM,CAAC;QACjBgD,iBAAiBjD,MAAC,CAACK,MAAM,GAAGkD,OAAO,CAAC;QACpCL,UAAUlD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ,GAAGqC,OAAO,CAAC;QAC9CJ,aAAanD,MAAC,CAACG,OAAO,GAAGoD,OAAO,CAAC;QACjCH,iBAAiBpD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ,GAAGqC,OAAO,CAAC;IACvD,GAAGjD,QAAQ;AACb;AAEO,MAAMV,+BAA+BI,MAAC,CAACC,MAAM,CAAC;IACnD4B,IAAI7B,MAAC,CAACK,MAAM;IACZyB,MAAM9B,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC,GAAGC,GAAG,CAAC,KAAKhD,QAAQ;IACzCyB,aAAa/B,MAAC,CAACK,MAAM,GAAGiD,GAAG,CAAC,KAAKhD,QAAQ;IACzC0B,UAAUhC,MAAC,CAACG,OAAO,GAAGG,QAAQ;IAC9B0C,UAAUhD,MAAC,CAACC,MAAM,CAAC;QACjBgD,iBAAiBjD,MAAC,CAACK,MAAM;QACzB6C,UAAUlD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;QACnCiC,aAAanD,MAAC,CAACG,OAAO;QACtBiD,iBAAiBpD,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;IAC5C,GAAGsC,OAAO,GAAGlD,QAAQ;AACvB;AAEO,MAAMnB,gCAAgCF,kBAAkBwC,MAAM,CAAC;IACpEC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACbwD,aAAazD,MAAC,CAACK,MAAM;IACvB;AACF;AAGO,MAAMd,qBAAqBS,MAAC,CAACC,MAAM,CAAC;IACzCyD,OAAO1D,MAAC,CAACK,MAAM,GAAGqD,KAAK;IACvBC,UAAU3D,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC;AAC3B;AAEO,MAAM7D,sBAAsBP,kBAAkBwC,MAAM,CAAC;IAC1DC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACb2D,MAAM5D,MAAC,CAACC,MAAM,CAAC;YACb4B,IAAI7B,MAAC,CAACK,MAAM;YACZqD,OAAO1D,MAAC,CAACK,MAAM,GAAGqD,KAAK;YACvB5B,MAAM9B,MAAC,CAACK,MAAM;YACdwD,MAAM7D,MAAC,CAACwC,IAAI,CAAC;gBAAC;gBAAQ;aAAQ;YAC9BsB,QAAQ9D,MAAC,CAACK,MAAM,GAAG0D,GAAG,GAAGzD,QAAQ;QACnC;QACA0D,OAAOhE,MAAC,CAACK,MAAM;QACf4D,cAAcjE,MAAC,CAACK,MAAM;QACtB6D,WAAWlE,MAAC,CAACK,MAAM,GAAGG,QAAQ;IAChC;AACF;AAEO,MAAMd,4BAA4BM,MAAC,CAACC,MAAM,CAAC;IAChDgE,cAAcjE,MAAC,CAACK,MAAM;AACxB;AAEO,MAAMV,6BAA6BV,kBAAkBwC,MAAM,CAAC;IACjEC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACb+D,OAAOhE,MAAC,CAACK,MAAM;QACf6D,WAAWlE,MAAC,CAACK,MAAM,GAAGG,QAAQ;IAChC;AACF;AAGO,MAAMT,4BAA4Bd,kBAAkBwC,MAAM,CAAC;IAChEC,MAAM1B,MAAC,CAACC,MAAM,CAAC;QACb2D,MAAM5D,MAAC,CAACC,MAAM,CAAC;YACb4B,IAAI7B,MAAC,CAACK,MAAM;YACZqD,OAAO1D,MAAC,CAACK,MAAM,GAAGqD,KAAK;YACvB5B,MAAM9B,MAAC,CAACK,MAAM;YACdwD,MAAM7D,MAAC,CAACwC,IAAI,CAAC;gBAAC;gBAAQ;aAAQ;YAC9BsB,QAAQ9D,MAAC,CAACK,MAAM,GAAG0D,GAAG,GAAGzD,QAAQ;YACjC+B,WAAWrC,MAAC,CAACK,MAAM,GAAGG,QAAQ;YAC9ByB,WAAWjC,MAAC,CAACK,MAAM,GAAGG,QAAQ;QAChC;IACF;AACF;AAEO,MAAMX,iCAAiCG,MAAC,CAACC,MAAM,CAAC;IACrD6B,MAAM9B,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC,GAAGC,GAAG,CAAC,KAAKhD,QAAQ;IACzCwD,QAAQ9D,MAAC,CAACK,MAAM,GAAG0D,GAAG,GAAGzD,QAAQ;AACnC;AAGO,MAAMlB,4BAA4BY,MAAC,CAACC,MAAM,CAAC;IAChDwD,aAAazD,MAAC,CAACK,MAAM;IACrBkC,MAAMvC,MAAC,CAACwC,IAAI,CAAC;QAAC;QAAS;QAAO;KAAO;IACrCC,OAAOzC,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC,GAAGC,GAAG,CAAC;IAC7BZ,UAAU1C,MAAC,CAACC,MAAM,CAAC;QACjB0C,GAAG3C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;QAC/BuB,GAAG5C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;QAC/BwB,GAAG7C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;QAC5B4B,GAAG9C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;IAC9B;IACA6B,QAAQ/C,MAAC,CAACa,MAAM,CAACb,MAAC,CAACc,OAAO,IAAIyC,OAAO,CAAC,CAAC;AACzC;AAEO,MAAMzD,4BAA4BE,MAAC,CAACC,MAAM,CAAC;IAChD4B,IAAI7B,MAAC,CAACK,MAAM;IACZoC,OAAOzC,MAAC,CAACK,MAAM,GAAGgD,GAAG,CAAC,GAAGC,GAAG,CAAC,KAAKhD,QAAQ;IAC1CoC,UAAU1C,MAAC,CAACC,MAAM,CAAC;QACjB0C,GAAG3C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;QAC/BuB,GAAG5C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGI,WAAW;QAC/BwB,GAAG7C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;QAC5B4B,GAAG9C,MAAC,CAACgB,MAAM,GAAGC,GAAG,GAAGC,QAAQ;IAC9B,GAAGZ,QAAQ;IACXyC,QAAQ/C,MAAC,CAACa,MAAM,CAACb,MAAC,CAACc,OAAO,IAAIR,QAAQ;AACxC"}