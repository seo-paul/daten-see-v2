e7899ecdf636f31225e0a9957852b4bf
'use client';
"use strict";

/* istanbul ignore next */
function cov_11en17uv2n() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/query/provider.tsx";
  var hash = "eead717e932b92ed5ce1d51ff2a32e087abe7a48";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/query/provider.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 20
        },
        end: {
          line: 13,
          column: 52
        }
      },
      "5": {
        start: {
          line: 14,
          column: 32
        },
        end: {
          line: 14,
          column: 95
        }
      },
      "6": {
        start: {
          line: 15,
          column: 16
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      },
      "8": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 28,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 39
          },
          end: {
            line: 20,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "QueryProvider",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 22
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 29,
            column: 1
          }
        },
        line: 21
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 19,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 17,
            column: 35
          },
          end: {
            line: 17,
            column: 38
          }
        }, {
          start: {
            line: 17,
            column: 41
          },
          end: {
            line: 19,
            column: 5
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 17,
            column: 11
          },
          end: {
            line: 17,
            column: 14
          }
        }, {
          start: {
            line: 17,
            column: 18
          },
          end: {
            line: 17,
            column: 32
          }
        }],
        line: 17
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 111
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 12
          },
          end: {
            line: 26,
            column: 50
          }
        }, {
          start: {
            line: 26,
            column: 68
          },
          end: {
            line: 26,
            column: 111
          }
        }],
        line: 26
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/query/provider.tsx"],
      sourcesContent: ["'use client';\n\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { ReactNode } from 'react';\n\nimport BISaaSQueryDevTools from '@/lib/tanstack-query/devtools';\n\nimport { queryClient } from './client';\n\ninterface QueryProviderProps {\n  children: ReactNode;\n}\n\n/**\n * TanStack Query Provider with Enhanced DevTools\n * Wraps the application with Query Client and advanced development tools\n */\nexport function QueryProvider({ children }: QueryProviderProps): React.ReactElement {\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {/* Enhanced DevTools only in development */}\n      {process.env.NODE_ENV === 'development' && <BISaaSQueryDevTools />}\n    </QueryClientProvider>\n  );\n}"],
      names: ["QueryProvider", "children", "QueryClientProvider", "client", "queryClient", "process", "env", "NODE_ENV", "BISaaSQueryDevTools"],
      mappings: "AAAA;;;;;+BAiBgBA;;;eAAAA;;;;4BAfoB;iEAGJ;wBAEJ;;;;;;AAUrB,SAASA,cAAc,EAAEC,QAAQ,EAAsB;IAC5D,qBACE,sBAACC,+BAAmB;QAACC,QAAQC,mBAAW;;YACrCH;YAEAI,QAAQC,GAAG,CAACC,QAAQ,KAAK,+BAAiB,qBAACC,iBAAmB;;;AAGrE"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "eead717e932b92ed5ce1d51ff2a32e087abe7a48"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_11en17uv2n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_11en17uv2n();
cov_11en17uv2n().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_11en17uv2n().s[1]++;
Object.defineProperty(exports, "QueryProvider", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_11en17uv2n().f[0]++;
    cov_11en17uv2n().s[2]++;
    return QueryProvider;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_11en17uv2n().s[3]++, require("react/jsx-runtime"));
const _reactquery =
/* istanbul ignore next */
(cov_11en17uv2n().s[4]++, require("@tanstack/react-query"));
const _devtools =
/* istanbul ignore next */
(/*#__PURE__*/cov_11en17uv2n().s[5]++, _interop_require_default(require("../tanstack-query/devtools")));
const _client =
/* istanbul ignore next */
(cov_11en17uv2n().s[6]++, require("./client"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_11en17uv2n().f[1]++;
  cov_11en17uv2n().s[7]++;
  return /* istanbul ignore next */(cov_11en17uv2n().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_11en17uv2n().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_11en17uv2n().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_11en17uv2n().b[0][1]++, {
    default: obj
  });
}
function QueryProvider({
  children
}) {
  /* istanbul ignore next */
  cov_11en17uv2n().f[2]++;
  cov_11en17uv2n().s[8]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_reactquery.QueryClientProvider, {
    client: _client.queryClient,
    children: [children,
    /* istanbul ignore next */
    (cov_11en17uv2n().b[2][0]++, process.env.NODE_ENV === 'development') &&
    /* istanbul ignore next */
    (cov_11en17uv2n().b[2][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_devtools.default, {}))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJRdWVyeVByb3ZpZGVyIiwiY2hpbGRyZW4iLCJjb3ZfMTFlbjE3dXYybiIsImYiLCJzIiwiX2pzeHJ1bnRpbWUiLCJqc3hzIiwiX3JlYWN0cXVlcnkiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiY2xpZW50IiwiX2NsaWVudCIsInF1ZXJ5Q2xpZW50IiwiYiIsInByb2Nlc3MiLCJlbnYiLCJOT0RFX0VOViIsImpzeCIsIl9kZXZ0b29scyIsImRlZmF1bHQiXSwic291cmNlcyI6WyIvVXNlcnMvendlaWdlbi9TaXRlcy9kYXRlbi1zZWUtdjIvc3JjL2xpYi9xdWVyeS9wcm92aWRlci50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgeyBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCB7IFJlYWN0Tm9kZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IEJJU2FhU1F1ZXJ5RGV2VG9vbHMgZnJvbSAnQC9saWIvdGFuc3RhY2stcXVlcnkvZGV2dG9vbHMnO1xuXG5pbXBvcnQgeyBxdWVyeUNsaWVudCB9IGZyb20gJy4vY2xpZW50JztcblxuaW50ZXJmYWNlIFF1ZXJ5UHJvdmlkZXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59XG5cbi8qKlxuICogVGFuU3RhY2sgUXVlcnkgUHJvdmlkZXIgd2l0aCBFbmhhbmNlZCBEZXZUb29sc1xuICogV3JhcHMgdGhlIGFwcGxpY2F0aW9uIHdpdGggUXVlcnkgQ2xpZW50IGFuZCBhZHZhbmNlZCBkZXZlbG9wbWVudCB0b29sc1xuICovXG5leHBvcnQgZnVuY3Rpb24gUXVlcnlQcm92aWRlcih7IGNoaWxkcmVuIH06IFF1ZXJ5UHJvdmlkZXJQcm9wcyk6IFJlYWN0LlJlYWN0RWxlbWVudCB7XG4gIHJldHVybiAoXG4gICAgPFF1ZXJ5Q2xpZW50UHJvdmlkZXIgY2xpZW50PXtxdWVyeUNsaWVudH0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgICB7LyogRW5oYW5jZWQgRGV2VG9vbHMgb25seSBpbiBkZXZlbG9wbWVudCAqL31cbiAgICAgIHtwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyAmJiA8QklTYWFTUXVlcnlEZXZUb29scyAvPn1cbiAgICA8L1F1ZXJ5Q2xpZW50UHJvdmlkZXI+XG4gICk7XG59Il0sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7K0JBaUJnQjs7Ozs7O1dBQUFBLGFBQUE7Ozs7Ozs7O2tDQWZvQjs7O3dFQUdKOzs7a0NBRUo7Ozs7Ozs7Ozs7Ozs7OztBQVVyQixTQUFTQSxjQUFjO0VBQUVDO0FBQVEsQ0FBc0I7RUFBQTtFQUFBQyxjQUFBLEdBQUFDLENBQUE7RUFBQUQsY0FBQSxHQUFBRSxDQUFBO0VBQzVELG9CQUNFLElBQUFDLFdBQUEsQ0FBQUMsSUFBQSxFQUFDQyxXQUFBLENBQUFDLG1CQUFtQjtJQUFDQyxNQUFBLEVBQVFDLE9BQUEsQ0FBQUMsV0FBVztlQUNyQ1YsUUFBQTtJQUVBO0lBQUEsQ0FBQUMsY0FBQSxHQUFBVSxDQUFBLFVBQUFDLE9BQUEsQ0FBUUMsR0FBRyxDQUFDQyxRQUFRLEtBQUs7SUFBQTtJQUFBLENBQUFiLGNBQUEsR0FBQVUsQ0FBQSx1QkFBaUIsSUFBQVAsV0FBQSxDQUFBVyxHQUFBLEVBQUNDLFNBQUEsQ0FBQUMsT0FBbUI7O0FBR3JFIiwiaWdub3JlTGlzdCI6W119