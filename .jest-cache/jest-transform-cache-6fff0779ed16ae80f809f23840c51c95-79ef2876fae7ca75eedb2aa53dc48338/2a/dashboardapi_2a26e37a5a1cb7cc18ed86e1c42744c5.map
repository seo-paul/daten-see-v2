{"version":3,"names":["cov_5xcv0t4ss","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","dashboardApi","resetMockDashboards","initialMockDashboards","id","description","isPublic","updatedAt","Date","widgetCount","mockDashboards","map","d","getAll","Promise","resolve","setTimeout","getById","dashboard","find","Error","createdAt","widgets","settings","backgroundColor","gridSize","autoRefresh","refreshInterval","create","data","newDashboard","now","push","dashboardId","update","index","findIndex","existingDashboard","delete","splice"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/lib/api/dashboard.api.ts"],"sourcesContent":["/**\n * Dashboard API Client\n * RESTful API operations for dashboard management\n */\n\nimport type { Dashboard, DashboardListItem, CreateDashboardRequest, UpdateDashboardRequest } from '@/types/dashboard.types';\n\n// Initial mock data for development - will be replaced with real API calls\nconst initialMockDashboards: DashboardListItem[] = [\n  {\n    id: 'dash-1',\n    name: 'Sales Analytics',\n    description: 'Comprehensive sales performance tracking',\n    isPublic: false,\n    updatedAt: new Date('2024-01-15T10:30:00Z'),\n    widgetCount: 5,\n  },\n  {\n    id: 'dash-2', \n    name: 'Marketing Campaign',\n    description: 'Track campaign performance across channels',\n    isPublic: true,\n    updatedAt: new Date('2024-01-14T16:45:00Z'),\n    widgetCount: 3,\n  },\n  {\n    id: 'dash-3',\n    name: 'Customer Insights',\n    description: 'Customer behavior and demographics analysis',\n    isPublic: false,\n    updatedAt: new Date('2024-01-13T09:15:00Z'),\n    widgetCount: 4,\n  },\n];\n\n// Working copy of mock data that can be mutated\nlet mockDashboards = [...initialMockDashboards];\n\n// Reset function for testing\nexport const resetMockDashboards = (): void => {\n  mockDashboards = initialMockDashboards.map(d => ({ ...d }));\n};\n\nexport const dashboardApi = {\n  /**\n   * Get all dashboards\n   */\n  async getAll(): Promise<DashboardListItem[]> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return [...mockDashboards];\n  },\n\n  /**\n   * Get dashboard by ID\n   */\n  async getById(id: string): Promise<Dashboard> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    const dashboard = mockDashboards.find(d => d.id === id);\n    if (!dashboard) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    // Convert to full dashboard object\n    return {\n      ...dashboard,\n      createdAt: new Date('2024-01-01T10:00:00Z'),\n      widgets: [],\n      settings: {\n        backgroundColor: '#f8fafc',\n        gridSize: 24,\n        autoRefresh: true,\n        refreshInterval: 300,\n      },\n    };\n  },\n\n  /**\n   * Create new dashboard\n   */\n  async create(data: CreateDashboardRequest): Promise<{ dashboardId: string }> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    const newDashboard: DashboardListItem = {\n      id: `dash-${Date.now()}`,\n      name: data.name,\n      description: data.description,\n      isPublic: data.isPublic,\n      updatedAt: new Date(),\n      widgetCount: 0,\n    };\n\n    mockDashboards.push(newDashboard);\n    \n    return { dashboardId: newDashboard.id };\n  },\n\n  /**\n   * Update existing dashboard\n   */\n  async update(id: string, data: UpdateDashboardRequest): Promise<void> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 600));\n    \n    const index = mockDashboards.findIndex(d => d.id === id);\n    if (index === -1) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    const existingDashboard = mockDashboards[index];\n    if (!existingDashboard) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n    \n    mockDashboards[index] = {\n      ...existingDashboard,\n      ...data,\n      id: existingDashboard.id, // Preserve required id\n      name: data.name ?? existingDashboard.name,\n      description: data.description ?? existingDashboard.description,\n      isPublic: data.isPublic ?? existingDashboard.isPublic,\n      updatedAt: new Date(),\n      widgetCount: existingDashboard.widgetCount, // Preserve required widgetCount\n    };\n  },\n\n  /**\n   * Delete dashboard\n   */\n  async delete(id: string): Promise<void> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    const index = mockDashboards.findIndex(d => d.id === id);\n    if (index === -1) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    mockDashboards.splice(index, 1);\n  },\n};"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA3B,IAAA;EAAA;EAAA,IAAA4B,QAAA,GAAA3B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAyB,QAAA,CAAA7B,IAAA,KAAA6B,QAAA,CAAA7B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA4B,QAAA,CAAA7B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAyB,cAAA,GAAAD,QAAA,CAAA7B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAwCY+B,aAAA;IAAA;IAAAhC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAY,YAAA;;MAJAC,oBAAA;IAAA;IAAAjC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;WAAAa,mBAAA;;;AAhCb;AACA,MAAMC,qBAAA;AAAA;AAAA,CAAAlC,aAAA,GAAAoB,CAAA,OAA6C,CACjD;EACEe,EAAA,EAAI;EACJtB,IAAA,EAAM;EACNuB,WAAA,EAAa;EACbC,QAAA,EAAU;EACVC,SAAA,EAAW,IAAIC,IAAA,CAAK;EACpBC,WAAA,EAAa;AACf,GACA;EACEL,EAAA,EAAI;EACJtB,IAAA,EAAM;EACNuB,WAAA,EAAa;EACbC,QAAA,EAAU;EACVC,SAAA,EAAW,IAAIC,IAAA,CAAK;EACpBC,WAAA,EAAa;AACf,GACA;EACEL,EAAA,EAAI;EACJtB,IAAA,EAAM;EACNuB,WAAA,EAAa;EACbC,QAAA,EAAU;EACVC,SAAA,EAAW,IAAIC,IAAA,CAAK;EACpBC,WAAA,EAAa;AACf,EACD;AAED;AACA,IAAIC,cAAA;AAAA;AAAA,CAAAzC,aAAA,GAAAoB,CAAA,OAAiB,C,GAAIc,qBAAA,CAAsB;AAAA;AAAAlC,aAAA,GAAAoB,CAAA;AAGxC,MAAMa,mBAAA,GAAsBA,CAAA;EAAA;EAAAjC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EACjCqB,cAAA,GAAiBP,qBAAA,CAAsBQ,GAAG,CAACC,CAAA,IAAM;IAAA;IAAA3C,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IAAA;MAAE,GAAGuB;IAAE;EAAA;AAC1D;AAEO,MAAMX,YAAA;AAAA;AAAA,CAAAhC,aAAA,GAAAoB,CAAA,QAAe;EAC1B;;;EAGA,MAAMwB,OAAA;IAAA;IAAA5C,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACJ;IACA,MAAM,IAAIyB,OAAA,CAAQC,OAAA,IAAW;MAAA;MAAA9C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA2B,UAAA,CAAWD,OAAA,EAAS;IAAA;IAAA;IAAA9C,aAAA,GAAAoB,CAAA;IACjD,OAAO,C,GAAIqB,cAAA,CAAe;EAC5B;EAEA;;;EAGA,MAAMO,QAAQb,EAAU;IAAA;IAAAnC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACtB;IACA,MAAM,IAAIyB,OAAA,CAAQC,OAAA,IAAW;MAAA;MAAA9C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA2B,UAAA,CAAWD,OAAA,EAAS;IAAA;IAEjD,MAAMG,SAAA;IAAA;IAAA,CAAAjD,aAAA,GAAAoB,CAAA,QAAYqB,cAAA,CAAeS,IAAI,CAACP,CAAA,IAAK;MAAA;MAAA3C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAuB,CAAA,CAAER,EAAE,KAAKA,EAAA;IAAA;IAAA;IAAAnC,aAAA,GAAAoB,CAAA;IACpD,IAAI,CAAC6B,SAAA,EAAW;MAAA;MAAAjD,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACd,MAAM,IAAI+B,KAAA,CAAM,qBAAqBhB,EAAA,YAAc;IACrD;IAAA;IAAA;MAAAnC,aAAA,GAAAsB,CAAA;IAAA;IAEA;IAAAtB,aAAA,GAAAoB,CAAA;IACA,OAAO;MACL,GAAG6B,SAAS;MACZG,SAAA,EAAW,IAAIb,IAAA,CAAK;MACpBc,OAAA,EAAS,EAAE;MACXC,QAAA,EAAU;QACRC,eAAA,EAAiB;QACjBC,QAAA,EAAU;QACVC,WAAA,EAAa;QACbC,eAAA,EAAiB;MACnB;IACF;EACF;EAEA;;;EAGA,MAAMC,OAAOC,IAA4B;IAAA;IAAA5D,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACvC;IACA,MAAM,IAAIyB,OAAA,CAAQC,OAAA,IAAW;MAAA;MAAA9C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA2B,UAAA,CAAWD,OAAA,EAAS;IAAA;IAEjD,MAAMe,YAAA;IAAA;IAAA,CAAA7D,aAAA,GAAAoB,CAAA,QAAkC;MACtCe,EAAA,EAAI,QAAQI,IAAA,CAAKuB,GAAG,IAAI;MACxBjD,IAAA,EAAM+C,IAAA,CAAK/C,IAAI;MACfuB,WAAA,EAAawB,IAAA,CAAKxB,WAAW;MAC7BC,QAAA,EAAUuB,IAAA,CAAKvB,QAAQ;MACvBC,SAAA,EAAW,IAAIC,IAAA;MACfC,WAAA,EAAa;IACf;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAEAqB,cAAA,CAAesB,IAAI,CAACF,YAAA;IAAA;IAAA7D,aAAA,GAAAoB,CAAA;IAEpB,OAAO;MAAE4C,WAAA,EAAaH,YAAA,CAAa1B;IAAG;EACxC;EAEA;;;EAGA,MAAM8B,OAAO9B,EAAU,EAAEyB,IAA4B;IAAA;IAAA5D,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACnD;IACA,MAAM,IAAIyB,OAAA,CAAQC,OAAA,IAAW;MAAA;MAAA9C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA2B,UAAA,CAAWD,OAAA,EAAS;IAAA;IAEjD,MAAMoB,KAAA;IAAA;IAAA,CAAAlE,aAAA,GAAAoB,CAAA,QAAQqB,cAAA,CAAe0B,SAAS,CAACxB,CAAA,IAAK;MAAA;MAAA3C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAuB,CAAA,CAAER,EAAE,KAAKA,EAAA;IAAA;IAAA;IAAAnC,aAAA,GAAAoB,CAAA;IACrD,IAAI8C,KAAA,KAAU,CAAC,GAAG;MAAA;MAAAlE,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChB,MAAM,IAAI+B,KAAA,CAAM,qBAAqBhB,EAAA,YAAc;IACrD;IAAA;IAAA;MAAAnC,aAAA,GAAAsB,CAAA;IAAA;IAEA,MAAM8C,iBAAA;IAAA;IAAA,CAAApE,aAAA,GAAAoB,CAAA,QAAoBqB,cAAc,CAACyB,KAAA,CAAM;IAAA;IAAAlE,aAAA,GAAAoB,CAAA;IAC/C,IAAI,CAACgD,iBAAA,EAAmB;MAAA;MAAApE,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MACtB,MAAM,IAAI+B,KAAA,CAAM,qBAAqBhB,EAAA,YAAc;IACrD;IAAA;IAAA;MAAAnC,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEAqB,cAAc,CAACyB,KAAA,CAAM,GAAG;MACtB,GAAGE,iBAAiB;MACpB,GAAGR,IAAI;MACPzB,EAAA,EAAIiC,iBAAA,CAAkBjC,EAAE;MACxBtB,IAAA;MAAM;MAAA,CAAAb,aAAA,GAAAsB,CAAA,UAAAsC,IAAA,CAAK/C,IAAI;MAAA;MAAA,CAAAb,aAAA,GAAAsB,CAAA,UAAI8C,iBAAA,CAAkBvD,IAAI;MACzCuB,WAAA;MAAa;MAAA,CAAApC,aAAA,GAAAsB,CAAA,UAAAsC,IAAA,CAAKxB,WAAW;MAAA;MAAA,CAAApC,aAAA,GAAAsB,CAAA,UAAI8C,iBAAA,CAAkBhC,WAAW;MAC9DC,QAAA;MAAU;MAAA,CAAArC,aAAA,GAAAsB,CAAA,UAAAsC,IAAA,CAAKvB,QAAQ;MAAA;MAAA,CAAArC,aAAA,GAAAsB,CAAA,UAAI8C,iBAAA,CAAkB/B,QAAQ;MACrDC,SAAA,EAAW,IAAIC,IAAA;MACfC,WAAA,EAAa4B,iBAAA,CAAkB5B;IACjC;EACF;EAEA;;;EAGA,MAAM6B,OAAOlC,EAAU;IAAA;IAAAnC,aAAA,GAAAqB,CAAA;IAAArB,aAAA,GAAAoB,CAAA;IACrB;IACA,MAAM,IAAIyB,OAAA,CAAQC,OAAA,IAAW;MAAA;MAAA9C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAA2B,UAAA,CAAWD,OAAA,EAAS;IAAA;IAEjD,MAAMoB,KAAA;IAAA;IAAA,CAAAlE,aAAA,GAAAoB,CAAA,QAAQqB,cAAA,CAAe0B,SAAS,CAACxB,CAAA,IAAK;MAAA;MAAA3C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAAA,OAAAuB,CAAA,CAAER,EAAE,KAAKA,EAAA;IAAA;IAAA;IAAAnC,aAAA,GAAAoB,CAAA;IACrD,IAAI8C,KAAA,KAAU,CAAC,GAAG;MAAA;MAAAlE,aAAA,GAAAsB,CAAA;MAAAtB,aAAA,GAAAoB,CAAA;MAChB,MAAM,IAAI+B,KAAA,CAAM,qBAAqBhB,EAAA,YAAc;IACrD;IAAA;IAAA;MAAAnC,aAAA,GAAAsB,CAAA;IAAA;IAAAtB,aAAA,GAAAoB,CAAA;IAEAqB,cAAA,CAAe6B,MAAM,CAACJ,KAAA,EAAO;EAC/B;AACF","ignoreList":[]}