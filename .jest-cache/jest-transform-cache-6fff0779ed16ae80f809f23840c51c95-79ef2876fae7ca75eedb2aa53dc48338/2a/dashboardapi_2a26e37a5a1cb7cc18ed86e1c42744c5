bef18a1eb3b01c7c692c0aa55a5b1e2b
/**
 * Dashboard API Client
 * RESTful API operations for dashboard management
 */"use strict";

/* istanbul ignore next */
function cov_5xcv0t4ss() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/lib/api/dashboard.api.ts";
  var hash = "6356ce5f41388238b0c733b70e1149e8454c959c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/lib/api/dashboard.api.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 28
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 35
        }
      },
      "6": {
        start: {
          line: 23,
          column: 30
        },
        end: {
          line: 48,
          column: 1
        }
      },
      "7": {
        start: {
          line: 50,
          column: 21
        },
        end: {
          line: 52,
          column: 1
        }
      },
      "8": {
        start: {
          line: 53,
          column: 28
        },
        end: {
          line: 57,
          column: 1
        }
      },
      "9": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 56,
          column: 12
        }
      },
      "10": {
        start: {
          line: 54,
          column: 53
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "11": {
        start: {
          line: 58,
          column: 21
        },
        end: {
          line: 143,
          column: 1
        }
      },
      "12": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 63
        }
      },
      "13": {
        start: {
          line: 63,
          column: 37
        },
        end: {
          line: 63,
          column: 61
        }
      },
      "14": {
        start: {
          line: 64,
          column: 8
        },
        end: {
          line: 66,
          column: 10
        }
      },
      "15": {
        start: {
          line: 72,
          column: 8
        },
        end: {
          line: 72,
          column: 63
        }
      },
      "16": {
        start: {
          line: 72,
          column: 37
        },
        end: {
          line: 72,
          column: 61
        }
      },
      "17": {
        start: {
          line: 73,
          column: 26
        },
        end: {
          line: 73,
          column: 63
        }
      },
      "18": {
        start: {
          line: 73,
          column: 51
        },
        end: {
          line: 73,
          column: 62
        }
      },
      "19": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 76,
          column: 9
        }
      },
      "20": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 65
        }
      },
      "21": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "22": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 63
        }
      },
      "23": {
        start: {
          line: 94,
          column: 37
        },
        end: {
          line: 94,
          column: 61
        }
      },
      "24": {
        start: {
          line: 95,
          column: 29
        },
        end: {
          line: 102,
          column: 9
        }
      },
      "25": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 42
        }
      },
      "26": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 106,
          column: 10
        }
      },
      "27": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 63
        }
      },
      "28": {
        start: {
          line: 112,
          column: 37
        },
        end: {
          line: 112,
          column: 61
        }
      },
      "29": {
        start: {
          line: 113,
          column: 22
        },
        end: {
          line: 113,
          column: 64
        }
      },
      "30": {
        start: {
          line: 113,
          column: 52
        },
        end: {
          line: 113,
          column: 63
        }
      },
      "31": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "32": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 65
        }
      },
      "33": {
        start: {
          line: 117,
          column: 34
        },
        end: {
          line: 117,
          column: 55
        }
      },
      "34": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 120,
          column: 9
        }
      },
      "35": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 65
        }
      },
      "36": {
        start: {
          line: 121,
          column: 8
        },
        end: {
          line: 130,
          column: 10
        }
      },
      "37": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 63
        }
      },
      "38": {
        start: {
          line: 136,
          column: 37
        },
        end: {
          line: 136,
          column: 61
        }
      },
      "39": {
        start: {
          line: 137,
          column: 22
        },
        end: {
          line: 137,
          column: 64
        }
      },
      "40": {
        start: {
          line: 137,
          column: 52
        },
        end: {
          line: 137,
          column: 63
        }
      },
      "41": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "42": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 65
        }
      },
      "43": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 40
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 31
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 28
          },
          end: {
            line: 53,
            column: 29
          }
        },
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 53
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 54,
            column: 47
          },
          end: {
            line: 54,
            column: 48
          }
        },
        loc: {
          start: {
            line: 54,
            column: 53
          },
          end: {
            line: 56,
            column: 9
          }
        },
        line: 54
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        },
        loc: {
          start: {
            line: 61,
            column: 22
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 26
          },
          end: {
            line: 63,
            column: 27
          }
        },
        loc: {
          start: {
            line: 63,
            column: 37
          },
          end: {
            line: 63,
            column: 61
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        loc: {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 89,
            column: 5
          }
        },
        line: 70
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 72,
            column: 26
          },
          end: {
            line: 72,
            column: 27
          }
        },
        loc: {
          start: {
            line: 72,
            column: 37
          },
          end: {
            line: 72,
            column: 61
          }
        },
        line: 72
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 73,
            column: 46
          },
          end: {
            line: 73,
            column: 47
          }
        },
        loc: {
          start: {
            line: 73,
            column: 51
          },
          end: {
            line: 73,
            column: 62
          }
        },
        line: 73
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        loc: {
          start: {
            line: 92,
            column: 26
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 92
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 94,
            column: 26
          },
          end: {
            line: 94,
            column: 27
          }
        },
        loc: {
          start: {
            line: 94,
            column: 37
          },
          end: {
            line: 94,
            column: 61
          }
        },
        line: 94
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 110,
            column: 7
          }
        },
        loc: {
          start: {
            line: 110,
            column: 30
          },
          end: {
            line: 131,
            column: 5
          }
        },
        line: 110
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 112,
            column: 26
          },
          end: {
            line: 112,
            column: 27
          }
        },
        loc: {
          start: {
            line: 112,
            column: 37
          },
          end: {
            line: 112,
            column: 61
          }
        },
        line: 112
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 113,
            column: 47
          },
          end: {
            line: 113,
            column: 48
          }
        },
        loc: {
          start: {
            line: 113,
            column: 52
          },
          end: {
            line: 113,
            column: 63
          }
        },
        line: 113
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 134,
            column: 6
          },
          end: {
            line: 134,
            column: 7
          }
        },
        loc: {
          start: {
            line: 134,
            column: 24
          },
          end: {
            line: 142,
            column: 5
          }
        },
        line: 134
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 136,
            column: 26
          },
          end: {
            line: 136,
            column: 27
          }
        },
        loc: {
          start: {
            line: 136,
            column: 37
          },
          end: {
            line: 136,
            column: 61
          }
        },
        line: 136
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 137,
            column: 47
          },
          end: {
            line: 137,
            column: 48
          }
        },
        loc: {
          start: {
            line: 137,
            column: 52
          },
          end: {
            line: 137,
            column: 63
          }
        },
        line: 137
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 74,
            column: 8
          },
          end: {
            line: 76,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 74
      },
      "1": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "2": {
        loc: {
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 118,
            column: 8
          },
          end: {
            line: 120,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 118
      },
      "3": {
        loc: {
          start: {
            line: 125,
            column: 18
          },
          end: {
            line: 125,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 125,
            column: 18
          },
          end: {
            line: 125,
            column: 27
          }
        }, {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 53
          }
        }],
        line: 125
      },
      "4": {
        loc: {
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 126,
            column: 25
          },
          end: {
            line: 126,
            column: 41
          }
        }, {
          start: {
            line: 126,
            column: 45
          },
          end: {
            line: 126,
            column: 74
          }
        }],
        line: 126
      },
      "5": {
        loc: {
          start: {
            line: 127,
            column: 22
          },
          end: {
            line: 127,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 22
          },
          end: {
            line: 127,
            column: 35
          }
        }, {
          start: {
            line: 127,
            column: 39
          },
          end: {
            line: 127,
            column: 65
          }
        }],
        line: 127
      },
      "6": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/lib/api/dashboard.api.ts"],
      sourcesContent: ["/**\n * Dashboard API Client\n * RESTful API operations for dashboard management\n */\n\nimport type { Dashboard, DashboardListItem, CreateDashboardRequest, UpdateDashboardRequest } from '@/types/dashboard.types';\n\n// Initial mock data for development - will be replaced with real API calls\nconst initialMockDashboards: DashboardListItem[] = [\n  {\n    id: 'dash-1',\n    name: 'Sales Analytics',\n    description: 'Comprehensive sales performance tracking',\n    isPublic: false,\n    updatedAt: new Date('2024-01-15T10:30:00Z'),\n    widgetCount: 5,\n  },\n  {\n    id: 'dash-2', \n    name: 'Marketing Campaign',\n    description: 'Track campaign performance across channels',\n    isPublic: true,\n    updatedAt: new Date('2024-01-14T16:45:00Z'),\n    widgetCount: 3,\n  },\n  {\n    id: 'dash-3',\n    name: 'Customer Insights',\n    description: 'Customer behavior and demographics analysis',\n    isPublic: false,\n    updatedAt: new Date('2024-01-13T09:15:00Z'),\n    widgetCount: 4,\n  },\n];\n\n// Working copy of mock data that can be mutated\nlet mockDashboards = [...initialMockDashboards];\n\n// Reset function for testing\nexport const resetMockDashboards = (): void => {\n  mockDashboards = initialMockDashboards.map(d => ({ ...d }));\n};\n\nexport const dashboardApi = {\n  /**\n   * Get all dashboards\n   */\n  async getAll(): Promise<DashboardListItem[]> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    return [...mockDashboards];\n  },\n\n  /**\n   * Get dashboard by ID\n   */\n  async getById(id: string): Promise<Dashboard> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 300));\n    \n    const dashboard = mockDashboards.find(d => d.id === id);\n    if (!dashboard) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    // Convert to full dashboard object\n    return {\n      ...dashboard,\n      createdAt: new Date('2024-01-01T10:00:00Z'),\n      widgets: [],\n      settings: {\n        backgroundColor: '#f8fafc',\n        gridSize: 24,\n        autoRefresh: true,\n        refreshInterval: 300,\n      },\n    };\n  },\n\n  /**\n   * Create new dashboard\n   */\n  async create(data: CreateDashboardRequest): Promise<{ dashboardId: string }> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    const newDashboard: DashboardListItem = {\n      id: `dash-${Date.now()}`,\n      name: data.name,\n      description: data.description,\n      isPublic: data.isPublic,\n      updatedAt: new Date(),\n      widgetCount: 0,\n    };\n\n    mockDashboards.push(newDashboard);\n    \n    return { dashboardId: newDashboard.id };\n  },\n\n  /**\n   * Update existing dashboard\n   */\n  async update(id: string, data: UpdateDashboardRequest): Promise<void> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 600));\n    \n    const index = mockDashboards.findIndex(d => d.id === id);\n    if (index === -1) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    const existingDashboard = mockDashboards[index];\n    if (!existingDashboard) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n    \n    mockDashboards[index] = {\n      ...existingDashboard,\n      ...data,\n      id: existingDashboard.id, // Preserve required id\n      name: data.name ?? existingDashboard.name,\n      description: data.description ?? existingDashboard.description,\n      isPublic: data.isPublic ?? existingDashboard.isPublic,\n      updatedAt: new Date(),\n      widgetCount: existingDashboard.widgetCount, // Preserve required widgetCount\n    };\n  },\n\n  /**\n   * Delete dashboard\n   */\n  async delete(id: string): Promise<void> {\n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 400));\n    \n    const index = mockDashboards.findIndex(d => d.id === id);\n    if (index === -1) {\n      throw new Error(`Dashboard with ID ${id} not found`);\n    }\n\n    mockDashboards.splice(index, 1);\n  },\n};"],
      names: ["dashboardApi", "resetMockDashboards", "initialMockDashboards", "id", "name", "description", "isPublic", "updatedAt", "Date", "widgetCount", "mockDashboards", "map", "d", "getAll", "Promise", "resolve", "setTimeout", "getById", "dashboard", "find", "Error", "createdAt", "widgets", "settings", "backgroundColor", "gridSize", "autoRefresh", "refreshInterval", "create", "data", "newDashboard", "now", "push", "dashboardId", "update", "index", "findIndex", "existingDashboard", "delete", "splice"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6356ce5f41388238b0c733b70e1149e8454c959c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_5xcv0t4ss = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_5xcv0t4ss();
cov_5xcv0t4ss().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_5xcv0t4ss().f[0]++;
  cov_5xcv0t4ss().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_5xcv0t4ss().s[3]++;
_export(exports, {
  get dashboardApi() {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[1]++;
    cov_5xcv0t4ss().s[4]++;
    return dashboardApi;
  },
  get resetMockDashboards() {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[2]++;
    cov_5xcv0t4ss().s[5]++;
    return resetMockDashboards;
  }
});
// Initial mock data for development - will be replaced with real API calls
const initialMockDashboards =
/* istanbul ignore next */
(cov_5xcv0t4ss().s[6]++, [{
  id: 'dash-1',
  name: 'Sales Analytics',
  description: 'Comprehensive sales performance tracking',
  isPublic: false,
  updatedAt: new Date('2024-01-15T10:30:00Z'),
  widgetCount: 5
}, {
  id: 'dash-2',
  name: 'Marketing Campaign',
  description: 'Track campaign performance across channels',
  isPublic: true,
  updatedAt: new Date('2024-01-14T16:45:00Z'),
  widgetCount: 3
}, {
  id: 'dash-3',
  name: 'Customer Insights',
  description: 'Customer behavior and demographics analysis',
  isPublic: false,
  updatedAt: new Date('2024-01-13T09:15:00Z'),
  widgetCount: 4
}]);
// Working copy of mock data that can be mutated
let mockDashboards =
/* istanbul ignore next */
(cov_5xcv0t4ss().s[7]++, [...initialMockDashboards]);
/* istanbul ignore next */
cov_5xcv0t4ss().s[8]++;
const resetMockDashboards = () => {
  /* istanbul ignore next */
  cov_5xcv0t4ss().f[3]++;
  cov_5xcv0t4ss().s[9]++;
  mockDashboards = initialMockDashboards.map(d => {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[4]++;
    cov_5xcv0t4ss().s[10]++;
    return {
      ...d
    };
  });
};
const dashboardApi =
/* istanbul ignore next */
(cov_5xcv0t4ss().s[11]++, {
  /**
  * Get all dashboards
  */
  async getAll() {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[5]++;
    cov_5xcv0t4ss().s[12]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[6]++;
      cov_5xcv0t4ss().s[13]++;
      return setTimeout(resolve, 500);
    });
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[14]++;
    return [...mockDashboards];
  },
  /**
  * Get dashboard by ID
  */
  async getById(id) {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[7]++;
    cov_5xcv0t4ss().s[15]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[8]++;
      cov_5xcv0t4ss().s[16]++;
      return setTimeout(resolve, 300);
    });
    const dashboard =
    /* istanbul ignore next */
    (cov_5xcv0t4ss().s[17]++, mockDashboards.find(d => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[9]++;
      cov_5xcv0t4ss().s[18]++;
      return d.id === id;
    }));
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[19]++;
    if (!dashboard) {
      /* istanbul ignore next */
      cov_5xcv0t4ss().b[0][0]++;
      cov_5xcv0t4ss().s[20]++;
      throw new Error(`Dashboard with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_5xcv0t4ss().b[0][1]++;
    }
    // Convert to full dashboard object
    cov_5xcv0t4ss().s[21]++;
    return {
      ...dashboard,
      createdAt: new Date('2024-01-01T10:00:00Z'),
      widgets: [],
      settings: {
        backgroundColor: '#f8fafc',
        gridSize: 24,
        autoRefresh: true,
        refreshInterval: 300
      }
    };
  },
  /**
  * Create new dashboard
  */
  async create(data) {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[10]++;
    cov_5xcv0t4ss().s[22]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[11]++;
      cov_5xcv0t4ss().s[23]++;
      return setTimeout(resolve, 800);
    });
    const newDashboard =
    /* istanbul ignore next */
    (cov_5xcv0t4ss().s[24]++, {
      id: `dash-${Date.now()}`,
      name: data.name,
      description: data.description,
      isPublic: data.isPublic,
      updatedAt: new Date(),
      widgetCount: 0
    });
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[25]++;
    mockDashboards.push(newDashboard);
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[26]++;
    return {
      dashboardId: newDashboard.id
    };
  },
  /**
  * Update existing dashboard
  */
  async update(id, data) {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[12]++;
    cov_5xcv0t4ss().s[27]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[13]++;
      cov_5xcv0t4ss().s[28]++;
      return setTimeout(resolve, 600);
    });
    const index =
    /* istanbul ignore next */
    (cov_5xcv0t4ss().s[29]++, mockDashboards.findIndex(d => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[14]++;
      cov_5xcv0t4ss().s[30]++;
      return d.id === id;
    }));
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[31]++;
    if (index === -1) {
      /* istanbul ignore next */
      cov_5xcv0t4ss().b[1][0]++;
      cov_5xcv0t4ss().s[32]++;
      throw new Error(`Dashboard with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_5xcv0t4ss().b[1][1]++;
    }
    const existingDashboard =
    /* istanbul ignore next */
    (cov_5xcv0t4ss().s[33]++, mockDashboards[index]);
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[34]++;
    if (!existingDashboard) {
      /* istanbul ignore next */
      cov_5xcv0t4ss().b[2][0]++;
      cov_5xcv0t4ss().s[35]++;
      throw new Error(`Dashboard with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_5xcv0t4ss().b[2][1]++;
    }
    cov_5xcv0t4ss().s[36]++;
    mockDashboards[index] = {
      ...existingDashboard,
      ...data,
      id: existingDashboard.id,
      name:
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[3][0]++, data.name) ??
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[3][1]++, existingDashboard.name),
      description:
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[4][0]++, data.description) ??
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[4][1]++, existingDashboard.description),
      isPublic:
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[5][0]++, data.isPublic) ??
      /* istanbul ignore next */
      (cov_5xcv0t4ss().b[5][1]++, existingDashboard.isPublic),
      updatedAt: new Date(),
      widgetCount: existingDashboard.widgetCount
    };
  },
  /**
  * Delete dashboard
  */
  async delete(id) {
    /* istanbul ignore next */
    cov_5xcv0t4ss().f[15]++;
    cov_5xcv0t4ss().s[37]++;
    // Simulate API delay
    await new Promise(resolve => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[16]++;
      cov_5xcv0t4ss().s[38]++;
      return setTimeout(resolve, 400);
    });
    const index =
    /* istanbul ignore next */
    (cov_5xcv0t4ss().s[39]++, mockDashboards.findIndex(d => {
      /* istanbul ignore next */
      cov_5xcv0t4ss().f[17]++;
      cov_5xcv0t4ss().s[40]++;
      return d.id === id;
    }));
    /* istanbul ignore next */
    cov_5xcv0t4ss().s[41]++;
    if (index === -1) {
      /* istanbul ignore next */
      cov_5xcv0t4ss().b[6][0]++;
      cov_5xcv0t4ss().s[42]++;
      throw new Error(`Dashboard with ID ${id} not found`);
    } else
    /* istanbul ignore next */
    {
      cov_5xcv0t4ss().b[6][1]++;
    }
    cov_5xcv0t4ss().s[43]++;
    mockDashboards.splice(index, 1);
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,