{"version":3,"sources":["/Users/zweigen/Sites/daten-see-v2/src/hooks/useDashboards.ts"],"sourcesContent":["/**\n * Dashboard Management Hooks\n * TanStack Query hooks for dashboard operations\n */\n\nimport { useQuery, useMutation, useQueryClient, UseQueryResult, UseMutationResult } from '@tanstack/react-query';\n\nimport { dashboardApi } from '@/lib/api/dashboard';\nimport { createQueryOptions } from '@/lib/tanstack-query/config';\nimport type { Dashboard, CreateDashboardRequest, UpdateDashboardRequest } from '@/types';\nimport { apiQueryKeys } from '@/types';\n\n/**\n * Hook to fetch all dashboards\n * Integrates TanStack Query with Zustand Store\n */\nexport function useDashboards(): UseQueryResult<Dashboard[], Error> {\n  return useQuery<Dashboard[], Error>({\n    ...createQueryOptions.dashboard(),\n    queryKey: apiQueryKeys.dashboards,\n    queryFn: () => dashboardApi.getDashboards(),\n  });\n}\n\n/**\n * Hook to fetch single dashboard\n */\nexport function useDashboard(dashboardId: string): UseQueryResult<Dashboard, Error> {\n  return useQuery({\n    ...createQueryOptions.dashboard(dashboardId),\n    queryKey: apiQueryKeys.dashboard(dashboardId),\n    queryFn: () => dashboardApi.getDashboard(dashboardId),\n    enabled: !!dashboardId,\n  });\n}\n\n/**\n * Hook to create dashboard\n */\nexport function useCreateDashboard(): UseMutationResult<Dashboard, Error, CreateDashboardRequest, unknown> {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: dashboardApi.createDashboard,\n    onSuccess: () => {\n      // Invalidate and refetch dashboards\n      queryClient.invalidateQueries({ queryKey: apiQueryKeys.dashboards });\n    },\n  });\n}\n\n/**\n * Hook to update dashboard\n */\nexport function useUpdateDashboard(dashboardId: string): UseMutationResult<Dashboard, Error, UpdateDashboardRequest, unknown> {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (data: UpdateDashboardRequest) => dashboardApi.updateDashboard(dashboardId, data),\n    onSuccess: () => {\n      // Invalidate specific dashboard and list\n      queryClient.invalidateQueries({ queryKey: apiQueryKeys.dashboard(dashboardId) });\n      queryClient.invalidateQueries({ queryKey: apiQueryKeys.dashboards });\n    },\n  });\n}\n\n/**\n * Hook to delete dashboard\n */\nexport function useDeleteDashboard(): UseMutationResult<void, Error, string, unknown> {\n  const queryClient = useQueryClient();\n\n  return useMutation({\n    mutationFn: (dashboardId: string) => dashboardApi.deleteDashboard(dashboardId),\n    onSuccess: () => {\n      // Invalidate dashboards list\n      queryClient.invalidateQueries({ queryKey: apiQueryKeys.dashboards });\n    },\n  });\n}"],"names":["useCreateDashboard","useDashboard","useDashboards","useDeleteDashboard","useUpdateDashboard","useQuery","createQueryOptions","dashboard","queryKey","apiQueryKeys","dashboards","queryFn","dashboardApi","getDashboards","dashboardId","getDashboard","enabled","queryClient","useQueryClient","useMutation","mutationFn","createDashboard","onSuccess","invalidateQueries","data","updateDashboard","deleteDashboard"],"mappings":"AAAA;;;CAGC;;;;;;;;;;;QAoCeA;eAAAA;;QAZAC;eAAAA;;QAXAC;eAAAA;;QAsDAC;eAAAA;;QAhBAC;eAAAA;;;4BAjDyE;2BAE5D;wBACM;uBAEN;AAMtB,SAASF;IACd,OAAOG,IAAAA,oBAAQ,EAAqB;QAClC,GAAGC,0BAAkB,CAACC,SAAS,EAAE;QACjCC,UAAUC,mBAAY,CAACC,UAAU;QACjCC,SAAS,IAAMC,uBAAY,CAACC,aAAa;IAC3C;AACF;AAKO,SAASZ,aAAaa,WAAmB;IAC9C,OAAOT,IAAAA,oBAAQ,EAAC;QACd,GAAGC,0BAAkB,CAACC,SAAS,CAACO,YAAY;QAC5CN,UAAUC,mBAAY,CAACF,SAAS,CAACO;QACjCH,SAAS,IAAMC,uBAAY,CAACG,YAAY,CAACD;QACzCE,SAAS,CAAC,CAACF;IACb;AACF;AAKO,SAASd;IACd,MAAMiB,cAAcC,IAAAA,0BAAc;IAElC,OAAOC,IAAAA,uBAAW,EAAC;QACjBC,YAAYR,uBAAY,CAACS,eAAe;QACxCC,WAAW;YACT,oCAAoC;YACpCL,YAAYM,iBAAiB,CAAC;gBAAEf,UAAUC,mBAAY,CAACC,UAAU;YAAC;QACpE;IACF;AACF;AAKO,SAASN,mBAAmBU,WAAmB;IACpD,MAAMG,cAAcC,IAAAA,0BAAc;IAElC,OAAOC,IAAAA,uBAAW,EAAC;QACjBC,YAAY,CAACI,OAAiCZ,uBAAY,CAACa,eAAe,CAACX,aAAaU;QACxFF,WAAW;YACT,yCAAyC;YACzCL,YAAYM,iBAAiB,CAAC;gBAAEf,UAAUC,mBAAY,CAACF,SAAS,CAACO;YAAa;YAC9EG,YAAYM,iBAAiB,CAAC;gBAAEf,UAAUC,mBAAY,CAACC,UAAU;YAAC;QACpE;IACF;AACF;AAKO,SAASP;IACd,MAAMc,cAAcC,IAAAA,0BAAc;IAElC,OAAOC,IAAAA,uBAAW,EAAC;QACjBC,YAAY,CAACN,cAAwBF,uBAAY,CAACc,eAAe,CAACZ;QAClEQ,WAAW;YACT,6BAA6B;YAC7BL,YAAYM,iBAAiB,CAAC;gBAAEf,UAAUC,mBAAY,CAACC,UAAU;YAAC;QACpE;IACF;AACF"}