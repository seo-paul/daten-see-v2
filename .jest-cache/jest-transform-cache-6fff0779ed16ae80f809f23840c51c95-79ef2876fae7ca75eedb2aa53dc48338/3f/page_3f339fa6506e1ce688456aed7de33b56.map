{"version":3,"names":["DashboardsPage","cov_lef4ldnky","f","dashboards","isLoading","error","fetchDashboards","createDashboard","updateDashboard","deleteDashboard","clearError","s","_dashboardstore","useDashboardStore","searchQuery","setSearchQuery","_react","useState","showCreateModal","setShowCreateModal","showEditModal","setShowEditModal","editingDashboard","setEditingDashboard","useEffect","filteredDashboards","filter","dashboard","b","name","toLowerCase","includes","description","handleEdit","handleDelete","id","confirm","_jsxruntime","jsxs","_MainLayout","MainLayout","jsx","className","length","_Button","Button","variant","context","onClick","leftIcon","_lucidereact","Plus","Search","type","placeholder","value","onChange","e","target","map","_DashboardCard","DashboardCard","onEdit","onDelete","_CreateDashboardModal","CreateDashboardModal","isOpen","onClose","onSubmit","_EditDashboardModal","EditDashboardModal"],"sources":["/Users/zweigen/Sites/daten-see-v2/src/app/dashboard-uebersicht/page.tsx"],"sourcesContent":["'use client';\n\nimport { Plus, Search } from 'lucide-react';\nimport { useEffect, useState } from 'react';\n\nimport { CreateDashboardModal } from '@/components/dashboard/CreateDashboardModal';\nimport { DashboardCard } from '@/components/dashboard/DashboardCard';\nimport { EditDashboardModal } from '@/components/dashboard/EditDashboardModal';\nimport { MainLayout } from '@/components/layout/MainLayout';\nimport { Button } from '@/components/ui/Button';\nimport { useDashboardStore } from '@/store/dashboard.store';\nimport type { DashboardListItem } from '@/types/dashboard.types';\n\nexport default function DashboardsPage(): React.ReactElement {\n  const {\n    dashboards,\n    isLoading,\n    error,\n    fetchDashboards,\n    createDashboard,\n    updateDashboard,\n    deleteDashboard,\n    clearError\n  } = useDashboardStore();\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showCreateModal, setShowCreateModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editingDashboard, setEditingDashboard] = useState<DashboardListItem | null>(null);\n\n  // Load dashboards on mount\n  useEffect(() => {\n    fetchDashboards();\n  }, [fetchDashboards]);\n\n  // Filter dashboards based on search query\n  const filteredDashboards = dashboards.filter(dashboard =>\n    dashboard.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    dashboard.description.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const handleEdit = (dashboard: DashboardListItem): void => {\n    setEditingDashboard(dashboard);\n    setShowEditModal(true);\n  };\n\n  const handleDelete = async (id: string): Promise<void> => {\n    if (confirm('Sind Sie sicher, dass Sie dieses Dashboard löschen möchten?')) {\n      await deleteDashboard(id);\n    }\n  };\n\n  return (\n    <MainLayout>\n      <div className=\"px-6 py-8\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Header */}\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-8\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-[#3d3d3d]\">\n                Dashboard-Übersicht\n              </h1>\n              <p className=\"text-sm text-[#5d5d5d] mt-1\">\n                {dashboards.length > 0 \n                  ? `${dashboards.length} Dashboard${dashboards.length === 1 ? '' : 's'} verfügbar`\n                  : 'Noch keine Dashboards erstellt'\n                }\n              </p>\n            </div>\n\n            <Button\n              variant=\"primary\"\n              context=\"page\"\n              onClick={() => setShowCreateModal(true)}\n              leftIcon={<Plus className=\"w-4 h-4\" />}\n            >\n              Neues Dashboard\n            </Button>\n          </div>\n\n          {/* Search Bar */}\n          {dashboards.length > 0 && (\n            <div className=\"relative mb-6\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-[#5d5d5d] w-5 h-5\" />\n              <input\n                type=\"text\"\n                placeholder=\"Dashboards durchsuchen...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"w-full pl-10 pr-4 py-2 border border-[#E6D7B8] rounded-lg focus:outline-none focus:ring-2 focus:ring-[#2F4F73] focus:border-transparent\"\n              />\n            </div>\n          )}\n\n          {/* Error Message */}\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center\">\n                  <div className=\"text-red-600 text-sm\">\n                    <strong>Fehler:</strong> {error}\n                  </div>\n                </div>\n                <button\n                  onClick={clearError}\n                  className=\"text-red-600 hover:text-red-800 text-sm underline\"\n                >\n                  Schließen\n                </button>\n              </div>\n            </div>\n          )}\n\n          {/* Loading State */}\n          {isLoading && dashboards.length === 0 && (\n            <div className=\"bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-8\">\n              <div className=\"text-center text-[#5d5d5d]\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-[#FBF5ED] rounded-lg flex items-center justify-center animate-pulse\">\n                  <div className=\"w-8 h-8 border-2 border-[#E6D7B8] border-dashed rounded animate-spin\"></div>\n                </div>\n                <p className=\"text-lg font-medium\">Lade Dashboards...</p>\n              </div>\n            </div>\n          )}\n\n          {/* Dashboard Grid */}\n          {!isLoading && filteredDashboards.length > 0 && (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredDashboards.map(dashboard => (\n                <DashboardCard\n                  key={dashboard.id}\n                  dashboard={dashboard}\n                  onEdit={handleEdit}\n                  onDelete={handleDelete}\n                />\n              ))}\n            </div>\n          )}\n\n          {/* Empty State */}\n          {!isLoading && dashboards.length === 0 && (\n            <div className=\"bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-8\">\n              <div className=\"text-center text-[#5d5d5d]\">\n                <div className=\"w-16 h-16 mx-auto mb-4 bg-[#FBF5ED] rounded-lg flex items-center justify-center\">\n                  <div className=\"w-8 h-8 border-2 border-[#E6D7B8] border-dashed rounded\"></div>\n                </div>\n                <p className=\"text-lg font-medium mb-2\">Noch keine Dashboards</p>\n                <p className=\"text-sm text-[#5d5d5d] mb-4\">\n                  Erstellen Sie Ihr erstes Dashboard, um loszulegen.\n                </p>\n                <Button\n                  variant=\"primary\"\n                  context=\"page\"\n                  onClick={() => setShowCreateModal(true)}\n                >\n                  Erstes Dashboard erstellen\n                </Button>\n              </div>\n            </div>\n          )}\n\n          {/* No Search Results */}\n          {!isLoading && dashboards.length > 0 && filteredDashboards.length === 0 && (\n            <div className=\"bg-[#FDF9F3] rounded-lg border border-[#E6D7B8] p-8\">\n              <div className=\"text-center text-[#5d5d5d]\">\n                <Search className=\"w-16 h-16 mx-auto mb-4 text-[#E6D7B8]\" />\n                <p className=\"text-lg font-medium mb-2\">Keine Suchergebnisse</p>\n                <p className=\"text-sm text-[#5d5d5d]\">\n                  Keine Dashboards gefunden für &quot;{searchQuery}&quot;\n                </p>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Modals */}\n      <CreateDashboardModal\n        isOpen={showCreateModal}\n        onClose={() => setShowCreateModal(false)}\n        onSubmit={createDashboard}\n        isLoading={isLoading}\n      />\n\n      <EditDashboardModal\n        dashboard={editingDashboard}\n        isOpen={showEditModal}\n        onClose={() => {\n          setShowEditModal(false);\n          setEditingDashboard(null);\n        }}\n        onSubmit={updateDashboard}\n        isLoading={isLoading}\n      />\n    </MainLayout>\n  );\n}"],"mappingsaA;;;;;;WAAwBA,cAAA;;;;;;;;iCAXK;;;iCACO;;;iCAEC;;;iCACP;;;iCACK;;;iCACR;;;kCACJ;;;kCACW;AAGnB,SAASA,eAAA;EAAA;EAAAC,aAAA,GAAAC,CAAA;EACtB,MAAM;IACJC,UAAU;IACVC,SAAS;IACTC,KAAK;IACLC,eAAe;IACfC,eAAe;IACfC,eAAe;IACfC,eAAe;IACfC;EAAU,CACX;EAAA;EAAA,CAAAT,aAAA,GAAAU,CAAA,QAAG,IAAAC,eAAA,CAAAC,iBAAiB;EAErB,MAAM,CAACC,WAAA,EAAaC,cAAA,CAAe;EAAA;EAAA,CAAAd,aAAA,GAAAU,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAC;EAC/C,MAAM,CAACC,eAAA,EAAiBC,kBAAA,CAAmB;EAAA;EAAA,CAAAlB,aAAA,GAAAU,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAC;EACvD,MAAM,CAACG,aAAA,EAAeC,gBAAA,CAAiB;EAAA;EAAA,CAAApB,aAAA,GAAAU,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAC;EACnD,MAAM,CAACK,gBAAA,EAAkBC,mBAAA,CAAoB;EAAA;EAAA,CAAAtB,aAAA,GAAAU,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAA2B;EAEnF;EAAA;EAAAhB,aAAA,GAAAU,CAAA;EACA,IAAAK,MAAA,CAAAQ,SAAS,EAAC;IAAA;IAAAvB,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAU,CAAA;IACRL,eAAA;EACF,GAAG,CAACA,eAAA,CAAgB;EAEpB;EACA,MAAMmB,kBAAA;EAAA;EAAA,CAAAxB,aAAA,GAAAU,CAAA,QAAqBR,UAAA,CAAWuB,MAAM,CAACC,SAAA,IAC3C;IAAA;IAAA1B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAU,CAAA;IAAA,kCAAAV,aAAA,GAAA2B,CAAA,UAAAD,SAAA,CAAUE,IAAI,CAACC,WAAW,GAAGC,QAAQ,CAACjB,WAAA,CAAYgB,WAAW;IAAA;IAAA,CAAA7B,aAAA,GAAA2B,CAAA,UAC7DD,SAAA,CAAUK,WAAW,CAACF,WAAW,GAAGC,QAAQ,CAACjB,WAAA,CAAYgB,WAAW;EAAA;EAAA;EAAA7B,aAAA,GAAAU,CAAA;EAGtE,MAAMsB,UAAA,GAAcN,SAAA;IAAA;IAAA1B,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAU,CAAA;IAClBY,mBAAA,CAAoBI,SAAA;IAAA;IAAA1B,aAAA,GAAAU,CAAA;IACpBU,gBAAA,CAAiB;EACnB;EAAA;EAAApB,aAAA,GAAAU,CAAA;EAEA,MAAMuB,YAAA,GAAe,MAAOC,EAAA;IAAA;IAAAlC,aAAA,GAAAC,CAAA;IAAAD,aAAA,GAAAU,CAAA;IAC1B,IAAIyB,OAAA,CAAQ,gEAAgE;MAAA;MAAAnC,aAAA,GAAA2B,CAAA;MAAA3B,aAAA,GAAAU,CAAA;MAC1E,MAAMF,eAAA,CAAgB0B,EAAA;IACxB;IAAA;IAAA;MAAAlC,aAAA,GAAA2B,CAAA;IAAA;EACF;EAAA;EAAA3B,aAAA,GAAAU,CAAA;EAEA,oBACE,IAAA0B,WAAA,CAAAC,IAAA,EAACC,WAAA,CAAAC,UAAU;4BACT,IAAAH,WAAA,CAAAI,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;QAAII,SAAA,EAAU;gCAEb,IAAAL,WAAA,CAAAC,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAL,WAAA,CAAAC,IAAA,EAAC;oCACC,IAAAD,WAAA,CAAAI,GAAA,EAAC;cAAGC,SAAA,EAAU;wBAAoC;6BAGlD,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAEC,SAAA,EAAU;wBACVvC,UAAA,CAAWwC,MAAM,GAAG;cAAA;cAAA,CAAA1C,aAAA,GAAA2B,CAAA,UACjB,GAAGzB,UAAA,CAAWwC,MAAM,aAAaxC,UAAA,CAAWwC,MAAM,KAAK;cAAA;cAAA,CAAA1C,aAAA,GAAA2B,CAAA,UAAI;cAAA;cAAA,CAAA3B,aAAA,GAAA2B,CAAA,UAAK,gBAAe;cAAA;cAAA,CAAA3B,aAAA,GAAA2B,CAAA,UAC/E;;2BAKR,IAAAS,WAAA,CAAAI,GAAA,EAACG,OAAA,CAAAC,MAAM;YACLC,OAAA,EAAQ;YACRC,OAAA,EAAQ;YACRC,OAAA,EAASA,CAAA,KAAM;cAAA;cAAA/C,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAU,CAAA;cAAA,OAAAQ,kBAAA,CAAmB;YAAA;YAClC8B,QAAA,eAAU,IAAAZ,WAAA,CAAAI,GAAA,EAACS,YAAA,CAAAC,IAAI;cAACT,SAAA,EAAU;;sBAC3B;;;QAMF;QAAA,CAAAzC,aAAA,GAAA2B,CAAA,UAAAzB,UAAA,CAAWwC,MAAM,GAAG;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,uBACnB,IAAAS,WAAA,CAAAC,IAAA,EAAC;UAAII,SAAA,EAAU;kCACb,IAAAL,WAAA,CAAAI,GAAA,EAACS,YAAA,CAAAE,MAAM;YAACV,SAAA,EAAU;2BAClB,IAAAL,WAAA,CAAAI,GAAA,EAAC;YACCY,IAAA,EAAK;YACLC,WAAA,EAAY;YACZC,KAAA,EAAOzC,WAAA;YACP0C,QAAA,EAAWC,CAAA,IAAM;cAAA;cAAAxD,aAAA,GAAAC,CAAA;cAAAD,aAAA,GAAAU,CAAA;cAAA,OAAAI,cAAA,CAAe0C,CAAA,CAAEC,MAAM,CAACH,KAAK;YAAA;YAC9Cb,SAAA,EAAU;;;QAMf;QAAA,CAAAzC,aAAA,GAAA2B,CAAA,UAAAvB,KAAA;QAAA;QAAA,CAAAJ,aAAA,GAAA2B,CAAA,uBACC,IAAAS,WAAA,CAAAI,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;YAAII,SAAA,EAAU;oCACb,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;gBAAII,SAAA,EAAU;wCACb,IAAAL,WAAA,CAAAI,GAAA,EAAC;4BAAO;oBAAgB,KAAEpC,KAAA;;6BAG9B,IAAAgC,WAAA,CAAAI,GAAA,EAAC;cACCO,OAAA,EAAStC,UAAA;cACTgC,SAAA,EAAU;wBACX;;;;QAQN;QAAA,CAAAzC,aAAA,GAAA2B,CAAA,UAAAxB,SAAA;QAAA;QAAA,CAAAH,aAAA,GAAA2B,CAAA,UAAazB,UAAA,CAAWwC,MAAM,KAAK;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,uBAClC,IAAAS,WAAA,CAAAI,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;YAAII,SAAA,EAAU;oCACb,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACb,iBAAAL,WAAA,CAAAI,GAAA,EAAC;gBAAIC,SAAA,EAAU;;6BAEjB,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAAsB;;;;QAMxC;QAAA,CAAAzC,aAAA,GAAA2B,CAAA,WAACxB,SAAA;QAAA;QAAA,CAAAH,aAAA,GAAA2B,CAAA,UAAaH,kBAAA,CAAmBkB,MAAM,GAAG;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,uBACzC,IAAAS,WAAA,CAAAI,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACZjB,kBAAA,CAAmBkC,GAAG,CAAChC,SAAA,IACtB;YAAA;YAAA1B,aAAA,GAAAC,CAAA;YAAAD,aAAA,GAAAU,CAAA;YAAA,OADsB,aACtB,IAAA0B,WAAA,CAAAI,GAAA,EAACmB,cAAA,CAAAC,aAAa;cAEZlC,SAAA,EAAWA,SAAA;cACXmC,MAAA,EAAQ7B,UAAA;cACR8B,QAAA,EAAU7B;eAHLP,SAAA,CAAUQ,EAAE;UAAA;;QAUxB;QAAA,CAAAlC,aAAA,GAAA2B,CAAA,WAACxB,SAAA;QAAA;QAAA,CAAAH,aAAA,GAAA2B,CAAA,UAAazB,UAAA,CAAWwC,MAAM,KAAK;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,uBACnC,IAAAS,WAAA,CAAAI,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;YAAII,SAAA,EAAU;oCACb,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAIC,SAAA,EAAU;wBACb,iBAAAL,WAAA,CAAAI,GAAA,EAAC;gBAAIC,SAAA,EAAU;;6BAEjB,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAA2B;6BACxC,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAA8B;6BAG3C,IAAAL,WAAA,CAAAI,GAAA,EAACG,OAAA,CAAAC,MAAM;cACLC,OAAA,EAAQ;cACRC,OAAA,EAAQ;cACRC,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAA/C,aAAA,GAAAC,CAAA;gBAAAD,aAAA,GAAAU,CAAA;gBAAA,OAAAQ,kBAAA,CAAmB;cAAA;wBACnC;;;;QAQN;QAAA,CAAAlB,aAAA,GAAA2B,CAAA,WAACxB,SAAA;QAAA;QAAA,CAAAH,aAAA,GAAA2B,CAAA,UAAazB,UAAA,CAAWwC,MAAM,GAAG;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,UAAKH,kBAAA,CAAmBkB,MAAM,KAAK;QAAA;QAAA,CAAA1C,aAAA,GAAA2B,CAAA,uBACpE,IAAAS,WAAA,CAAAI,GAAA,EAAC;UAAIC,SAAA,EAAU;oBACb,iBAAAL,WAAA,CAAAC,IAAA,EAAC;YAAII,SAAA,EAAU;oCACb,IAAAL,WAAA,CAAAI,GAAA,EAACS,YAAA,CAAAE,MAAM;cAACV,SAAA,EAAU;6BAClB,IAAAL,WAAA,CAAAI,GAAA,EAAC;cAAEC,SAAA,EAAU;wBAA2B;6BACxC,IAAAL,WAAA,CAAAC,IAAA,EAAC;cAAEI,SAAA,EAAU;yBAAyB,sCACC5B,WAAA,EAAY;;;;;qBAS7D,IAAAuB,WAAA,CAAAI,GAAA,EAACuB,qBAAA,CAAAC,oBAAoB;MACnBC,MAAA,EAAQhD,eAAA;MACRiD,OAAA,EAASA,CAAA,KAAM;QAAA;QAAAlE,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAU,CAAA;QAAA,OAAAQ,kBAAA,CAAmB;MAAA;MAClCiD,QAAA,EAAU7D,eAAA;MACVH,SAAA,EAAWA;qBAGb,IAAAiC,WAAA,CAAAI,GAAA,EAAC4B,mBAAA,CAAAC,kBAAkB;MACjB3C,SAAA,EAAWL,gBAAA;MACX4C,MAAA,EAAQ9C,aAAA;MACR+C,OAAA,EAASA,CAAA;QAAA;QAAAlE,aAAA,GAAAC,CAAA;QAAAD,aAAA,GAAAU,CAAA;QACPU,gBAAA,CAAiB;QAAA;QAAApB,aAAA,GAAAU,CAAA;QACjBY,mBAAA,CAAoB;MACtB;MACA6C,QAAA,EAAU5D,eAAA;MACVJ,SAAA,EAAWA;;;AAInB","ignoreList":[]}