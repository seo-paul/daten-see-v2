695d658e76bbd5c2721c9c70dfb86b78
"use strict";

/* istanbul ignore next */
function cov_z0t7xwbja() {
  var path = "/Users/zweigen/Sites/daten-see-v2/src/types/api.types.ts";
  var hash = "7e0d15ad10e8f924938a8e7d46ba2cb497b3d77a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/zweigen/Sites/daten-see-v2/src/types/api.types.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 4
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "2": {
        start: {
          line: 6,
          column: 24
        },
        end: {
          line: 9,
          column: 7
        }
      },
      "3": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 60,
          column: 3
        }
      },
      "4": {
        start: {
          line: 13,
          column: 8
        },
        end: {
          line: 13,
          column: 30
        }
      },
      "5": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 33
        }
      },
      "6": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 44
        }
      },
      "7": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "8": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "9": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 45
        }
      },
      "10": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 43
        }
      },
      "11": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 34
        }
      },
      "12": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 35
        }
      },
      "13": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 32
        }
      },
      "14": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "15": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 42
        }
      },
      "16": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "17": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 46
        }
      },
      "18": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "19": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 41
        }
      },
      "20": {
        start: {
          line: 61,
          column: 13
        },
        end: {
          line: 61,
          column: 27
        }
      },
      "21": {
        start: {
          line: 62,
          column: 26
        },
        end: {
          line: 66,
          column: 2
        }
      },
      "22": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 75,
          column: 2
        }
      },
      "23": {
        start: {
          line: 76,
          column: 25
        },
        end: {
          line: 83,
          column: 2
        }
      },
      "24": {
        start: {
          line: 84,
          column: 36
        },
        end: {
          line: 96,
          column: 2
        }
      },
      "25": {
        start: {
          line: 97,
          column: 38
        },
        end: {
          line: 131,
          column: 2
        }
      },
      "26": {
        start: {
          line: 132,
          column: 37
        },
        end: {
          line: 142,
          column: 2
        }
      },
      "27": {
        start: {
          line: 143,
          column: 37
        },
        end: {
          line: 154,
          column: 2
        }
      },
      "28": {
        start: {
          line: 155,
          column: 38
        },
        end: {
          line: 159,
          column: 2
        }
      },
      "29": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 163,
          column: 2
        }
      },
      "30": {
        start: {
          line: 164,
          column: 28
        },
        end: {
          line: 180,
          column: 2
        }
      },
      "31": {
        start: {
          line: 181,
          column: 34
        },
        end: {
          line: 183,
          column: 2
        }
      },
      "32": {
        start: {
          line: 184,
          column: 35
        },
        end: {
          line: 189,
          column: 2
        }
      },
      "33": {
        start: {
          line: 190,
          column: 34
        },
        end: {
          line: 205,
          column: 2
        }
      },
      "34": {
        start: {
          line: 206,
          column: 39
        },
        end: {
          line: 209,
          column: 2
        }
      },
      "35": {
        start: {
          line: 210,
          column: 34
        },
        end: {
          line: 225,
          column: 2
        }
      },
      "36": {
        start: {
          line: 226,
          column: 34
        },
        end: {
          line: 236,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 5,
            column: 9
          },
          end: {
            line: 5,
            column: 16
          }
        },
        loc: {
          start: {
            line: 5,
            column: 30
          },
          end: {
            line: 10,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 4
          },
          end: {
            line: 12,
            column: 5
          }
        },
        loc: {
          start: {
            line: 12,
            column: 26
          },
          end: {
            line: 14,
            column: 5
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 29
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 40
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        loc: {
          start: {
            line: 21,
            column: 41
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 37
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        loc: {
          start: {
            line: 27,
            column: 41
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        loc: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        loc: {
          start: {
            line: 33,
            column: 30
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        loc: {
          start: {
            line: 39,
            column: 28
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        loc: {
          start: {
            line: 42,
            column: 37
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        loc: {
          start: {
            line: 45,
            column: 38
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        loc: {
          start: {
            line: 48,
            column: 40
          },
          end: {
            line: 50,
            column: 5
          }
        },
        line: 48
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        loc: {
          start: {
            line: 51,
            column: 42
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 56,
            column: 5
          }
        },
        line: 54
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        loc: {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 59,
            column: 5
          }
        },
        line: 57
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {},
    inputSourceMap: {
      version: 3,
      sources: ["/Users/zweigen/Sites/daten-see-v2/src/types/api.types.ts"],
      sourcesContent: ["import { z } from 'zod';\n\n// Base API Response Schema\nexport const ApiResponseSchema = z.object({\n  success: z.boolean(),\n  message: z.string().optional(),\n  timestamp: z.string().datetime(),\n});\n\n// Error Response Schema\nexport const ApiErrorSchema = z.object({\n  success: z.literal(false),\n  error: z.object({\n    code: z.string(),\n    message: z.string(),\n    details: z.record(z.unknown()).optional(),\n  }),\n  timestamp: z.string().datetime(),\n});\n\n// Pagination Schema\nexport const PaginationSchema = z.object({\n  page: z.number().int().positive(),\n  limit: z.number().int().positive(),\n  total: z.number().int().nonnegative(),\n  totalPages: z.number().int().nonnegative(),\n  hasNext: z.boolean(),\n  hasPrev: z.boolean(),\n});\n\n// Dashboard API Types\nexport const DashboardListResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboards: z.array(z.object({\n      id: z.string(),\n      name: z.string(),\n      description: z.string(),\n      isPublic: z.boolean(),\n      updatedAt: z.string().datetime(),\n      widgetCount: z.number().int().nonnegative(),\n    })),\n    pagination: PaginationSchema.optional(),\n  }),\n});\n\nexport const DashboardDetailResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboard: z.object({\n      id: z.string(),\n      name: z.string(),\n      description: z.string(),\n      isPublic: z.boolean(),\n      createdAt: z.string().datetime(),\n      updatedAt: z.string().datetime(),\n      widgets: z.array(z.object({\n        id: z.string(),\n        type: z.enum(['chart', 'kpi', 'text']),\n        title: z.string(),\n        position: z.object({\n          x: z.number(),\n          y: z.number(),\n          w: z.number(),\n          h: z.number(),\n        }),\n        config: z.record(z.unknown()),\n        data: z.unknown(),\n      })),\n      settings: z.object({\n        backgroundColor: z.string(),\n        gridSize: z.number().int().positive(),\n        autoRefresh: z.boolean(),\n        refreshInterval: z.number().int().positive(),\n      }),\n    }),\n  }),\n});\n\nexport const CreateDashboardRequestSchema = z.object({\n  name: z.string().min(1).max(100),\n  description: z.string().max(500),\n  isPublic: z.boolean().default(false),\n  settings: z.object({\n    backgroundColor: z.string().default('#f8fafc'),\n    gridSize: z.number().int().positive().default(24),\n    autoRefresh: z.boolean().default(true),\n    refreshInterval: z.number().int().positive().default(300),\n  }).optional(),\n});\n\nexport const UpdateDashboardRequestSchema = z.object({\n  id: z.string(),\n  name: z.string().min(1).max(100).optional(),\n  description: z.string().max(500).optional(),\n  isPublic: z.boolean().optional(),\n  settings: z.object({\n    backgroundColor: z.string(),\n    gridSize: z.number().int().positive(),\n    autoRefresh: z.boolean(),\n    refreshInterval: z.number().int().positive(),\n  }).partial().optional(),\n});\n\nexport const CreateDashboardResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    dashboardId: z.string(),\n  }),\n});\n\n// Authentication API Types\nexport const LoginRequestSchema = z.object({\n  email: z.string().email(),\n  password: z.string().min(1),\n});\n\nexport const LoginResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    user: z.object({\n      id: z.string(),\n      email: z.string().email(),\n      name: z.string(),\n      role: z.enum(['user', 'admin']),\n      avatar: z.string().url().optional(),\n    }),\n    token: z.string(),\n    refreshToken: z.string(),\n    expiresAt: z.string().datetime(),\n  }),\n});\n\nexport const RefreshTokenRequestSchema = z.object({\n  refreshToken: z.string(),\n});\n\nexport const RefreshTokenResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    token: z.string(),\n    expiresAt: z.string().datetime(),\n  }),\n});\n\n// User API Types\nexport const UserProfileResponseSchema = ApiResponseSchema.extend({\n  data: z.object({\n    user: z.object({\n      id: z.string(),\n      email: z.string().email(),\n      name: z.string(),\n      role: z.enum(['user', 'admin']),\n      avatar: z.string().url().optional(),\n      createdAt: z.string().datetime(),\n      updatedAt: z.string().datetime(),\n    }),\n  }),\n});\n\nexport const UpdateUserProfileRequestSchema = z.object({\n  name: z.string().min(1).max(100).optional(),\n  avatar: z.string().url().optional(),\n});\n\n// Widget API Types\nexport const CreateWidgetRequestSchema = z.object({\n  dashboardId: z.string(),\n  type: z.enum(['chart', 'kpi', 'text']),\n  title: z.string().min(1).max(100),\n  position: z.object({\n    x: z.number().int().nonnegative(),\n    y: z.number().int().nonnegative(),\n    w: z.number().int().positive(),\n    h: z.number().int().positive(),\n  }),\n  config: z.record(z.unknown()).default({}),\n});\n\nexport const UpdateWidgetRequestSchema = z.object({\n  id: z.string(),\n  title: z.string().min(1).max(100).optional(),\n  position: z.object({\n    x: z.number().int().nonnegative(),\n    y: z.number().int().nonnegative(),\n    w: z.number().int().positive(),\n    h: z.number().int().positive(),\n  }).optional(),\n  config: z.record(z.unknown()).optional(),\n});\n\n// Export TypeScript types\nexport type ApiResponse = z.infer<typeof ApiResponseSchema>;\nexport type ApiError = z.infer<typeof ApiErrorSchema>;\nexport type Pagination = z.infer<typeof PaginationSchema>;\n\nexport type DashboardListResponse = z.infer<typeof DashboardListResponseSchema>;\nexport type DashboardDetailResponse = z.infer<typeof DashboardDetailResponseSchema>;\nexport type CreateDashboardRequest = z.infer<typeof CreateDashboardRequestSchema>;\nexport type UpdateDashboardRequest = z.infer<typeof UpdateDashboardRequestSchema>;\nexport type CreateDashboardResponse = z.infer<typeof CreateDashboardResponseSchema>;\n\nexport type LoginRequest = z.infer<typeof LoginRequestSchema>;\nexport type LoginResponse = z.infer<typeof LoginResponseSchema>;\nexport type RefreshTokenRequest = z.infer<typeof RefreshTokenRequestSchema>;\nexport type RefreshTokenResponse = z.infer<typeof RefreshTokenResponseSchema>;\n\nexport type UserProfileResponse = z.infer<typeof UserProfileResponseSchema>;\nexport type UpdateUserProfileRequest = z.infer<typeof UpdateUserProfileRequestSchema>;\n\nexport type CreateWidgetRequest = z.infer<typeof CreateWidgetRequestSchema>;\nexport type UpdateWidgetRequest = z.infer<typeof UpdateWidgetRequestSchema>;"],
      names: ["ApiErrorSchema", "ApiResponseSchema", "CreateDashboardRequestSchema", "CreateDashboardResponseSchema", "CreateWidgetRequestSchema", "DashboardDetailResponseSchema", "DashboardListResponseSchema", "LoginRequestSchema", "LoginResponseSchema", "PaginationSchema", "RefreshTokenRequestSchema", "RefreshTokenResponseSchema", "UpdateDashboardRequestSchema", "UpdateUserProfileRequestSchema", "UpdateWidgetRequestSchema", "UserProfileResponseSchema", "z", "object", "success", "boolean", "message", "string", "optional", "timestamp", "datetime", "literal", "error", "code", "details", "record", "unknown", "page", "number", "int", "positive", "limit", "total", "nonnegative", "totalPages", "hasNext", "hasPrev", "extend", "data", "dashboards", "array", "id", "name", "description", "isPublic", "updatedAt", "widgetCount", "pagination", "dashboard", "createdAt", "widgets", "type", "enum", "title", "position", "x", "y", "w", "h", "config", "settings", "backgroundColor", "gridSize", "autoRefresh", "refreshInterval", "min", "max", "default", "partial", "dashboardId", "email", "password", "user", "role", "avatar", "url", "token", "refreshToken", "expiresAt"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7e0d15ad10e8f924938a8e7d46ba2cb497b3d77a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_z0t7xwbja = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_z0t7xwbja();
cov_z0t7xwbja().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_z0t7xwbja().f[0]++;
  cov_z0t7xwbja().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_z0t7xwbja().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_z0t7xwbja().s[3]++;
_export(exports, {
  get ApiErrorSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[1]++;
    cov_z0t7xwbja().s[4]++;
    return ApiErrorSchema;
  },
  get ApiResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[2]++;
    cov_z0t7xwbja().s[5]++;
    return ApiResponseSchema;
  },
  get CreateDashboardRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[3]++;
    cov_z0t7xwbja().s[6]++;
    return CreateDashboardRequestSchema;
  },
  get CreateDashboardResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[4]++;
    cov_z0t7xwbja().s[7]++;
    return CreateDashboardResponseSchema;
  },
  get CreateWidgetRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[5]++;
    cov_z0t7xwbja().s[8]++;
    return CreateWidgetRequestSchema;
  },
  get DashboardDetailResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[6]++;
    cov_z0t7xwbja().s[9]++;
    return DashboardDetailResponseSchema;
  },
  get DashboardListResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[7]++;
    cov_z0t7xwbja().s[10]++;
    return DashboardListResponseSchema;
  },
  get LoginRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[8]++;
    cov_z0t7xwbja().s[11]++;
    return LoginRequestSchema;
  },
  get LoginResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[9]++;
    cov_z0t7xwbja().s[12]++;
    return LoginResponseSchema;
  },
  get PaginationSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[10]++;
    cov_z0t7xwbja().s[13]++;
    return PaginationSchema;
  },
  get RefreshTokenRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[11]++;
    cov_z0t7xwbja().s[14]++;
    return RefreshTokenRequestSchema;
  },
  get RefreshTokenResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[12]++;
    cov_z0t7xwbja().s[15]++;
    return RefreshTokenResponseSchema;
  },
  get UpdateDashboardRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[13]++;
    cov_z0t7xwbja().s[16]++;
    return UpdateDashboardRequestSchema;
  },
  get UpdateUserProfileRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[14]++;
    cov_z0t7xwbja().s[17]++;
    return UpdateUserProfileRequestSchema;
  },
  get UpdateWidgetRequestSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[15]++;
    cov_z0t7xwbja().s[18]++;
    return UpdateWidgetRequestSchema;
  },
  get UserProfileResponseSchema() {
    /* istanbul ignore next */
    cov_z0t7xwbja().f[16]++;
    cov_z0t7xwbja().s[19]++;
    return UserProfileResponseSchema;
  }
});
const _zod =
/* istanbul ignore next */
(cov_z0t7xwbja().s[20]++, require("zod"));
const ApiResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[21]++, _zod.z.object({
  success: _zod.z.boolean(),
  message: _zod.z.string().optional(),
  timestamp: _zod.z.string().datetime()
}));
const ApiErrorSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[22]++, _zod.z.object({
  success: _zod.z.literal(false),
  error: _zod.z.object({
    code: _zod.z.string(),
    message: _zod.z.string(),
    details: _zod.z.record(_zod.z.unknown()).optional()
  }),
  timestamp: _zod.z.string().datetime()
}));
const PaginationSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[23]++, _zod.z.object({
  page: _zod.z.number().int().positive(),
  limit: _zod.z.number().int().positive(),
  total: _zod.z.number().int().nonnegative(),
  totalPages: _zod.z.number().int().nonnegative(),
  hasNext: _zod.z.boolean(),
  hasPrev: _zod.z.boolean()
}));
const DashboardListResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[24]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    dashboards: _zod.z.array(_zod.z.object({
      id: _zod.z.string(),
      name: _zod.z.string(),
      description: _zod.z.string(),
      isPublic: _zod.z.boolean(),
      updatedAt: _zod.z.string().datetime(),
      widgetCount: _zod.z.number().int().nonnegative()
    })),
    pagination: PaginationSchema.optional()
  })
}));
const DashboardDetailResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[25]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    dashboard: _zod.z.object({
      id: _zod.z.string(),
      name: _zod.z.string(),
      description: _zod.z.string(),
      isPublic: _zod.z.boolean(),
      createdAt: _zod.z.string().datetime(),
      updatedAt: _zod.z.string().datetime(),
      widgets: _zod.z.array(_zod.z.object({
        id: _zod.z.string(),
        type: _zod.z.enum(['chart', 'kpi', 'text']),
        title: _zod.z.string(),
        position: _zod.z.object({
          x: _zod.z.number(),
          y: _zod.z.number(),
          w: _zod.z.number(),
          h: _zod.z.number()
        }),
        config: _zod.z.record(_zod.z.unknown()),
        data: _zod.z.unknown()
      })),
      settings: _zod.z.object({
        backgroundColor: _zod.z.string(),
        gridSize: _zod.z.number().int().positive(),
        autoRefresh: _zod.z.boolean(),
        refreshInterval: _zod.z.number().int().positive()
      })
    })
  })
}));
const CreateDashboardRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[26]++, _zod.z.object({
  name: _zod.z.string().min(1).max(100),
  description: _zod.z.string().max(500),
  isPublic: _zod.z.boolean().default(false),
  settings: _zod.z.object({
    backgroundColor: _zod.z.string().default('#f8fafc'),
    gridSize: _zod.z.number().int().positive().default(24),
    autoRefresh: _zod.z.boolean().default(true),
    refreshInterval: _zod.z.number().int().positive().default(300)
  }).optional()
}));
const UpdateDashboardRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[27]++, _zod.z.object({
  id: _zod.z.string(),
  name: _zod.z.string().min(1).max(100).optional(),
  description: _zod.z.string().max(500).optional(),
  isPublic: _zod.z.boolean().optional(),
  settings: _zod.z.object({
    backgroundColor: _zod.z.string(),
    gridSize: _zod.z.number().int().positive(),
    autoRefresh: _zod.z.boolean(),
    refreshInterval: _zod.z.number().int().positive()
  }).partial().optional()
}));
const CreateDashboardResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[28]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    dashboardId: _zod.z.string()
  })
}));
const LoginRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[29]++, _zod.z.object({
  email: _zod.z.string().email(),
  password: _zod.z.string().min(1)
}));
const LoginResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[30]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    user: _zod.z.object({
      id: _zod.z.string(),
      email: _zod.z.string().email(),
      name: _zod.z.string(),
      role: _zod.z.enum(['user', 'admin']),
      avatar: _zod.z.string().url().optional()
    }),
    token: _zod.z.string(),
    refreshToken: _zod.z.string(),
    expiresAt: _zod.z.string().datetime()
  })
}));
const RefreshTokenRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[31]++, _zod.z.object({
  refreshToken: _zod.z.string()
}));
const RefreshTokenResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[32]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    token: _zod.z.string(),
    expiresAt: _zod.z.string().datetime()
  })
}));
const UserProfileResponseSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[33]++, ApiResponseSchema.extend({
  data: _zod.z.object({
    user: _zod.z.object({
      id: _zod.z.string(),
      email: _zod.z.string().email(),
      name: _zod.z.string(),
      role: _zod.z.enum(['user', 'admin']),
      avatar: _zod.z.string().url().optional(),
      createdAt: _zod.z.string().datetime(),
      updatedAt: _zod.z.string().datetime()
    })
  })
}));
const UpdateUserProfileRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[34]++, _zod.z.object({
  name: _zod.z.string().min(1).max(100).optional(),
  avatar: _zod.z.string().url().optional()
}));
const CreateWidgetRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[35]++, _zod.z.object({
  dashboardId: _zod.z.string(),
  type: _zod.z.enum(['chart', 'kpi', 'text']),
  title: _zod.z.string().min(1).max(100),
  position: _zod.z.object({
    x: _zod.z.number().int().nonnegative(),
    y: _zod.z.number().int().nonnegative(),
    w: _zod.z.number().int().positive(),
    h: _zod.z.number().int().positive()
  }),
  config: _zod.z.record(_zod.z.unknown()).default({})
}));
const UpdateWidgetRequestSchema =
/* istanbul ignore next */
(cov_z0t7xwbja().s[36]++, _zod.z.object({
  id: _zod.z.string(),
  title: _zod.z.string().min(1).max(100).optional(),
  position: _zod.z.object({
    x: _zod.z.number().int().nonnegative(),
    y: _zod.z.number().int().nonnegative(),
    w: _zod.z.number().int().positive(),
    h: _zod.z.number().int().positive()
  }).optional(),
  config: _zod.z.record(_zod.z.unknown()).optional()
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,